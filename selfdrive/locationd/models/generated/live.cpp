#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1837242654657482381) {
   out_1837242654657482381[0] = 0;
   out_1837242654657482381[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1837242654657482381[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1837242654657482381[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1837242654657482381[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1837242654657482381[5] = -sin(in_vec[1]);
   out_1837242654657482381[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1837242654657482381[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1837242654657482381[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1837242654657482381[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1837242654657482381[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1837242654657482381[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1837242654657482381[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1837242654657482381[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1837242654657482381[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1837242654657482381[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1837242654657482381[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1837242654657482381[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1049287755312093099) {
   out_1049287755312093099[0] = delta_x[0] + nom_x[0];
   out_1049287755312093099[1] = delta_x[1] + nom_x[1];
   out_1049287755312093099[2] = delta_x[2] + nom_x[2];
   out_1049287755312093099[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1049287755312093099[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1049287755312093099[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1049287755312093099[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1049287755312093099[7] = delta_x[6] + nom_x[7];
   out_1049287755312093099[8] = delta_x[7] + nom_x[8];
   out_1049287755312093099[9] = delta_x[8] + nom_x[9];
   out_1049287755312093099[10] = delta_x[9] + nom_x[10];
   out_1049287755312093099[11] = delta_x[10] + nom_x[11];
   out_1049287755312093099[12] = delta_x[11] + nom_x[12];
   out_1049287755312093099[13] = delta_x[12] + nom_x[13];
   out_1049287755312093099[14] = delta_x[13] + nom_x[14];
   out_1049287755312093099[15] = delta_x[14] + nom_x[15];
   out_1049287755312093099[16] = delta_x[15] + nom_x[16];
   out_1049287755312093099[17] = delta_x[16] + nom_x[17];
   out_1049287755312093099[18] = delta_x[17] + nom_x[18];
   out_1049287755312093099[19] = delta_x[18] + nom_x[19];
   out_1049287755312093099[20] = delta_x[19] + nom_x[20];
   out_1049287755312093099[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_51980762048143343) {
   out_51980762048143343[0] = -nom_x[0] + true_x[0];
   out_51980762048143343[1] = -nom_x[1] + true_x[1];
   out_51980762048143343[2] = -nom_x[2] + true_x[2];
   out_51980762048143343[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_51980762048143343[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_51980762048143343[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_51980762048143343[6] = -nom_x[7] + true_x[7];
   out_51980762048143343[7] = -nom_x[8] + true_x[8];
   out_51980762048143343[8] = -nom_x[9] + true_x[9];
   out_51980762048143343[9] = -nom_x[10] + true_x[10];
   out_51980762048143343[10] = -nom_x[11] + true_x[11];
   out_51980762048143343[11] = -nom_x[12] + true_x[12];
   out_51980762048143343[12] = -nom_x[13] + true_x[13];
   out_51980762048143343[13] = -nom_x[14] + true_x[14];
   out_51980762048143343[14] = -nom_x[15] + true_x[15];
   out_51980762048143343[15] = -nom_x[16] + true_x[16];
   out_51980762048143343[16] = -nom_x[17] + true_x[17];
   out_51980762048143343[17] = -nom_x[18] + true_x[18];
   out_51980762048143343[18] = -nom_x[19] + true_x[19];
   out_51980762048143343[19] = -nom_x[20] + true_x[20];
   out_51980762048143343[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_36641115734452068) {
   out_36641115734452068[0] = 1.0;
   out_36641115734452068[1] = 0;
   out_36641115734452068[2] = 0;
   out_36641115734452068[3] = 0;
   out_36641115734452068[4] = 0;
   out_36641115734452068[5] = 0;
   out_36641115734452068[6] = 0;
   out_36641115734452068[7] = 0;
   out_36641115734452068[8] = 0;
   out_36641115734452068[9] = 0;
   out_36641115734452068[10] = 0;
   out_36641115734452068[11] = 0;
   out_36641115734452068[12] = 0;
   out_36641115734452068[13] = 0;
   out_36641115734452068[14] = 0;
   out_36641115734452068[15] = 0;
   out_36641115734452068[16] = 0;
   out_36641115734452068[17] = 0;
   out_36641115734452068[18] = 0;
   out_36641115734452068[19] = 0;
   out_36641115734452068[20] = 0;
   out_36641115734452068[21] = 0;
   out_36641115734452068[22] = 1.0;
   out_36641115734452068[23] = 0;
   out_36641115734452068[24] = 0;
   out_36641115734452068[25] = 0;
   out_36641115734452068[26] = 0;
   out_36641115734452068[27] = 0;
   out_36641115734452068[28] = 0;
   out_36641115734452068[29] = 0;
   out_36641115734452068[30] = 0;
   out_36641115734452068[31] = 0;
   out_36641115734452068[32] = 0;
   out_36641115734452068[33] = 0;
   out_36641115734452068[34] = 0;
   out_36641115734452068[35] = 0;
   out_36641115734452068[36] = 0;
   out_36641115734452068[37] = 0;
   out_36641115734452068[38] = 0;
   out_36641115734452068[39] = 0;
   out_36641115734452068[40] = 0;
   out_36641115734452068[41] = 0;
   out_36641115734452068[42] = 0;
   out_36641115734452068[43] = 0;
   out_36641115734452068[44] = 1.0;
   out_36641115734452068[45] = 0;
   out_36641115734452068[46] = 0;
   out_36641115734452068[47] = 0;
   out_36641115734452068[48] = 0;
   out_36641115734452068[49] = 0;
   out_36641115734452068[50] = 0;
   out_36641115734452068[51] = 0;
   out_36641115734452068[52] = 0;
   out_36641115734452068[53] = 0;
   out_36641115734452068[54] = 0;
   out_36641115734452068[55] = 0;
   out_36641115734452068[56] = 0;
   out_36641115734452068[57] = 0;
   out_36641115734452068[58] = 0;
   out_36641115734452068[59] = 0;
   out_36641115734452068[60] = 0;
   out_36641115734452068[61] = 0;
   out_36641115734452068[62] = 0;
   out_36641115734452068[63] = 0;
   out_36641115734452068[64] = 0;
   out_36641115734452068[65] = 0;
   out_36641115734452068[66] = -0.5*state[4];
   out_36641115734452068[67] = -0.5*state[5];
   out_36641115734452068[68] = -0.5*state[6];
   out_36641115734452068[69] = 0;
   out_36641115734452068[70] = 0;
   out_36641115734452068[71] = 0;
   out_36641115734452068[72] = 0;
   out_36641115734452068[73] = 0;
   out_36641115734452068[74] = 0;
   out_36641115734452068[75] = 0;
   out_36641115734452068[76] = 0;
   out_36641115734452068[77] = 0;
   out_36641115734452068[78] = 0;
   out_36641115734452068[79] = 0;
   out_36641115734452068[80] = 0;
   out_36641115734452068[81] = 0;
   out_36641115734452068[82] = 0;
   out_36641115734452068[83] = 0;
   out_36641115734452068[84] = 0;
   out_36641115734452068[85] = 0;
   out_36641115734452068[86] = 0;
   out_36641115734452068[87] = 0.5*state[3];
   out_36641115734452068[88] = 0.5*state[6];
   out_36641115734452068[89] = -0.5*state[5];
   out_36641115734452068[90] = 0;
   out_36641115734452068[91] = 0;
   out_36641115734452068[92] = 0;
   out_36641115734452068[93] = 0;
   out_36641115734452068[94] = 0;
   out_36641115734452068[95] = 0;
   out_36641115734452068[96] = 0;
   out_36641115734452068[97] = 0;
   out_36641115734452068[98] = 0;
   out_36641115734452068[99] = 0;
   out_36641115734452068[100] = 0;
   out_36641115734452068[101] = 0;
   out_36641115734452068[102] = 0;
   out_36641115734452068[103] = 0;
   out_36641115734452068[104] = 0;
   out_36641115734452068[105] = 0;
   out_36641115734452068[106] = 0;
   out_36641115734452068[107] = 0;
   out_36641115734452068[108] = -0.5*state[6];
   out_36641115734452068[109] = 0.5*state[3];
   out_36641115734452068[110] = 0.5*state[4];
   out_36641115734452068[111] = 0;
   out_36641115734452068[112] = 0;
   out_36641115734452068[113] = 0;
   out_36641115734452068[114] = 0;
   out_36641115734452068[115] = 0;
   out_36641115734452068[116] = 0;
   out_36641115734452068[117] = 0;
   out_36641115734452068[118] = 0;
   out_36641115734452068[119] = 0;
   out_36641115734452068[120] = 0;
   out_36641115734452068[121] = 0;
   out_36641115734452068[122] = 0;
   out_36641115734452068[123] = 0;
   out_36641115734452068[124] = 0;
   out_36641115734452068[125] = 0;
   out_36641115734452068[126] = 0;
   out_36641115734452068[127] = 0;
   out_36641115734452068[128] = 0;
   out_36641115734452068[129] = 0.5*state[5];
   out_36641115734452068[130] = -0.5*state[4];
   out_36641115734452068[131] = 0.5*state[3];
   out_36641115734452068[132] = 0;
   out_36641115734452068[133] = 0;
   out_36641115734452068[134] = 0;
   out_36641115734452068[135] = 0;
   out_36641115734452068[136] = 0;
   out_36641115734452068[137] = 0;
   out_36641115734452068[138] = 0;
   out_36641115734452068[139] = 0;
   out_36641115734452068[140] = 0;
   out_36641115734452068[141] = 0;
   out_36641115734452068[142] = 0;
   out_36641115734452068[143] = 0;
   out_36641115734452068[144] = 0;
   out_36641115734452068[145] = 0;
   out_36641115734452068[146] = 0;
   out_36641115734452068[147] = 0;
   out_36641115734452068[148] = 0;
   out_36641115734452068[149] = 0;
   out_36641115734452068[150] = 0;
   out_36641115734452068[151] = 0;
   out_36641115734452068[152] = 0;
   out_36641115734452068[153] = 1.0;
   out_36641115734452068[154] = 0;
   out_36641115734452068[155] = 0;
   out_36641115734452068[156] = 0;
   out_36641115734452068[157] = 0;
   out_36641115734452068[158] = 0;
   out_36641115734452068[159] = 0;
   out_36641115734452068[160] = 0;
   out_36641115734452068[161] = 0;
   out_36641115734452068[162] = 0;
   out_36641115734452068[163] = 0;
   out_36641115734452068[164] = 0;
   out_36641115734452068[165] = 0;
   out_36641115734452068[166] = 0;
   out_36641115734452068[167] = 0;
   out_36641115734452068[168] = 0;
   out_36641115734452068[169] = 0;
   out_36641115734452068[170] = 0;
   out_36641115734452068[171] = 0;
   out_36641115734452068[172] = 0;
   out_36641115734452068[173] = 0;
   out_36641115734452068[174] = 0;
   out_36641115734452068[175] = 1.0;
   out_36641115734452068[176] = 0;
   out_36641115734452068[177] = 0;
   out_36641115734452068[178] = 0;
   out_36641115734452068[179] = 0;
   out_36641115734452068[180] = 0;
   out_36641115734452068[181] = 0;
   out_36641115734452068[182] = 0;
   out_36641115734452068[183] = 0;
   out_36641115734452068[184] = 0;
   out_36641115734452068[185] = 0;
   out_36641115734452068[186] = 0;
   out_36641115734452068[187] = 0;
   out_36641115734452068[188] = 0;
   out_36641115734452068[189] = 0;
   out_36641115734452068[190] = 0;
   out_36641115734452068[191] = 0;
   out_36641115734452068[192] = 0;
   out_36641115734452068[193] = 0;
   out_36641115734452068[194] = 0;
   out_36641115734452068[195] = 0;
   out_36641115734452068[196] = 0;
   out_36641115734452068[197] = 1.0;
   out_36641115734452068[198] = 0;
   out_36641115734452068[199] = 0;
   out_36641115734452068[200] = 0;
   out_36641115734452068[201] = 0;
   out_36641115734452068[202] = 0;
   out_36641115734452068[203] = 0;
   out_36641115734452068[204] = 0;
   out_36641115734452068[205] = 0;
   out_36641115734452068[206] = 0;
   out_36641115734452068[207] = 0;
   out_36641115734452068[208] = 0;
   out_36641115734452068[209] = 0;
   out_36641115734452068[210] = 0;
   out_36641115734452068[211] = 0;
   out_36641115734452068[212] = 0;
   out_36641115734452068[213] = 0;
   out_36641115734452068[214] = 0;
   out_36641115734452068[215] = 0;
   out_36641115734452068[216] = 0;
   out_36641115734452068[217] = 0;
   out_36641115734452068[218] = 0;
   out_36641115734452068[219] = 1.0;
   out_36641115734452068[220] = 0;
   out_36641115734452068[221] = 0;
   out_36641115734452068[222] = 0;
   out_36641115734452068[223] = 0;
   out_36641115734452068[224] = 0;
   out_36641115734452068[225] = 0;
   out_36641115734452068[226] = 0;
   out_36641115734452068[227] = 0;
   out_36641115734452068[228] = 0;
   out_36641115734452068[229] = 0;
   out_36641115734452068[230] = 0;
   out_36641115734452068[231] = 0;
   out_36641115734452068[232] = 0;
   out_36641115734452068[233] = 0;
   out_36641115734452068[234] = 0;
   out_36641115734452068[235] = 0;
   out_36641115734452068[236] = 0;
   out_36641115734452068[237] = 0;
   out_36641115734452068[238] = 0;
   out_36641115734452068[239] = 0;
   out_36641115734452068[240] = 0;
   out_36641115734452068[241] = 1.0;
   out_36641115734452068[242] = 0;
   out_36641115734452068[243] = 0;
   out_36641115734452068[244] = 0;
   out_36641115734452068[245] = 0;
   out_36641115734452068[246] = 0;
   out_36641115734452068[247] = 0;
   out_36641115734452068[248] = 0;
   out_36641115734452068[249] = 0;
   out_36641115734452068[250] = 0;
   out_36641115734452068[251] = 0;
   out_36641115734452068[252] = 0;
   out_36641115734452068[253] = 0;
   out_36641115734452068[254] = 0;
   out_36641115734452068[255] = 0;
   out_36641115734452068[256] = 0;
   out_36641115734452068[257] = 0;
   out_36641115734452068[258] = 0;
   out_36641115734452068[259] = 0;
   out_36641115734452068[260] = 0;
   out_36641115734452068[261] = 0;
   out_36641115734452068[262] = 0;
   out_36641115734452068[263] = 1.0;
   out_36641115734452068[264] = 0;
   out_36641115734452068[265] = 0;
   out_36641115734452068[266] = 0;
   out_36641115734452068[267] = 0;
   out_36641115734452068[268] = 0;
   out_36641115734452068[269] = 0;
   out_36641115734452068[270] = 0;
   out_36641115734452068[271] = 0;
   out_36641115734452068[272] = 0;
   out_36641115734452068[273] = 0;
   out_36641115734452068[274] = 0;
   out_36641115734452068[275] = 0;
   out_36641115734452068[276] = 0;
   out_36641115734452068[277] = 0;
   out_36641115734452068[278] = 0;
   out_36641115734452068[279] = 0;
   out_36641115734452068[280] = 0;
   out_36641115734452068[281] = 0;
   out_36641115734452068[282] = 0;
   out_36641115734452068[283] = 0;
   out_36641115734452068[284] = 0;
   out_36641115734452068[285] = 1.0;
   out_36641115734452068[286] = 0;
   out_36641115734452068[287] = 0;
   out_36641115734452068[288] = 0;
   out_36641115734452068[289] = 0;
   out_36641115734452068[290] = 0;
   out_36641115734452068[291] = 0;
   out_36641115734452068[292] = 0;
   out_36641115734452068[293] = 0;
   out_36641115734452068[294] = 0;
   out_36641115734452068[295] = 0;
   out_36641115734452068[296] = 0;
   out_36641115734452068[297] = 0;
   out_36641115734452068[298] = 0;
   out_36641115734452068[299] = 0;
   out_36641115734452068[300] = 0;
   out_36641115734452068[301] = 0;
   out_36641115734452068[302] = 0;
   out_36641115734452068[303] = 0;
   out_36641115734452068[304] = 0;
   out_36641115734452068[305] = 0;
   out_36641115734452068[306] = 0;
   out_36641115734452068[307] = 1.0;
   out_36641115734452068[308] = 0;
   out_36641115734452068[309] = 0;
   out_36641115734452068[310] = 0;
   out_36641115734452068[311] = 0;
   out_36641115734452068[312] = 0;
   out_36641115734452068[313] = 0;
   out_36641115734452068[314] = 0;
   out_36641115734452068[315] = 0;
   out_36641115734452068[316] = 0;
   out_36641115734452068[317] = 0;
   out_36641115734452068[318] = 0;
   out_36641115734452068[319] = 0;
   out_36641115734452068[320] = 0;
   out_36641115734452068[321] = 0;
   out_36641115734452068[322] = 0;
   out_36641115734452068[323] = 0;
   out_36641115734452068[324] = 0;
   out_36641115734452068[325] = 0;
   out_36641115734452068[326] = 0;
   out_36641115734452068[327] = 0;
   out_36641115734452068[328] = 0;
   out_36641115734452068[329] = 1.0;
   out_36641115734452068[330] = 0;
   out_36641115734452068[331] = 0;
   out_36641115734452068[332] = 0;
   out_36641115734452068[333] = 0;
   out_36641115734452068[334] = 0;
   out_36641115734452068[335] = 0;
   out_36641115734452068[336] = 0;
   out_36641115734452068[337] = 0;
   out_36641115734452068[338] = 0;
   out_36641115734452068[339] = 0;
   out_36641115734452068[340] = 0;
   out_36641115734452068[341] = 0;
   out_36641115734452068[342] = 0;
   out_36641115734452068[343] = 0;
   out_36641115734452068[344] = 0;
   out_36641115734452068[345] = 0;
   out_36641115734452068[346] = 0;
   out_36641115734452068[347] = 0;
   out_36641115734452068[348] = 0;
   out_36641115734452068[349] = 0;
   out_36641115734452068[350] = 0;
   out_36641115734452068[351] = 1.0;
   out_36641115734452068[352] = 0;
   out_36641115734452068[353] = 0;
   out_36641115734452068[354] = 0;
   out_36641115734452068[355] = 0;
   out_36641115734452068[356] = 0;
   out_36641115734452068[357] = 0;
   out_36641115734452068[358] = 0;
   out_36641115734452068[359] = 0;
   out_36641115734452068[360] = 0;
   out_36641115734452068[361] = 0;
   out_36641115734452068[362] = 0;
   out_36641115734452068[363] = 0;
   out_36641115734452068[364] = 0;
   out_36641115734452068[365] = 0;
   out_36641115734452068[366] = 0;
   out_36641115734452068[367] = 0;
   out_36641115734452068[368] = 0;
   out_36641115734452068[369] = 0;
   out_36641115734452068[370] = 0;
   out_36641115734452068[371] = 0;
   out_36641115734452068[372] = 0;
   out_36641115734452068[373] = 1.0;
   out_36641115734452068[374] = 0;
   out_36641115734452068[375] = 0;
   out_36641115734452068[376] = 0;
   out_36641115734452068[377] = 0;
   out_36641115734452068[378] = 0;
   out_36641115734452068[379] = 0;
   out_36641115734452068[380] = 0;
   out_36641115734452068[381] = 0;
   out_36641115734452068[382] = 0;
   out_36641115734452068[383] = 0;
   out_36641115734452068[384] = 0;
   out_36641115734452068[385] = 0;
   out_36641115734452068[386] = 0;
   out_36641115734452068[387] = 0;
   out_36641115734452068[388] = 0;
   out_36641115734452068[389] = 0;
   out_36641115734452068[390] = 0;
   out_36641115734452068[391] = 0;
   out_36641115734452068[392] = 0;
   out_36641115734452068[393] = 0;
   out_36641115734452068[394] = 0;
   out_36641115734452068[395] = 1.0;
   out_36641115734452068[396] = 0;
   out_36641115734452068[397] = 0;
   out_36641115734452068[398] = 0;
   out_36641115734452068[399] = 0;
   out_36641115734452068[400] = 0;
   out_36641115734452068[401] = 0;
   out_36641115734452068[402] = 0;
   out_36641115734452068[403] = 0;
   out_36641115734452068[404] = 0;
   out_36641115734452068[405] = 0;
   out_36641115734452068[406] = 0;
   out_36641115734452068[407] = 0;
   out_36641115734452068[408] = 0;
   out_36641115734452068[409] = 0;
   out_36641115734452068[410] = 0;
   out_36641115734452068[411] = 0;
   out_36641115734452068[412] = 0;
   out_36641115734452068[413] = 0;
   out_36641115734452068[414] = 0;
   out_36641115734452068[415] = 0;
   out_36641115734452068[416] = 0;
   out_36641115734452068[417] = 1.0;
   out_36641115734452068[418] = 0;
   out_36641115734452068[419] = 0;
   out_36641115734452068[420] = 0;
   out_36641115734452068[421] = 0;
   out_36641115734452068[422] = 0;
   out_36641115734452068[423] = 0;
   out_36641115734452068[424] = 0;
   out_36641115734452068[425] = 0;
   out_36641115734452068[426] = 0;
   out_36641115734452068[427] = 0;
   out_36641115734452068[428] = 0;
   out_36641115734452068[429] = 0;
   out_36641115734452068[430] = 0;
   out_36641115734452068[431] = 0;
   out_36641115734452068[432] = 0;
   out_36641115734452068[433] = 0;
   out_36641115734452068[434] = 0;
   out_36641115734452068[435] = 0;
   out_36641115734452068[436] = 0;
   out_36641115734452068[437] = 0;
   out_36641115734452068[438] = 0;
   out_36641115734452068[439] = 1.0;
   out_36641115734452068[440] = 0;
   out_36641115734452068[441] = 0;
   out_36641115734452068[442] = 0;
   out_36641115734452068[443] = 0;
   out_36641115734452068[444] = 0;
   out_36641115734452068[445] = 0;
   out_36641115734452068[446] = 0;
   out_36641115734452068[447] = 0;
   out_36641115734452068[448] = 0;
   out_36641115734452068[449] = 0;
   out_36641115734452068[450] = 0;
   out_36641115734452068[451] = 0;
   out_36641115734452068[452] = 0;
   out_36641115734452068[453] = 0;
   out_36641115734452068[454] = 0;
   out_36641115734452068[455] = 0;
   out_36641115734452068[456] = 0;
   out_36641115734452068[457] = 0;
   out_36641115734452068[458] = 0;
   out_36641115734452068[459] = 0;
   out_36641115734452068[460] = 0;
   out_36641115734452068[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3639431347680991822) {
   out_3639431347680991822[0] = dt*state[7] + state[0];
   out_3639431347680991822[1] = dt*state[8] + state[1];
   out_3639431347680991822[2] = dt*state[9] + state[2];
   out_3639431347680991822[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3639431347680991822[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3639431347680991822[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3639431347680991822[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3639431347680991822[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3639431347680991822[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3639431347680991822[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3639431347680991822[10] = state[10];
   out_3639431347680991822[11] = state[11];
   out_3639431347680991822[12] = state[12];
   out_3639431347680991822[13] = state[13];
   out_3639431347680991822[14] = state[14];
   out_3639431347680991822[15] = state[15];
   out_3639431347680991822[16] = state[16];
   out_3639431347680991822[17] = state[17];
   out_3639431347680991822[18] = state[18];
   out_3639431347680991822[19] = state[19];
   out_3639431347680991822[20] = state[20];
   out_3639431347680991822[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6769763949434269633) {
   out_6769763949434269633[0] = 1;
   out_6769763949434269633[1] = 0;
   out_6769763949434269633[2] = 0;
   out_6769763949434269633[3] = 0;
   out_6769763949434269633[4] = 0;
   out_6769763949434269633[5] = 0;
   out_6769763949434269633[6] = dt;
   out_6769763949434269633[7] = 0;
   out_6769763949434269633[8] = 0;
   out_6769763949434269633[9] = 0;
   out_6769763949434269633[10] = 0;
   out_6769763949434269633[11] = 0;
   out_6769763949434269633[12] = 0;
   out_6769763949434269633[13] = 0;
   out_6769763949434269633[14] = 0;
   out_6769763949434269633[15] = 0;
   out_6769763949434269633[16] = 0;
   out_6769763949434269633[17] = 0;
   out_6769763949434269633[18] = 0;
   out_6769763949434269633[19] = 0;
   out_6769763949434269633[20] = 0;
   out_6769763949434269633[21] = 0;
   out_6769763949434269633[22] = 1;
   out_6769763949434269633[23] = 0;
   out_6769763949434269633[24] = 0;
   out_6769763949434269633[25] = 0;
   out_6769763949434269633[26] = 0;
   out_6769763949434269633[27] = 0;
   out_6769763949434269633[28] = dt;
   out_6769763949434269633[29] = 0;
   out_6769763949434269633[30] = 0;
   out_6769763949434269633[31] = 0;
   out_6769763949434269633[32] = 0;
   out_6769763949434269633[33] = 0;
   out_6769763949434269633[34] = 0;
   out_6769763949434269633[35] = 0;
   out_6769763949434269633[36] = 0;
   out_6769763949434269633[37] = 0;
   out_6769763949434269633[38] = 0;
   out_6769763949434269633[39] = 0;
   out_6769763949434269633[40] = 0;
   out_6769763949434269633[41] = 0;
   out_6769763949434269633[42] = 0;
   out_6769763949434269633[43] = 0;
   out_6769763949434269633[44] = 1;
   out_6769763949434269633[45] = 0;
   out_6769763949434269633[46] = 0;
   out_6769763949434269633[47] = 0;
   out_6769763949434269633[48] = 0;
   out_6769763949434269633[49] = 0;
   out_6769763949434269633[50] = dt;
   out_6769763949434269633[51] = 0;
   out_6769763949434269633[52] = 0;
   out_6769763949434269633[53] = 0;
   out_6769763949434269633[54] = 0;
   out_6769763949434269633[55] = 0;
   out_6769763949434269633[56] = 0;
   out_6769763949434269633[57] = 0;
   out_6769763949434269633[58] = 0;
   out_6769763949434269633[59] = 0;
   out_6769763949434269633[60] = 0;
   out_6769763949434269633[61] = 0;
   out_6769763949434269633[62] = 0;
   out_6769763949434269633[63] = 0;
   out_6769763949434269633[64] = 0;
   out_6769763949434269633[65] = 0;
   out_6769763949434269633[66] = 1;
   out_6769763949434269633[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6769763949434269633[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6769763949434269633[69] = 0;
   out_6769763949434269633[70] = 0;
   out_6769763949434269633[71] = 0;
   out_6769763949434269633[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6769763949434269633[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6769763949434269633[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6769763949434269633[75] = 0;
   out_6769763949434269633[76] = 0;
   out_6769763949434269633[77] = 0;
   out_6769763949434269633[78] = 0;
   out_6769763949434269633[79] = 0;
   out_6769763949434269633[80] = 0;
   out_6769763949434269633[81] = 0;
   out_6769763949434269633[82] = 0;
   out_6769763949434269633[83] = 0;
   out_6769763949434269633[84] = 0;
   out_6769763949434269633[85] = 0;
   out_6769763949434269633[86] = 0;
   out_6769763949434269633[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6769763949434269633[88] = 1;
   out_6769763949434269633[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6769763949434269633[90] = 0;
   out_6769763949434269633[91] = 0;
   out_6769763949434269633[92] = 0;
   out_6769763949434269633[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6769763949434269633[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6769763949434269633[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6769763949434269633[96] = 0;
   out_6769763949434269633[97] = 0;
   out_6769763949434269633[98] = 0;
   out_6769763949434269633[99] = 0;
   out_6769763949434269633[100] = 0;
   out_6769763949434269633[101] = 0;
   out_6769763949434269633[102] = 0;
   out_6769763949434269633[103] = 0;
   out_6769763949434269633[104] = 0;
   out_6769763949434269633[105] = 0;
   out_6769763949434269633[106] = 0;
   out_6769763949434269633[107] = 0;
   out_6769763949434269633[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6769763949434269633[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6769763949434269633[110] = 1;
   out_6769763949434269633[111] = 0;
   out_6769763949434269633[112] = 0;
   out_6769763949434269633[113] = 0;
   out_6769763949434269633[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6769763949434269633[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6769763949434269633[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6769763949434269633[117] = 0;
   out_6769763949434269633[118] = 0;
   out_6769763949434269633[119] = 0;
   out_6769763949434269633[120] = 0;
   out_6769763949434269633[121] = 0;
   out_6769763949434269633[122] = 0;
   out_6769763949434269633[123] = 0;
   out_6769763949434269633[124] = 0;
   out_6769763949434269633[125] = 0;
   out_6769763949434269633[126] = 0;
   out_6769763949434269633[127] = 0;
   out_6769763949434269633[128] = 0;
   out_6769763949434269633[129] = 0;
   out_6769763949434269633[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6769763949434269633[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6769763949434269633[132] = 1;
   out_6769763949434269633[133] = 0;
   out_6769763949434269633[134] = 0;
   out_6769763949434269633[135] = 0;
   out_6769763949434269633[136] = 0;
   out_6769763949434269633[137] = 0;
   out_6769763949434269633[138] = 0;
   out_6769763949434269633[139] = 0;
   out_6769763949434269633[140] = 0;
   out_6769763949434269633[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6769763949434269633[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6769763949434269633[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6769763949434269633[144] = 0;
   out_6769763949434269633[145] = 0;
   out_6769763949434269633[146] = 0;
   out_6769763949434269633[147] = 0;
   out_6769763949434269633[148] = 0;
   out_6769763949434269633[149] = 0;
   out_6769763949434269633[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6769763949434269633[151] = 0;
   out_6769763949434269633[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6769763949434269633[153] = 0;
   out_6769763949434269633[154] = 1;
   out_6769763949434269633[155] = 0;
   out_6769763949434269633[156] = 0;
   out_6769763949434269633[157] = 0;
   out_6769763949434269633[158] = 0;
   out_6769763949434269633[159] = 0;
   out_6769763949434269633[160] = 0;
   out_6769763949434269633[161] = 0;
   out_6769763949434269633[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6769763949434269633[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6769763949434269633[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6769763949434269633[165] = 0;
   out_6769763949434269633[166] = 0;
   out_6769763949434269633[167] = 0;
   out_6769763949434269633[168] = 0;
   out_6769763949434269633[169] = 0;
   out_6769763949434269633[170] = 0;
   out_6769763949434269633[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6769763949434269633[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6769763949434269633[173] = 0;
   out_6769763949434269633[174] = 0;
   out_6769763949434269633[175] = 0;
   out_6769763949434269633[176] = 1;
   out_6769763949434269633[177] = 0;
   out_6769763949434269633[178] = 0;
   out_6769763949434269633[179] = 0;
   out_6769763949434269633[180] = 0;
   out_6769763949434269633[181] = 0;
   out_6769763949434269633[182] = 0;
   out_6769763949434269633[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6769763949434269633[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6769763949434269633[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6769763949434269633[186] = 0;
   out_6769763949434269633[187] = 0;
   out_6769763949434269633[188] = 0;
   out_6769763949434269633[189] = 0;
   out_6769763949434269633[190] = 0;
   out_6769763949434269633[191] = 0;
   out_6769763949434269633[192] = 0;
   out_6769763949434269633[193] = 0;
   out_6769763949434269633[194] = 0;
   out_6769763949434269633[195] = 0;
   out_6769763949434269633[196] = 0;
   out_6769763949434269633[197] = 0;
   out_6769763949434269633[198] = 1;
   out_6769763949434269633[199] = 0;
   out_6769763949434269633[200] = 0;
   out_6769763949434269633[201] = 0;
   out_6769763949434269633[202] = 0;
   out_6769763949434269633[203] = 0;
   out_6769763949434269633[204] = 0;
   out_6769763949434269633[205] = 0;
   out_6769763949434269633[206] = 0;
   out_6769763949434269633[207] = 0;
   out_6769763949434269633[208] = 0;
   out_6769763949434269633[209] = 0;
   out_6769763949434269633[210] = 0;
   out_6769763949434269633[211] = 0;
   out_6769763949434269633[212] = 0;
   out_6769763949434269633[213] = 0;
   out_6769763949434269633[214] = 0;
   out_6769763949434269633[215] = 0;
   out_6769763949434269633[216] = 0;
   out_6769763949434269633[217] = 0;
   out_6769763949434269633[218] = 0;
   out_6769763949434269633[219] = 0;
   out_6769763949434269633[220] = 1;
   out_6769763949434269633[221] = 0;
   out_6769763949434269633[222] = 0;
   out_6769763949434269633[223] = 0;
   out_6769763949434269633[224] = 0;
   out_6769763949434269633[225] = 0;
   out_6769763949434269633[226] = 0;
   out_6769763949434269633[227] = 0;
   out_6769763949434269633[228] = 0;
   out_6769763949434269633[229] = 0;
   out_6769763949434269633[230] = 0;
   out_6769763949434269633[231] = 0;
   out_6769763949434269633[232] = 0;
   out_6769763949434269633[233] = 0;
   out_6769763949434269633[234] = 0;
   out_6769763949434269633[235] = 0;
   out_6769763949434269633[236] = 0;
   out_6769763949434269633[237] = 0;
   out_6769763949434269633[238] = 0;
   out_6769763949434269633[239] = 0;
   out_6769763949434269633[240] = 0;
   out_6769763949434269633[241] = 0;
   out_6769763949434269633[242] = 1;
   out_6769763949434269633[243] = 0;
   out_6769763949434269633[244] = 0;
   out_6769763949434269633[245] = 0;
   out_6769763949434269633[246] = 0;
   out_6769763949434269633[247] = 0;
   out_6769763949434269633[248] = 0;
   out_6769763949434269633[249] = 0;
   out_6769763949434269633[250] = 0;
   out_6769763949434269633[251] = 0;
   out_6769763949434269633[252] = 0;
   out_6769763949434269633[253] = 0;
   out_6769763949434269633[254] = 0;
   out_6769763949434269633[255] = 0;
   out_6769763949434269633[256] = 0;
   out_6769763949434269633[257] = 0;
   out_6769763949434269633[258] = 0;
   out_6769763949434269633[259] = 0;
   out_6769763949434269633[260] = 0;
   out_6769763949434269633[261] = 0;
   out_6769763949434269633[262] = 0;
   out_6769763949434269633[263] = 0;
   out_6769763949434269633[264] = 1;
   out_6769763949434269633[265] = 0;
   out_6769763949434269633[266] = 0;
   out_6769763949434269633[267] = 0;
   out_6769763949434269633[268] = 0;
   out_6769763949434269633[269] = 0;
   out_6769763949434269633[270] = 0;
   out_6769763949434269633[271] = 0;
   out_6769763949434269633[272] = 0;
   out_6769763949434269633[273] = 0;
   out_6769763949434269633[274] = 0;
   out_6769763949434269633[275] = 0;
   out_6769763949434269633[276] = 0;
   out_6769763949434269633[277] = 0;
   out_6769763949434269633[278] = 0;
   out_6769763949434269633[279] = 0;
   out_6769763949434269633[280] = 0;
   out_6769763949434269633[281] = 0;
   out_6769763949434269633[282] = 0;
   out_6769763949434269633[283] = 0;
   out_6769763949434269633[284] = 0;
   out_6769763949434269633[285] = 0;
   out_6769763949434269633[286] = 1;
   out_6769763949434269633[287] = 0;
   out_6769763949434269633[288] = 0;
   out_6769763949434269633[289] = 0;
   out_6769763949434269633[290] = 0;
   out_6769763949434269633[291] = 0;
   out_6769763949434269633[292] = 0;
   out_6769763949434269633[293] = 0;
   out_6769763949434269633[294] = 0;
   out_6769763949434269633[295] = 0;
   out_6769763949434269633[296] = 0;
   out_6769763949434269633[297] = 0;
   out_6769763949434269633[298] = 0;
   out_6769763949434269633[299] = 0;
   out_6769763949434269633[300] = 0;
   out_6769763949434269633[301] = 0;
   out_6769763949434269633[302] = 0;
   out_6769763949434269633[303] = 0;
   out_6769763949434269633[304] = 0;
   out_6769763949434269633[305] = 0;
   out_6769763949434269633[306] = 0;
   out_6769763949434269633[307] = 0;
   out_6769763949434269633[308] = 1;
   out_6769763949434269633[309] = 0;
   out_6769763949434269633[310] = 0;
   out_6769763949434269633[311] = 0;
   out_6769763949434269633[312] = 0;
   out_6769763949434269633[313] = 0;
   out_6769763949434269633[314] = 0;
   out_6769763949434269633[315] = 0;
   out_6769763949434269633[316] = 0;
   out_6769763949434269633[317] = 0;
   out_6769763949434269633[318] = 0;
   out_6769763949434269633[319] = 0;
   out_6769763949434269633[320] = 0;
   out_6769763949434269633[321] = 0;
   out_6769763949434269633[322] = 0;
   out_6769763949434269633[323] = 0;
   out_6769763949434269633[324] = 0;
   out_6769763949434269633[325] = 0;
   out_6769763949434269633[326] = 0;
   out_6769763949434269633[327] = 0;
   out_6769763949434269633[328] = 0;
   out_6769763949434269633[329] = 0;
   out_6769763949434269633[330] = 1;
   out_6769763949434269633[331] = 0;
   out_6769763949434269633[332] = 0;
   out_6769763949434269633[333] = 0;
   out_6769763949434269633[334] = 0;
   out_6769763949434269633[335] = 0;
   out_6769763949434269633[336] = 0;
   out_6769763949434269633[337] = 0;
   out_6769763949434269633[338] = 0;
   out_6769763949434269633[339] = 0;
   out_6769763949434269633[340] = 0;
   out_6769763949434269633[341] = 0;
   out_6769763949434269633[342] = 0;
   out_6769763949434269633[343] = 0;
   out_6769763949434269633[344] = 0;
   out_6769763949434269633[345] = 0;
   out_6769763949434269633[346] = 0;
   out_6769763949434269633[347] = 0;
   out_6769763949434269633[348] = 0;
   out_6769763949434269633[349] = 0;
   out_6769763949434269633[350] = 0;
   out_6769763949434269633[351] = 0;
   out_6769763949434269633[352] = 1;
   out_6769763949434269633[353] = 0;
   out_6769763949434269633[354] = 0;
   out_6769763949434269633[355] = 0;
   out_6769763949434269633[356] = 0;
   out_6769763949434269633[357] = 0;
   out_6769763949434269633[358] = 0;
   out_6769763949434269633[359] = 0;
   out_6769763949434269633[360] = 0;
   out_6769763949434269633[361] = 0;
   out_6769763949434269633[362] = 0;
   out_6769763949434269633[363] = 0;
   out_6769763949434269633[364] = 0;
   out_6769763949434269633[365] = 0;
   out_6769763949434269633[366] = 0;
   out_6769763949434269633[367] = 0;
   out_6769763949434269633[368] = 0;
   out_6769763949434269633[369] = 0;
   out_6769763949434269633[370] = 0;
   out_6769763949434269633[371] = 0;
   out_6769763949434269633[372] = 0;
   out_6769763949434269633[373] = 0;
   out_6769763949434269633[374] = 1;
   out_6769763949434269633[375] = 0;
   out_6769763949434269633[376] = 0;
   out_6769763949434269633[377] = 0;
   out_6769763949434269633[378] = 0;
   out_6769763949434269633[379] = 0;
   out_6769763949434269633[380] = 0;
   out_6769763949434269633[381] = 0;
   out_6769763949434269633[382] = 0;
   out_6769763949434269633[383] = 0;
   out_6769763949434269633[384] = 0;
   out_6769763949434269633[385] = 0;
   out_6769763949434269633[386] = 0;
   out_6769763949434269633[387] = 0;
   out_6769763949434269633[388] = 0;
   out_6769763949434269633[389] = 0;
   out_6769763949434269633[390] = 0;
   out_6769763949434269633[391] = 0;
   out_6769763949434269633[392] = 0;
   out_6769763949434269633[393] = 0;
   out_6769763949434269633[394] = 0;
   out_6769763949434269633[395] = 0;
   out_6769763949434269633[396] = 1;
   out_6769763949434269633[397] = 0;
   out_6769763949434269633[398] = 0;
   out_6769763949434269633[399] = 0;
   out_6769763949434269633[400] = 0;
   out_6769763949434269633[401] = 0;
   out_6769763949434269633[402] = 0;
   out_6769763949434269633[403] = 0;
   out_6769763949434269633[404] = 0;
   out_6769763949434269633[405] = 0;
   out_6769763949434269633[406] = 0;
   out_6769763949434269633[407] = 0;
   out_6769763949434269633[408] = 0;
   out_6769763949434269633[409] = 0;
   out_6769763949434269633[410] = 0;
   out_6769763949434269633[411] = 0;
   out_6769763949434269633[412] = 0;
   out_6769763949434269633[413] = 0;
   out_6769763949434269633[414] = 0;
   out_6769763949434269633[415] = 0;
   out_6769763949434269633[416] = 0;
   out_6769763949434269633[417] = 0;
   out_6769763949434269633[418] = 1;
   out_6769763949434269633[419] = 0;
   out_6769763949434269633[420] = 0;
   out_6769763949434269633[421] = 0;
   out_6769763949434269633[422] = 0;
   out_6769763949434269633[423] = 0;
   out_6769763949434269633[424] = 0;
   out_6769763949434269633[425] = 0;
   out_6769763949434269633[426] = 0;
   out_6769763949434269633[427] = 0;
   out_6769763949434269633[428] = 0;
   out_6769763949434269633[429] = 0;
   out_6769763949434269633[430] = 0;
   out_6769763949434269633[431] = 0;
   out_6769763949434269633[432] = 0;
   out_6769763949434269633[433] = 0;
   out_6769763949434269633[434] = 0;
   out_6769763949434269633[435] = 0;
   out_6769763949434269633[436] = 0;
   out_6769763949434269633[437] = 0;
   out_6769763949434269633[438] = 0;
   out_6769763949434269633[439] = 0;
   out_6769763949434269633[440] = 1;
}
void h_4(double *state, double *unused, double *out_3106790310301024044) {
   out_3106790310301024044[0] = state[10] + state[13];
   out_3106790310301024044[1] = state[11] + state[14];
   out_3106790310301024044[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1791578705534762859) {
   out_1791578705534762859[0] = 0;
   out_1791578705534762859[1] = 0;
   out_1791578705534762859[2] = 0;
   out_1791578705534762859[3] = 0;
   out_1791578705534762859[4] = 0;
   out_1791578705534762859[5] = 0;
   out_1791578705534762859[6] = 0;
   out_1791578705534762859[7] = 0;
   out_1791578705534762859[8] = 0;
   out_1791578705534762859[9] = 0;
   out_1791578705534762859[10] = 1;
   out_1791578705534762859[11] = 0;
   out_1791578705534762859[12] = 0;
   out_1791578705534762859[13] = 1;
   out_1791578705534762859[14] = 0;
   out_1791578705534762859[15] = 0;
   out_1791578705534762859[16] = 0;
   out_1791578705534762859[17] = 0;
   out_1791578705534762859[18] = 0;
   out_1791578705534762859[19] = 0;
   out_1791578705534762859[20] = 0;
   out_1791578705534762859[21] = 0;
   out_1791578705534762859[22] = 0;
   out_1791578705534762859[23] = 0;
   out_1791578705534762859[24] = 0;
   out_1791578705534762859[25] = 0;
   out_1791578705534762859[26] = 0;
   out_1791578705534762859[27] = 0;
   out_1791578705534762859[28] = 0;
   out_1791578705534762859[29] = 0;
   out_1791578705534762859[30] = 0;
   out_1791578705534762859[31] = 0;
   out_1791578705534762859[32] = 0;
   out_1791578705534762859[33] = 1;
   out_1791578705534762859[34] = 0;
   out_1791578705534762859[35] = 0;
   out_1791578705534762859[36] = 1;
   out_1791578705534762859[37] = 0;
   out_1791578705534762859[38] = 0;
   out_1791578705534762859[39] = 0;
   out_1791578705534762859[40] = 0;
   out_1791578705534762859[41] = 0;
   out_1791578705534762859[42] = 0;
   out_1791578705534762859[43] = 0;
   out_1791578705534762859[44] = 0;
   out_1791578705534762859[45] = 0;
   out_1791578705534762859[46] = 0;
   out_1791578705534762859[47] = 0;
   out_1791578705534762859[48] = 0;
   out_1791578705534762859[49] = 0;
   out_1791578705534762859[50] = 0;
   out_1791578705534762859[51] = 0;
   out_1791578705534762859[52] = 0;
   out_1791578705534762859[53] = 0;
   out_1791578705534762859[54] = 0;
   out_1791578705534762859[55] = 0;
   out_1791578705534762859[56] = 1;
   out_1791578705534762859[57] = 0;
   out_1791578705534762859[58] = 0;
   out_1791578705534762859[59] = 1;
   out_1791578705534762859[60] = 0;
   out_1791578705534762859[61] = 0;
   out_1791578705534762859[62] = 0;
   out_1791578705534762859[63] = 0;
   out_1791578705534762859[64] = 0;
   out_1791578705534762859[65] = 0;
}
void h_9(double *state, double *unused, double *out_2731228141922491785) {
   out_2731228141922491785[0] = state[10];
   out_2731228141922491785[1] = state[11];
   out_2731228141922491785[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1550389058905172214) {
   out_1550389058905172214[0] = 0;
   out_1550389058905172214[1] = 0;
   out_1550389058905172214[2] = 0;
   out_1550389058905172214[3] = 0;
   out_1550389058905172214[4] = 0;
   out_1550389058905172214[5] = 0;
   out_1550389058905172214[6] = 0;
   out_1550389058905172214[7] = 0;
   out_1550389058905172214[8] = 0;
   out_1550389058905172214[9] = 0;
   out_1550389058905172214[10] = 1;
   out_1550389058905172214[11] = 0;
   out_1550389058905172214[12] = 0;
   out_1550389058905172214[13] = 0;
   out_1550389058905172214[14] = 0;
   out_1550389058905172214[15] = 0;
   out_1550389058905172214[16] = 0;
   out_1550389058905172214[17] = 0;
   out_1550389058905172214[18] = 0;
   out_1550389058905172214[19] = 0;
   out_1550389058905172214[20] = 0;
   out_1550389058905172214[21] = 0;
   out_1550389058905172214[22] = 0;
   out_1550389058905172214[23] = 0;
   out_1550389058905172214[24] = 0;
   out_1550389058905172214[25] = 0;
   out_1550389058905172214[26] = 0;
   out_1550389058905172214[27] = 0;
   out_1550389058905172214[28] = 0;
   out_1550389058905172214[29] = 0;
   out_1550389058905172214[30] = 0;
   out_1550389058905172214[31] = 0;
   out_1550389058905172214[32] = 0;
   out_1550389058905172214[33] = 1;
   out_1550389058905172214[34] = 0;
   out_1550389058905172214[35] = 0;
   out_1550389058905172214[36] = 0;
   out_1550389058905172214[37] = 0;
   out_1550389058905172214[38] = 0;
   out_1550389058905172214[39] = 0;
   out_1550389058905172214[40] = 0;
   out_1550389058905172214[41] = 0;
   out_1550389058905172214[42] = 0;
   out_1550389058905172214[43] = 0;
   out_1550389058905172214[44] = 0;
   out_1550389058905172214[45] = 0;
   out_1550389058905172214[46] = 0;
   out_1550389058905172214[47] = 0;
   out_1550389058905172214[48] = 0;
   out_1550389058905172214[49] = 0;
   out_1550389058905172214[50] = 0;
   out_1550389058905172214[51] = 0;
   out_1550389058905172214[52] = 0;
   out_1550389058905172214[53] = 0;
   out_1550389058905172214[54] = 0;
   out_1550389058905172214[55] = 0;
   out_1550389058905172214[56] = 1;
   out_1550389058905172214[57] = 0;
   out_1550389058905172214[58] = 0;
   out_1550389058905172214[59] = 0;
   out_1550389058905172214[60] = 0;
   out_1550389058905172214[61] = 0;
   out_1550389058905172214[62] = 0;
   out_1550389058905172214[63] = 0;
   out_1550389058905172214[64] = 0;
   out_1550389058905172214[65] = 0;
}
void h_10(double *state, double *unused, double *out_4460143636780078925) {
   out_4460143636780078925[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4460143636780078925[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4460143636780078925[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8453040072692771662) {
   out_8453040072692771662[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8453040072692771662[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8453040072692771662[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8453040072692771662[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8453040072692771662[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8453040072692771662[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8453040072692771662[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8453040072692771662[7] = 0;
   out_8453040072692771662[8] = 0;
   out_8453040072692771662[9] = 0;
   out_8453040072692771662[10] = 0;
   out_8453040072692771662[11] = 0;
   out_8453040072692771662[12] = 0;
   out_8453040072692771662[13] = 0;
   out_8453040072692771662[14] = 0;
   out_8453040072692771662[15] = 0;
   out_8453040072692771662[16] = 1;
   out_8453040072692771662[17] = 0;
   out_8453040072692771662[18] = 0;
   out_8453040072692771662[19] = 1;
   out_8453040072692771662[20] = 0;
   out_8453040072692771662[21] = 0;
   out_8453040072692771662[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8453040072692771662[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8453040072692771662[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8453040072692771662[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8453040072692771662[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8453040072692771662[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8453040072692771662[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8453040072692771662[29] = 0;
   out_8453040072692771662[30] = 0;
   out_8453040072692771662[31] = 0;
   out_8453040072692771662[32] = 0;
   out_8453040072692771662[33] = 0;
   out_8453040072692771662[34] = 0;
   out_8453040072692771662[35] = 0;
   out_8453040072692771662[36] = 0;
   out_8453040072692771662[37] = 0;
   out_8453040072692771662[38] = 0;
   out_8453040072692771662[39] = 1;
   out_8453040072692771662[40] = 0;
   out_8453040072692771662[41] = 0;
   out_8453040072692771662[42] = 1;
   out_8453040072692771662[43] = 0;
   out_8453040072692771662[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8453040072692771662[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8453040072692771662[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8453040072692771662[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8453040072692771662[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8453040072692771662[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8453040072692771662[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8453040072692771662[51] = 0;
   out_8453040072692771662[52] = 0;
   out_8453040072692771662[53] = 0;
   out_8453040072692771662[54] = 0;
   out_8453040072692771662[55] = 0;
   out_8453040072692771662[56] = 0;
   out_8453040072692771662[57] = 0;
   out_8453040072692771662[58] = 0;
   out_8453040072692771662[59] = 0;
   out_8453040072692771662[60] = 0;
   out_8453040072692771662[61] = 0;
   out_8453040072692771662[62] = 1;
   out_8453040072692771662[63] = 0;
   out_8453040072692771662[64] = 0;
   out_8453040072692771662[65] = 1;
}
void h_12(double *state, double *unused, double *out_4735359724762829200) {
   out_4735359724762829200[0] = state[0];
   out_4735359724762829200[1] = state[1];
   out_4735359724762829200[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3227877702497198936) {
   out_3227877702497198936[0] = 1;
   out_3227877702497198936[1] = 0;
   out_3227877702497198936[2] = 0;
   out_3227877702497198936[3] = 0;
   out_3227877702497198936[4] = 0;
   out_3227877702497198936[5] = 0;
   out_3227877702497198936[6] = 0;
   out_3227877702497198936[7] = 0;
   out_3227877702497198936[8] = 0;
   out_3227877702497198936[9] = 0;
   out_3227877702497198936[10] = 0;
   out_3227877702497198936[11] = 0;
   out_3227877702497198936[12] = 0;
   out_3227877702497198936[13] = 0;
   out_3227877702497198936[14] = 0;
   out_3227877702497198936[15] = 0;
   out_3227877702497198936[16] = 0;
   out_3227877702497198936[17] = 0;
   out_3227877702497198936[18] = 0;
   out_3227877702497198936[19] = 0;
   out_3227877702497198936[20] = 0;
   out_3227877702497198936[21] = 0;
   out_3227877702497198936[22] = 0;
   out_3227877702497198936[23] = 1;
   out_3227877702497198936[24] = 0;
   out_3227877702497198936[25] = 0;
   out_3227877702497198936[26] = 0;
   out_3227877702497198936[27] = 0;
   out_3227877702497198936[28] = 0;
   out_3227877702497198936[29] = 0;
   out_3227877702497198936[30] = 0;
   out_3227877702497198936[31] = 0;
   out_3227877702497198936[32] = 0;
   out_3227877702497198936[33] = 0;
   out_3227877702497198936[34] = 0;
   out_3227877702497198936[35] = 0;
   out_3227877702497198936[36] = 0;
   out_3227877702497198936[37] = 0;
   out_3227877702497198936[38] = 0;
   out_3227877702497198936[39] = 0;
   out_3227877702497198936[40] = 0;
   out_3227877702497198936[41] = 0;
   out_3227877702497198936[42] = 0;
   out_3227877702497198936[43] = 0;
   out_3227877702497198936[44] = 0;
   out_3227877702497198936[45] = 0;
   out_3227877702497198936[46] = 1;
   out_3227877702497198936[47] = 0;
   out_3227877702497198936[48] = 0;
   out_3227877702497198936[49] = 0;
   out_3227877702497198936[50] = 0;
   out_3227877702497198936[51] = 0;
   out_3227877702497198936[52] = 0;
   out_3227877702497198936[53] = 0;
   out_3227877702497198936[54] = 0;
   out_3227877702497198936[55] = 0;
   out_3227877702497198936[56] = 0;
   out_3227877702497198936[57] = 0;
   out_3227877702497198936[58] = 0;
   out_3227877702497198936[59] = 0;
   out_3227877702497198936[60] = 0;
   out_3227877702497198936[61] = 0;
   out_3227877702497198936[62] = 0;
   out_3227877702497198936[63] = 0;
   out_3227877702497198936[64] = 0;
   out_3227877702497198936[65] = 0;
}
void h_31(double *state, double *unused, double *out_422741657314969244) {
   out_422741657314969244[0] = state[7];
   out_422741657314969244[1] = state[8];
   out_422741657314969244[2] = state[9];
}
void H_31(double *state, double *unused, double *out_5973440734822212645) {
   out_5973440734822212645[0] = 0;
   out_5973440734822212645[1] = 0;
   out_5973440734822212645[2] = 0;
   out_5973440734822212645[3] = 0;
   out_5973440734822212645[4] = 0;
   out_5973440734822212645[5] = 0;
   out_5973440734822212645[6] = 0;
   out_5973440734822212645[7] = 1;
   out_5973440734822212645[8] = 0;
   out_5973440734822212645[9] = 0;
   out_5973440734822212645[10] = 0;
   out_5973440734822212645[11] = 0;
   out_5973440734822212645[12] = 0;
   out_5973440734822212645[13] = 0;
   out_5973440734822212645[14] = 0;
   out_5973440734822212645[15] = 0;
   out_5973440734822212645[16] = 0;
   out_5973440734822212645[17] = 0;
   out_5973440734822212645[18] = 0;
   out_5973440734822212645[19] = 0;
   out_5973440734822212645[20] = 0;
   out_5973440734822212645[21] = 0;
   out_5973440734822212645[22] = 0;
   out_5973440734822212645[23] = 0;
   out_5973440734822212645[24] = 0;
   out_5973440734822212645[25] = 0;
   out_5973440734822212645[26] = 0;
   out_5973440734822212645[27] = 0;
   out_5973440734822212645[28] = 0;
   out_5973440734822212645[29] = 0;
   out_5973440734822212645[30] = 1;
   out_5973440734822212645[31] = 0;
   out_5973440734822212645[32] = 0;
   out_5973440734822212645[33] = 0;
   out_5973440734822212645[34] = 0;
   out_5973440734822212645[35] = 0;
   out_5973440734822212645[36] = 0;
   out_5973440734822212645[37] = 0;
   out_5973440734822212645[38] = 0;
   out_5973440734822212645[39] = 0;
   out_5973440734822212645[40] = 0;
   out_5973440734822212645[41] = 0;
   out_5973440734822212645[42] = 0;
   out_5973440734822212645[43] = 0;
   out_5973440734822212645[44] = 0;
   out_5973440734822212645[45] = 0;
   out_5973440734822212645[46] = 0;
   out_5973440734822212645[47] = 0;
   out_5973440734822212645[48] = 0;
   out_5973440734822212645[49] = 0;
   out_5973440734822212645[50] = 0;
   out_5973440734822212645[51] = 0;
   out_5973440734822212645[52] = 0;
   out_5973440734822212645[53] = 1;
   out_5973440734822212645[54] = 0;
   out_5973440734822212645[55] = 0;
   out_5973440734822212645[56] = 0;
   out_5973440734822212645[57] = 0;
   out_5973440734822212645[58] = 0;
   out_5973440734822212645[59] = 0;
   out_5973440734822212645[60] = 0;
   out_5973440734822212645[61] = 0;
   out_5973440734822212645[62] = 0;
   out_5973440734822212645[63] = 0;
   out_5973440734822212645[64] = 0;
   out_5973440734822212645[65] = 0;
}
void h_32(double *state, double *unused, double *out_6119675094862218689) {
   out_6119675094862218689[0] = state[3];
   out_6119675094862218689[1] = state[4];
   out_6119675094862218689[2] = state[5];
   out_6119675094862218689[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1632435959089105757) {
   out_1632435959089105757[0] = 0;
   out_1632435959089105757[1] = 0;
   out_1632435959089105757[2] = 0;
   out_1632435959089105757[3] = 1;
   out_1632435959089105757[4] = 0;
   out_1632435959089105757[5] = 0;
   out_1632435959089105757[6] = 0;
   out_1632435959089105757[7] = 0;
   out_1632435959089105757[8] = 0;
   out_1632435959089105757[9] = 0;
   out_1632435959089105757[10] = 0;
   out_1632435959089105757[11] = 0;
   out_1632435959089105757[12] = 0;
   out_1632435959089105757[13] = 0;
   out_1632435959089105757[14] = 0;
   out_1632435959089105757[15] = 0;
   out_1632435959089105757[16] = 0;
   out_1632435959089105757[17] = 0;
   out_1632435959089105757[18] = 0;
   out_1632435959089105757[19] = 0;
   out_1632435959089105757[20] = 0;
   out_1632435959089105757[21] = 0;
   out_1632435959089105757[22] = 0;
   out_1632435959089105757[23] = 0;
   out_1632435959089105757[24] = 0;
   out_1632435959089105757[25] = 0;
   out_1632435959089105757[26] = 1;
   out_1632435959089105757[27] = 0;
   out_1632435959089105757[28] = 0;
   out_1632435959089105757[29] = 0;
   out_1632435959089105757[30] = 0;
   out_1632435959089105757[31] = 0;
   out_1632435959089105757[32] = 0;
   out_1632435959089105757[33] = 0;
   out_1632435959089105757[34] = 0;
   out_1632435959089105757[35] = 0;
   out_1632435959089105757[36] = 0;
   out_1632435959089105757[37] = 0;
   out_1632435959089105757[38] = 0;
   out_1632435959089105757[39] = 0;
   out_1632435959089105757[40] = 0;
   out_1632435959089105757[41] = 0;
   out_1632435959089105757[42] = 0;
   out_1632435959089105757[43] = 0;
   out_1632435959089105757[44] = 0;
   out_1632435959089105757[45] = 0;
   out_1632435959089105757[46] = 0;
   out_1632435959089105757[47] = 0;
   out_1632435959089105757[48] = 0;
   out_1632435959089105757[49] = 1;
   out_1632435959089105757[50] = 0;
   out_1632435959089105757[51] = 0;
   out_1632435959089105757[52] = 0;
   out_1632435959089105757[53] = 0;
   out_1632435959089105757[54] = 0;
   out_1632435959089105757[55] = 0;
   out_1632435959089105757[56] = 0;
   out_1632435959089105757[57] = 0;
   out_1632435959089105757[58] = 0;
   out_1632435959089105757[59] = 0;
   out_1632435959089105757[60] = 0;
   out_1632435959089105757[61] = 0;
   out_1632435959089105757[62] = 0;
   out_1632435959089105757[63] = 0;
   out_1632435959089105757[64] = 0;
   out_1632435959089105757[65] = 0;
   out_1632435959089105757[66] = 0;
   out_1632435959089105757[67] = 0;
   out_1632435959089105757[68] = 0;
   out_1632435959089105757[69] = 0;
   out_1632435959089105757[70] = 0;
   out_1632435959089105757[71] = 0;
   out_1632435959089105757[72] = 1;
   out_1632435959089105757[73] = 0;
   out_1632435959089105757[74] = 0;
   out_1632435959089105757[75] = 0;
   out_1632435959089105757[76] = 0;
   out_1632435959089105757[77] = 0;
   out_1632435959089105757[78] = 0;
   out_1632435959089105757[79] = 0;
   out_1632435959089105757[80] = 0;
   out_1632435959089105757[81] = 0;
   out_1632435959089105757[82] = 0;
   out_1632435959089105757[83] = 0;
   out_1632435959089105757[84] = 0;
   out_1632435959089105757[85] = 0;
   out_1632435959089105757[86] = 0;
   out_1632435959089105757[87] = 0;
}
void h_13(double *state, double *unused, double *out_6589541705407183911) {
   out_6589541705407183911[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6589541705407183911[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6589541705407183911[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2741759176471186047) {
   out_2741759176471186047[0] = 0;
   out_2741759176471186047[1] = 0;
   out_2741759176471186047[2] = 0;
   out_2741759176471186047[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2741759176471186047[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2741759176471186047[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2741759176471186047[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2741759176471186047[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2741759176471186047[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2741759176471186047[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2741759176471186047[10] = 0;
   out_2741759176471186047[11] = 0;
   out_2741759176471186047[12] = 0;
   out_2741759176471186047[13] = 0;
   out_2741759176471186047[14] = 0;
   out_2741759176471186047[15] = 0;
   out_2741759176471186047[16] = 0;
   out_2741759176471186047[17] = 0;
   out_2741759176471186047[18] = 0;
   out_2741759176471186047[19] = 0;
   out_2741759176471186047[20] = 0;
   out_2741759176471186047[21] = 0;
   out_2741759176471186047[22] = 0;
   out_2741759176471186047[23] = 0;
   out_2741759176471186047[24] = 0;
   out_2741759176471186047[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2741759176471186047[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2741759176471186047[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2741759176471186047[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2741759176471186047[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2741759176471186047[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2741759176471186047[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2741759176471186047[32] = 0;
   out_2741759176471186047[33] = 0;
   out_2741759176471186047[34] = 0;
   out_2741759176471186047[35] = 0;
   out_2741759176471186047[36] = 0;
   out_2741759176471186047[37] = 0;
   out_2741759176471186047[38] = 0;
   out_2741759176471186047[39] = 0;
   out_2741759176471186047[40] = 0;
   out_2741759176471186047[41] = 0;
   out_2741759176471186047[42] = 0;
   out_2741759176471186047[43] = 0;
   out_2741759176471186047[44] = 0;
   out_2741759176471186047[45] = 0;
   out_2741759176471186047[46] = 0;
   out_2741759176471186047[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2741759176471186047[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2741759176471186047[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2741759176471186047[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2741759176471186047[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2741759176471186047[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2741759176471186047[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2741759176471186047[54] = 0;
   out_2741759176471186047[55] = 0;
   out_2741759176471186047[56] = 0;
   out_2741759176471186047[57] = 0;
   out_2741759176471186047[58] = 0;
   out_2741759176471186047[59] = 0;
   out_2741759176471186047[60] = 0;
   out_2741759176471186047[61] = 0;
   out_2741759176471186047[62] = 0;
   out_2741759176471186047[63] = 0;
   out_2741759176471186047[64] = 0;
   out_2741759176471186047[65] = 0;
}
void h_14(double *state, double *unused, double *out_2731228141922491785) {
   out_2731228141922491785[0] = state[10];
   out_2731228141922491785[1] = state[11];
   out_2731228141922491785[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1550389058905172214) {
   out_1550389058905172214[0] = 0;
   out_1550389058905172214[1] = 0;
   out_1550389058905172214[2] = 0;
   out_1550389058905172214[3] = 0;
   out_1550389058905172214[4] = 0;
   out_1550389058905172214[5] = 0;
   out_1550389058905172214[6] = 0;
   out_1550389058905172214[7] = 0;
   out_1550389058905172214[8] = 0;
   out_1550389058905172214[9] = 0;
   out_1550389058905172214[10] = 1;
   out_1550389058905172214[11] = 0;
   out_1550389058905172214[12] = 0;
   out_1550389058905172214[13] = 0;
   out_1550389058905172214[14] = 0;
   out_1550389058905172214[15] = 0;
   out_1550389058905172214[16] = 0;
   out_1550389058905172214[17] = 0;
   out_1550389058905172214[18] = 0;
   out_1550389058905172214[19] = 0;
   out_1550389058905172214[20] = 0;
   out_1550389058905172214[21] = 0;
   out_1550389058905172214[22] = 0;
   out_1550389058905172214[23] = 0;
   out_1550389058905172214[24] = 0;
   out_1550389058905172214[25] = 0;
   out_1550389058905172214[26] = 0;
   out_1550389058905172214[27] = 0;
   out_1550389058905172214[28] = 0;
   out_1550389058905172214[29] = 0;
   out_1550389058905172214[30] = 0;
   out_1550389058905172214[31] = 0;
   out_1550389058905172214[32] = 0;
   out_1550389058905172214[33] = 1;
   out_1550389058905172214[34] = 0;
   out_1550389058905172214[35] = 0;
   out_1550389058905172214[36] = 0;
   out_1550389058905172214[37] = 0;
   out_1550389058905172214[38] = 0;
   out_1550389058905172214[39] = 0;
   out_1550389058905172214[40] = 0;
   out_1550389058905172214[41] = 0;
   out_1550389058905172214[42] = 0;
   out_1550389058905172214[43] = 0;
   out_1550389058905172214[44] = 0;
   out_1550389058905172214[45] = 0;
   out_1550389058905172214[46] = 0;
   out_1550389058905172214[47] = 0;
   out_1550389058905172214[48] = 0;
   out_1550389058905172214[49] = 0;
   out_1550389058905172214[50] = 0;
   out_1550389058905172214[51] = 0;
   out_1550389058905172214[52] = 0;
   out_1550389058905172214[53] = 0;
   out_1550389058905172214[54] = 0;
   out_1550389058905172214[55] = 0;
   out_1550389058905172214[56] = 1;
   out_1550389058905172214[57] = 0;
   out_1550389058905172214[58] = 0;
   out_1550389058905172214[59] = 0;
   out_1550389058905172214[60] = 0;
   out_1550389058905172214[61] = 0;
   out_1550389058905172214[62] = 0;
   out_1550389058905172214[63] = 0;
   out_1550389058905172214[64] = 0;
   out_1550389058905172214[65] = 0;
}
void h_33(double *state, double *unused, double *out_6883257441562439238) {
   out_6883257441562439238[0] = state[16];
   out_6883257441562439238[1] = state[17];
   out_6883257441562439238[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9123997739461070249) {
   out_9123997739461070249[0] = 0;
   out_9123997739461070249[1] = 0;
   out_9123997739461070249[2] = 0;
   out_9123997739461070249[3] = 0;
   out_9123997739461070249[4] = 0;
   out_9123997739461070249[5] = 0;
   out_9123997739461070249[6] = 0;
   out_9123997739461070249[7] = 0;
   out_9123997739461070249[8] = 0;
   out_9123997739461070249[9] = 0;
   out_9123997739461070249[10] = 0;
   out_9123997739461070249[11] = 0;
   out_9123997739461070249[12] = 0;
   out_9123997739461070249[13] = 0;
   out_9123997739461070249[14] = 0;
   out_9123997739461070249[15] = 0;
   out_9123997739461070249[16] = 1;
   out_9123997739461070249[17] = 0;
   out_9123997739461070249[18] = 0;
   out_9123997739461070249[19] = 0;
   out_9123997739461070249[20] = 0;
   out_9123997739461070249[21] = 0;
   out_9123997739461070249[22] = 0;
   out_9123997739461070249[23] = 0;
   out_9123997739461070249[24] = 0;
   out_9123997739461070249[25] = 0;
   out_9123997739461070249[26] = 0;
   out_9123997739461070249[27] = 0;
   out_9123997739461070249[28] = 0;
   out_9123997739461070249[29] = 0;
   out_9123997739461070249[30] = 0;
   out_9123997739461070249[31] = 0;
   out_9123997739461070249[32] = 0;
   out_9123997739461070249[33] = 0;
   out_9123997739461070249[34] = 0;
   out_9123997739461070249[35] = 0;
   out_9123997739461070249[36] = 0;
   out_9123997739461070249[37] = 0;
   out_9123997739461070249[38] = 0;
   out_9123997739461070249[39] = 1;
   out_9123997739461070249[40] = 0;
   out_9123997739461070249[41] = 0;
   out_9123997739461070249[42] = 0;
   out_9123997739461070249[43] = 0;
   out_9123997739461070249[44] = 0;
   out_9123997739461070249[45] = 0;
   out_9123997739461070249[46] = 0;
   out_9123997739461070249[47] = 0;
   out_9123997739461070249[48] = 0;
   out_9123997739461070249[49] = 0;
   out_9123997739461070249[50] = 0;
   out_9123997739461070249[51] = 0;
   out_9123997739461070249[52] = 0;
   out_9123997739461070249[53] = 0;
   out_9123997739461070249[54] = 0;
   out_9123997739461070249[55] = 0;
   out_9123997739461070249[56] = 0;
   out_9123997739461070249[57] = 0;
   out_9123997739461070249[58] = 0;
   out_9123997739461070249[59] = 0;
   out_9123997739461070249[60] = 0;
   out_9123997739461070249[61] = 0;
   out_9123997739461070249[62] = 1;
   out_9123997739461070249[63] = 0;
   out_9123997739461070249[64] = 0;
   out_9123997739461070249[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1837242654657482381) {
  H(in_vec, out_1837242654657482381);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1049287755312093099) {
  err_fun(nom_x, delta_x, out_1049287755312093099);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_51980762048143343) {
  inv_err_fun(nom_x, true_x, out_51980762048143343);
}
void live_H_mod_fun(double *state, double *out_36641115734452068) {
  H_mod_fun(state, out_36641115734452068);
}
void live_f_fun(double *state, double dt, double *out_3639431347680991822) {
  f_fun(state,  dt, out_3639431347680991822);
}
void live_F_fun(double *state, double dt, double *out_6769763949434269633) {
  F_fun(state,  dt, out_6769763949434269633);
}
void live_h_4(double *state, double *unused, double *out_3106790310301024044) {
  h_4(state, unused, out_3106790310301024044);
}
void live_H_4(double *state, double *unused, double *out_1791578705534762859) {
  H_4(state, unused, out_1791578705534762859);
}
void live_h_9(double *state, double *unused, double *out_2731228141922491785) {
  h_9(state, unused, out_2731228141922491785);
}
void live_H_9(double *state, double *unused, double *out_1550389058905172214) {
  H_9(state, unused, out_1550389058905172214);
}
void live_h_10(double *state, double *unused, double *out_4460143636780078925) {
  h_10(state, unused, out_4460143636780078925);
}
void live_H_10(double *state, double *unused, double *out_8453040072692771662) {
  H_10(state, unused, out_8453040072692771662);
}
void live_h_12(double *state, double *unused, double *out_4735359724762829200) {
  h_12(state, unused, out_4735359724762829200);
}
void live_H_12(double *state, double *unused, double *out_3227877702497198936) {
  H_12(state, unused, out_3227877702497198936);
}
void live_h_31(double *state, double *unused, double *out_422741657314969244) {
  h_31(state, unused, out_422741657314969244);
}
void live_H_31(double *state, double *unused, double *out_5973440734822212645) {
  H_31(state, unused, out_5973440734822212645);
}
void live_h_32(double *state, double *unused, double *out_6119675094862218689) {
  h_32(state, unused, out_6119675094862218689);
}
void live_H_32(double *state, double *unused, double *out_1632435959089105757) {
  H_32(state, unused, out_1632435959089105757);
}
void live_h_13(double *state, double *unused, double *out_6589541705407183911) {
  h_13(state, unused, out_6589541705407183911);
}
void live_H_13(double *state, double *unused, double *out_2741759176471186047) {
  H_13(state, unused, out_2741759176471186047);
}
void live_h_14(double *state, double *unused, double *out_2731228141922491785) {
  h_14(state, unused, out_2731228141922491785);
}
void live_H_14(double *state, double *unused, double *out_1550389058905172214) {
  H_14(state, unused, out_1550389058905172214);
}
void live_h_33(double *state, double *unused, double *out_6883257441562439238) {
  h_33(state, unused, out_6883257441562439238);
}
void live_H_33(double *state, double *unused, double *out_9123997739461070249) {
  H_33(state, unused, out_9123997739461070249);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
