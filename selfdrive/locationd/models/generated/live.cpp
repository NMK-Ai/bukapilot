#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_9020660452643543827) {
   out_9020660452643543827[0] = 0;
   out_9020660452643543827[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_9020660452643543827[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_9020660452643543827[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_9020660452643543827[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_9020660452643543827[5] = -sin(in_vec[1]);
   out_9020660452643543827[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9020660452643543827[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9020660452643543827[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_9020660452643543827[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_9020660452643543827[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_9020660452643543827[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_9020660452643543827[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9020660452643543827[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9020660452643543827[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_9020660452643543827[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_9020660452643543827[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_9020660452643543827[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1843239551603340712) {
   out_1843239551603340712[0] = delta_x[0] + nom_x[0];
   out_1843239551603340712[1] = delta_x[1] + nom_x[1];
   out_1843239551603340712[2] = delta_x[2] + nom_x[2];
   out_1843239551603340712[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1843239551603340712[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1843239551603340712[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1843239551603340712[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1843239551603340712[7] = delta_x[6] + nom_x[7];
   out_1843239551603340712[8] = delta_x[7] + nom_x[8];
   out_1843239551603340712[9] = delta_x[8] + nom_x[9];
   out_1843239551603340712[10] = delta_x[9] + nom_x[10];
   out_1843239551603340712[11] = delta_x[10] + nom_x[11];
   out_1843239551603340712[12] = delta_x[11] + nom_x[12];
   out_1843239551603340712[13] = delta_x[12] + nom_x[13];
   out_1843239551603340712[14] = delta_x[13] + nom_x[14];
   out_1843239551603340712[15] = delta_x[14] + nom_x[15];
   out_1843239551603340712[16] = delta_x[15] + nom_x[16];
   out_1843239551603340712[17] = delta_x[16] + nom_x[17];
   out_1843239551603340712[18] = delta_x[17] + nom_x[18];
   out_1843239551603340712[19] = delta_x[18] + nom_x[19];
   out_1843239551603340712[20] = delta_x[19] + nom_x[20];
   out_1843239551603340712[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1521282881650925734) {
   out_1521282881650925734[0] = -nom_x[0] + true_x[0];
   out_1521282881650925734[1] = -nom_x[1] + true_x[1];
   out_1521282881650925734[2] = -nom_x[2] + true_x[2];
   out_1521282881650925734[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1521282881650925734[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1521282881650925734[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1521282881650925734[6] = -nom_x[7] + true_x[7];
   out_1521282881650925734[7] = -nom_x[8] + true_x[8];
   out_1521282881650925734[8] = -nom_x[9] + true_x[9];
   out_1521282881650925734[9] = -nom_x[10] + true_x[10];
   out_1521282881650925734[10] = -nom_x[11] + true_x[11];
   out_1521282881650925734[11] = -nom_x[12] + true_x[12];
   out_1521282881650925734[12] = -nom_x[13] + true_x[13];
   out_1521282881650925734[13] = -nom_x[14] + true_x[14];
   out_1521282881650925734[14] = -nom_x[15] + true_x[15];
   out_1521282881650925734[15] = -nom_x[16] + true_x[16];
   out_1521282881650925734[16] = -nom_x[17] + true_x[17];
   out_1521282881650925734[17] = -nom_x[18] + true_x[18];
   out_1521282881650925734[18] = -nom_x[19] + true_x[19];
   out_1521282881650925734[19] = -nom_x[20] + true_x[20];
   out_1521282881650925734[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1170439287579884367) {
   out_1170439287579884367[0] = 1.0;
   out_1170439287579884367[1] = 0;
   out_1170439287579884367[2] = 0;
   out_1170439287579884367[3] = 0;
   out_1170439287579884367[4] = 0;
   out_1170439287579884367[5] = 0;
   out_1170439287579884367[6] = 0;
   out_1170439287579884367[7] = 0;
   out_1170439287579884367[8] = 0;
   out_1170439287579884367[9] = 0;
   out_1170439287579884367[10] = 0;
   out_1170439287579884367[11] = 0;
   out_1170439287579884367[12] = 0;
   out_1170439287579884367[13] = 0;
   out_1170439287579884367[14] = 0;
   out_1170439287579884367[15] = 0;
   out_1170439287579884367[16] = 0;
   out_1170439287579884367[17] = 0;
   out_1170439287579884367[18] = 0;
   out_1170439287579884367[19] = 0;
   out_1170439287579884367[20] = 0;
   out_1170439287579884367[21] = 0;
   out_1170439287579884367[22] = 1.0;
   out_1170439287579884367[23] = 0;
   out_1170439287579884367[24] = 0;
   out_1170439287579884367[25] = 0;
   out_1170439287579884367[26] = 0;
   out_1170439287579884367[27] = 0;
   out_1170439287579884367[28] = 0;
   out_1170439287579884367[29] = 0;
   out_1170439287579884367[30] = 0;
   out_1170439287579884367[31] = 0;
   out_1170439287579884367[32] = 0;
   out_1170439287579884367[33] = 0;
   out_1170439287579884367[34] = 0;
   out_1170439287579884367[35] = 0;
   out_1170439287579884367[36] = 0;
   out_1170439287579884367[37] = 0;
   out_1170439287579884367[38] = 0;
   out_1170439287579884367[39] = 0;
   out_1170439287579884367[40] = 0;
   out_1170439287579884367[41] = 0;
   out_1170439287579884367[42] = 0;
   out_1170439287579884367[43] = 0;
   out_1170439287579884367[44] = 1.0;
   out_1170439287579884367[45] = 0;
   out_1170439287579884367[46] = 0;
   out_1170439287579884367[47] = 0;
   out_1170439287579884367[48] = 0;
   out_1170439287579884367[49] = 0;
   out_1170439287579884367[50] = 0;
   out_1170439287579884367[51] = 0;
   out_1170439287579884367[52] = 0;
   out_1170439287579884367[53] = 0;
   out_1170439287579884367[54] = 0;
   out_1170439287579884367[55] = 0;
   out_1170439287579884367[56] = 0;
   out_1170439287579884367[57] = 0;
   out_1170439287579884367[58] = 0;
   out_1170439287579884367[59] = 0;
   out_1170439287579884367[60] = 0;
   out_1170439287579884367[61] = 0;
   out_1170439287579884367[62] = 0;
   out_1170439287579884367[63] = 0;
   out_1170439287579884367[64] = 0;
   out_1170439287579884367[65] = 0;
   out_1170439287579884367[66] = -0.5*state[4];
   out_1170439287579884367[67] = -0.5*state[5];
   out_1170439287579884367[68] = -0.5*state[6];
   out_1170439287579884367[69] = 0;
   out_1170439287579884367[70] = 0;
   out_1170439287579884367[71] = 0;
   out_1170439287579884367[72] = 0;
   out_1170439287579884367[73] = 0;
   out_1170439287579884367[74] = 0;
   out_1170439287579884367[75] = 0;
   out_1170439287579884367[76] = 0;
   out_1170439287579884367[77] = 0;
   out_1170439287579884367[78] = 0;
   out_1170439287579884367[79] = 0;
   out_1170439287579884367[80] = 0;
   out_1170439287579884367[81] = 0;
   out_1170439287579884367[82] = 0;
   out_1170439287579884367[83] = 0;
   out_1170439287579884367[84] = 0;
   out_1170439287579884367[85] = 0;
   out_1170439287579884367[86] = 0;
   out_1170439287579884367[87] = 0.5*state[3];
   out_1170439287579884367[88] = 0.5*state[6];
   out_1170439287579884367[89] = -0.5*state[5];
   out_1170439287579884367[90] = 0;
   out_1170439287579884367[91] = 0;
   out_1170439287579884367[92] = 0;
   out_1170439287579884367[93] = 0;
   out_1170439287579884367[94] = 0;
   out_1170439287579884367[95] = 0;
   out_1170439287579884367[96] = 0;
   out_1170439287579884367[97] = 0;
   out_1170439287579884367[98] = 0;
   out_1170439287579884367[99] = 0;
   out_1170439287579884367[100] = 0;
   out_1170439287579884367[101] = 0;
   out_1170439287579884367[102] = 0;
   out_1170439287579884367[103] = 0;
   out_1170439287579884367[104] = 0;
   out_1170439287579884367[105] = 0;
   out_1170439287579884367[106] = 0;
   out_1170439287579884367[107] = 0;
   out_1170439287579884367[108] = -0.5*state[6];
   out_1170439287579884367[109] = 0.5*state[3];
   out_1170439287579884367[110] = 0.5*state[4];
   out_1170439287579884367[111] = 0;
   out_1170439287579884367[112] = 0;
   out_1170439287579884367[113] = 0;
   out_1170439287579884367[114] = 0;
   out_1170439287579884367[115] = 0;
   out_1170439287579884367[116] = 0;
   out_1170439287579884367[117] = 0;
   out_1170439287579884367[118] = 0;
   out_1170439287579884367[119] = 0;
   out_1170439287579884367[120] = 0;
   out_1170439287579884367[121] = 0;
   out_1170439287579884367[122] = 0;
   out_1170439287579884367[123] = 0;
   out_1170439287579884367[124] = 0;
   out_1170439287579884367[125] = 0;
   out_1170439287579884367[126] = 0;
   out_1170439287579884367[127] = 0;
   out_1170439287579884367[128] = 0;
   out_1170439287579884367[129] = 0.5*state[5];
   out_1170439287579884367[130] = -0.5*state[4];
   out_1170439287579884367[131] = 0.5*state[3];
   out_1170439287579884367[132] = 0;
   out_1170439287579884367[133] = 0;
   out_1170439287579884367[134] = 0;
   out_1170439287579884367[135] = 0;
   out_1170439287579884367[136] = 0;
   out_1170439287579884367[137] = 0;
   out_1170439287579884367[138] = 0;
   out_1170439287579884367[139] = 0;
   out_1170439287579884367[140] = 0;
   out_1170439287579884367[141] = 0;
   out_1170439287579884367[142] = 0;
   out_1170439287579884367[143] = 0;
   out_1170439287579884367[144] = 0;
   out_1170439287579884367[145] = 0;
   out_1170439287579884367[146] = 0;
   out_1170439287579884367[147] = 0;
   out_1170439287579884367[148] = 0;
   out_1170439287579884367[149] = 0;
   out_1170439287579884367[150] = 0;
   out_1170439287579884367[151] = 0;
   out_1170439287579884367[152] = 0;
   out_1170439287579884367[153] = 1.0;
   out_1170439287579884367[154] = 0;
   out_1170439287579884367[155] = 0;
   out_1170439287579884367[156] = 0;
   out_1170439287579884367[157] = 0;
   out_1170439287579884367[158] = 0;
   out_1170439287579884367[159] = 0;
   out_1170439287579884367[160] = 0;
   out_1170439287579884367[161] = 0;
   out_1170439287579884367[162] = 0;
   out_1170439287579884367[163] = 0;
   out_1170439287579884367[164] = 0;
   out_1170439287579884367[165] = 0;
   out_1170439287579884367[166] = 0;
   out_1170439287579884367[167] = 0;
   out_1170439287579884367[168] = 0;
   out_1170439287579884367[169] = 0;
   out_1170439287579884367[170] = 0;
   out_1170439287579884367[171] = 0;
   out_1170439287579884367[172] = 0;
   out_1170439287579884367[173] = 0;
   out_1170439287579884367[174] = 0;
   out_1170439287579884367[175] = 1.0;
   out_1170439287579884367[176] = 0;
   out_1170439287579884367[177] = 0;
   out_1170439287579884367[178] = 0;
   out_1170439287579884367[179] = 0;
   out_1170439287579884367[180] = 0;
   out_1170439287579884367[181] = 0;
   out_1170439287579884367[182] = 0;
   out_1170439287579884367[183] = 0;
   out_1170439287579884367[184] = 0;
   out_1170439287579884367[185] = 0;
   out_1170439287579884367[186] = 0;
   out_1170439287579884367[187] = 0;
   out_1170439287579884367[188] = 0;
   out_1170439287579884367[189] = 0;
   out_1170439287579884367[190] = 0;
   out_1170439287579884367[191] = 0;
   out_1170439287579884367[192] = 0;
   out_1170439287579884367[193] = 0;
   out_1170439287579884367[194] = 0;
   out_1170439287579884367[195] = 0;
   out_1170439287579884367[196] = 0;
   out_1170439287579884367[197] = 1.0;
   out_1170439287579884367[198] = 0;
   out_1170439287579884367[199] = 0;
   out_1170439287579884367[200] = 0;
   out_1170439287579884367[201] = 0;
   out_1170439287579884367[202] = 0;
   out_1170439287579884367[203] = 0;
   out_1170439287579884367[204] = 0;
   out_1170439287579884367[205] = 0;
   out_1170439287579884367[206] = 0;
   out_1170439287579884367[207] = 0;
   out_1170439287579884367[208] = 0;
   out_1170439287579884367[209] = 0;
   out_1170439287579884367[210] = 0;
   out_1170439287579884367[211] = 0;
   out_1170439287579884367[212] = 0;
   out_1170439287579884367[213] = 0;
   out_1170439287579884367[214] = 0;
   out_1170439287579884367[215] = 0;
   out_1170439287579884367[216] = 0;
   out_1170439287579884367[217] = 0;
   out_1170439287579884367[218] = 0;
   out_1170439287579884367[219] = 1.0;
   out_1170439287579884367[220] = 0;
   out_1170439287579884367[221] = 0;
   out_1170439287579884367[222] = 0;
   out_1170439287579884367[223] = 0;
   out_1170439287579884367[224] = 0;
   out_1170439287579884367[225] = 0;
   out_1170439287579884367[226] = 0;
   out_1170439287579884367[227] = 0;
   out_1170439287579884367[228] = 0;
   out_1170439287579884367[229] = 0;
   out_1170439287579884367[230] = 0;
   out_1170439287579884367[231] = 0;
   out_1170439287579884367[232] = 0;
   out_1170439287579884367[233] = 0;
   out_1170439287579884367[234] = 0;
   out_1170439287579884367[235] = 0;
   out_1170439287579884367[236] = 0;
   out_1170439287579884367[237] = 0;
   out_1170439287579884367[238] = 0;
   out_1170439287579884367[239] = 0;
   out_1170439287579884367[240] = 0;
   out_1170439287579884367[241] = 1.0;
   out_1170439287579884367[242] = 0;
   out_1170439287579884367[243] = 0;
   out_1170439287579884367[244] = 0;
   out_1170439287579884367[245] = 0;
   out_1170439287579884367[246] = 0;
   out_1170439287579884367[247] = 0;
   out_1170439287579884367[248] = 0;
   out_1170439287579884367[249] = 0;
   out_1170439287579884367[250] = 0;
   out_1170439287579884367[251] = 0;
   out_1170439287579884367[252] = 0;
   out_1170439287579884367[253] = 0;
   out_1170439287579884367[254] = 0;
   out_1170439287579884367[255] = 0;
   out_1170439287579884367[256] = 0;
   out_1170439287579884367[257] = 0;
   out_1170439287579884367[258] = 0;
   out_1170439287579884367[259] = 0;
   out_1170439287579884367[260] = 0;
   out_1170439287579884367[261] = 0;
   out_1170439287579884367[262] = 0;
   out_1170439287579884367[263] = 1.0;
   out_1170439287579884367[264] = 0;
   out_1170439287579884367[265] = 0;
   out_1170439287579884367[266] = 0;
   out_1170439287579884367[267] = 0;
   out_1170439287579884367[268] = 0;
   out_1170439287579884367[269] = 0;
   out_1170439287579884367[270] = 0;
   out_1170439287579884367[271] = 0;
   out_1170439287579884367[272] = 0;
   out_1170439287579884367[273] = 0;
   out_1170439287579884367[274] = 0;
   out_1170439287579884367[275] = 0;
   out_1170439287579884367[276] = 0;
   out_1170439287579884367[277] = 0;
   out_1170439287579884367[278] = 0;
   out_1170439287579884367[279] = 0;
   out_1170439287579884367[280] = 0;
   out_1170439287579884367[281] = 0;
   out_1170439287579884367[282] = 0;
   out_1170439287579884367[283] = 0;
   out_1170439287579884367[284] = 0;
   out_1170439287579884367[285] = 1.0;
   out_1170439287579884367[286] = 0;
   out_1170439287579884367[287] = 0;
   out_1170439287579884367[288] = 0;
   out_1170439287579884367[289] = 0;
   out_1170439287579884367[290] = 0;
   out_1170439287579884367[291] = 0;
   out_1170439287579884367[292] = 0;
   out_1170439287579884367[293] = 0;
   out_1170439287579884367[294] = 0;
   out_1170439287579884367[295] = 0;
   out_1170439287579884367[296] = 0;
   out_1170439287579884367[297] = 0;
   out_1170439287579884367[298] = 0;
   out_1170439287579884367[299] = 0;
   out_1170439287579884367[300] = 0;
   out_1170439287579884367[301] = 0;
   out_1170439287579884367[302] = 0;
   out_1170439287579884367[303] = 0;
   out_1170439287579884367[304] = 0;
   out_1170439287579884367[305] = 0;
   out_1170439287579884367[306] = 0;
   out_1170439287579884367[307] = 1.0;
   out_1170439287579884367[308] = 0;
   out_1170439287579884367[309] = 0;
   out_1170439287579884367[310] = 0;
   out_1170439287579884367[311] = 0;
   out_1170439287579884367[312] = 0;
   out_1170439287579884367[313] = 0;
   out_1170439287579884367[314] = 0;
   out_1170439287579884367[315] = 0;
   out_1170439287579884367[316] = 0;
   out_1170439287579884367[317] = 0;
   out_1170439287579884367[318] = 0;
   out_1170439287579884367[319] = 0;
   out_1170439287579884367[320] = 0;
   out_1170439287579884367[321] = 0;
   out_1170439287579884367[322] = 0;
   out_1170439287579884367[323] = 0;
   out_1170439287579884367[324] = 0;
   out_1170439287579884367[325] = 0;
   out_1170439287579884367[326] = 0;
   out_1170439287579884367[327] = 0;
   out_1170439287579884367[328] = 0;
   out_1170439287579884367[329] = 1.0;
   out_1170439287579884367[330] = 0;
   out_1170439287579884367[331] = 0;
   out_1170439287579884367[332] = 0;
   out_1170439287579884367[333] = 0;
   out_1170439287579884367[334] = 0;
   out_1170439287579884367[335] = 0;
   out_1170439287579884367[336] = 0;
   out_1170439287579884367[337] = 0;
   out_1170439287579884367[338] = 0;
   out_1170439287579884367[339] = 0;
   out_1170439287579884367[340] = 0;
   out_1170439287579884367[341] = 0;
   out_1170439287579884367[342] = 0;
   out_1170439287579884367[343] = 0;
   out_1170439287579884367[344] = 0;
   out_1170439287579884367[345] = 0;
   out_1170439287579884367[346] = 0;
   out_1170439287579884367[347] = 0;
   out_1170439287579884367[348] = 0;
   out_1170439287579884367[349] = 0;
   out_1170439287579884367[350] = 0;
   out_1170439287579884367[351] = 1.0;
   out_1170439287579884367[352] = 0;
   out_1170439287579884367[353] = 0;
   out_1170439287579884367[354] = 0;
   out_1170439287579884367[355] = 0;
   out_1170439287579884367[356] = 0;
   out_1170439287579884367[357] = 0;
   out_1170439287579884367[358] = 0;
   out_1170439287579884367[359] = 0;
   out_1170439287579884367[360] = 0;
   out_1170439287579884367[361] = 0;
   out_1170439287579884367[362] = 0;
   out_1170439287579884367[363] = 0;
   out_1170439287579884367[364] = 0;
   out_1170439287579884367[365] = 0;
   out_1170439287579884367[366] = 0;
   out_1170439287579884367[367] = 0;
   out_1170439287579884367[368] = 0;
   out_1170439287579884367[369] = 0;
   out_1170439287579884367[370] = 0;
   out_1170439287579884367[371] = 0;
   out_1170439287579884367[372] = 0;
   out_1170439287579884367[373] = 1.0;
   out_1170439287579884367[374] = 0;
   out_1170439287579884367[375] = 0;
   out_1170439287579884367[376] = 0;
   out_1170439287579884367[377] = 0;
   out_1170439287579884367[378] = 0;
   out_1170439287579884367[379] = 0;
   out_1170439287579884367[380] = 0;
   out_1170439287579884367[381] = 0;
   out_1170439287579884367[382] = 0;
   out_1170439287579884367[383] = 0;
   out_1170439287579884367[384] = 0;
   out_1170439287579884367[385] = 0;
   out_1170439287579884367[386] = 0;
   out_1170439287579884367[387] = 0;
   out_1170439287579884367[388] = 0;
   out_1170439287579884367[389] = 0;
   out_1170439287579884367[390] = 0;
   out_1170439287579884367[391] = 0;
   out_1170439287579884367[392] = 0;
   out_1170439287579884367[393] = 0;
   out_1170439287579884367[394] = 0;
   out_1170439287579884367[395] = 1.0;
   out_1170439287579884367[396] = 0;
   out_1170439287579884367[397] = 0;
   out_1170439287579884367[398] = 0;
   out_1170439287579884367[399] = 0;
   out_1170439287579884367[400] = 0;
   out_1170439287579884367[401] = 0;
   out_1170439287579884367[402] = 0;
   out_1170439287579884367[403] = 0;
   out_1170439287579884367[404] = 0;
   out_1170439287579884367[405] = 0;
   out_1170439287579884367[406] = 0;
   out_1170439287579884367[407] = 0;
   out_1170439287579884367[408] = 0;
   out_1170439287579884367[409] = 0;
   out_1170439287579884367[410] = 0;
   out_1170439287579884367[411] = 0;
   out_1170439287579884367[412] = 0;
   out_1170439287579884367[413] = 0;
   out_1170439287579884367[414] = 0;
   out_1170439287579884367[415] = 0;
   out_1170439287579884367[416] = 0;
   out_1170439287579884367[417] = 1.0;
   out_1170439287579884367[418] = 0;
   out_1170439287579884367[419] = 0;
   out_1170439287579884367[420] = 0;
   out_1170439287579884367[421] = 0;
   out_1170439287579884367[422] = 0;
   out_1170439287579884367[423] = 0;
   out_1170439287579884367[424] = 0;
   out_1170439287579884367[425] = 0;
   out_1170439287579884367[426] = 0;
   out_1170439287579884367[427] = 0;
   out_1170439287579884367[428] = 0;
   out_1170439287579884367[429] = 0;
   out_1170439287579884367[430] = 0;
   out_1170439287579884367[431] = 0;
   out_1170439287579884367[432] = 0;
   out_1170439287579884367[433] = 0;
   out_1170439287579884367[434] = 0;
   out_1170439287579884367[435] = 0;
   out_1170439287579884367[436] = 0;
   out_1170439287579884367[437] = 0;
   out_1170439287579884367[438] = 0;
   out_1170439287579884367[439] = 1.0;
   out_1170439287579884367[440] = 0;
   out_1170439287579884367[441] = 0;
   out_1170439287579884367[442] = 0;
   out_1170439287579884367[443] = 0;
   out_1170439287579884367[444] = 0;
   out_1170439287579884367[445] = 0;
   out_1170439287579884367[446] = 0;
   out_1170439287579884367[447] = 0;
   out_1170439287579884367[448] = 0;
   out_1170439287579884367[449] = 0;
   out_1170439287579884367[450] = 0;
   out_1170439287579884367[451] = 0;
   out_1170439287579884367[452] = 0;
   out_1170439287579884367[453] = 0;
   out_1170439287579884367[454] = 0;
   out_1170439287579884367[455] = 0;
   out_1170439287579884367[456] = 0;
   out_1170439287579884367[457] = 0;
   out_1170439287579884367[458] = 0;
   out_1170439287579884367[459] = 0;
   out_1170439287579884367[460] = 0;
   out_1170439287579884367[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3390961232896241683) {
   out_3390961232896241683[0] = dt*state[7] + state[0];
   out_3390961232896241683[1] = dt*state[8] + state[1];
   out_3390961232896241683[2] = dt*state[9] + state[2];
   out_3390961232896241683[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3390961232896241683[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3390961232896241683[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3390961232896241683[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3390961232896241683[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3390961232896241683[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3390961232896241683[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3390961232896241683[10] = state[10];
   out_3390961232896241683[11] = state[11];
   out_3390961232896241683[12] = state[12];
   out_3390961232896241683[13] = state[13];
   out_3390961232896241683[14] = state[14];
   out_3390961232896241683[15] = state[15];
   out_3390961232896241683[16] = state[16];
   out_3390961232896241683[17] = state[17];
   out_3390961232896241683[18] = state[18];
   out_3390961232896241683[19] = state[19];
   out_3390961232896241683[20] = state[20];
   out_3390961232896241683[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8780167090476733147) {
   out_8780167090476733147[0] = 1;
   out_8780167090476733147[1] = 0;
   out_8780167090476733147[2] = 0;
   out_8780167090476733147[3] = 0;
   out_8780167090476733147[4] = 0;
   out_8780167090476733147[5] = 0;
   out_8780167090476733147[6] = dt;
   out_8780167090476733147[7] = 0;
   out_8780167090476733147[8] = 0;
   out_8780167090476733147[9] = 0;
   out_8780167090476733147[10] = 0;
   out_8780167090476733147[11] = 0;
   out_8780167090476733147[12] = 0;
   out_8780167090476733147[13] = 0;
   out_8780167090476733147[14] = 0;
   out_8780167090476733147[15] = 0;
   out_8780167090476733147[16] = 0;
   out_8780167090476733147[17] = 0;
   out_8780167090476733147[18] = 0;
   out_8780167090476733147[19] = 0;
   out_8780167090476733147[20] = 0;
   out_8780167090476733147[21] = 0;
   out_8780167090476733147[22] = 1;
   out_8780167090476733147[23] = 0;
   out_8780167090476733147[24] = 0;
   out_8780167090476733147[25] = 0;
   out_8780167090476733147[26] = 0;
   out_8780167090476733147[27] = 0;
   out_8780167090476733147[28] = dt;
   out_8780167090476733147[29] = 0;
   out_8780167090476733147[30] = 0;
   out_8780167090476733147[31] = 0;
   out_8780167090476733147[32] = 0;
   out_8780167090476733147[33] = 0;
   out_8780167090476733147[34] = 0;
   out_8780167090476733147[35] = 0;
   out_8780167090476733147[36] = 0;
   out_8780167090476733147[37] = 0;
   out_8780167090476733147[38] = 0;
   out_8780167090476733147[39] = 0;
   out_8780167090476733147[40] = 0;
   out_8780167090476733147[41] = 0;
   out_8780167090476733147[42] = 0;
   out_8780167090476733147[43] = 0;
   out_8780167090476733147[44] = 1;
   out_8780167090476733147[45] = 0;
   out_8780167090476733147[46] = 0;
   out_8780167090476733147[47] = 0;
   out_8780167090476733147[48] = 0;
   out_8780167090476733147[49] = 0;
   out_8780167090476733147[50] = dt;
   out_8780167090476733147[51] = 0;
   out_8780167090476733147[52] = 0;
   out_8780167090476733147[53] = 0;
   out_8780167090476733147[54] = 0;
   out_8780167090476733147[55] = 0;
   out_8780167090476733147[56] = 0;
   out_8780167090476733147[57] = 0;
   out_8780167090476733147[58] = 0;
   out_8780167090476733147[59] = 0;
   out_8780167090476733147[60] = 0;
   out_8780167090476733147[61] = 0;
   out_8780167090476733147[62] = 0;
   out_8780167090476733147[63] = 0;
   out_8780167090476733147[64] = 0;
   out_8780167090476733147[65] = 0;
   out_8780167090476733147[66] = 1;
   out_8780167090476733147[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8780167090476733147[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8780167090476733147[69] = 0;
   out_8780167090476733147[70] = 0;
   out_8780167090476733147[71] = 0;
   out_8780167090476733147[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8780167090476733147[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8780167090476733147[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8780167090476733147[75] = 0;
   out_8780167090476733147[76] = 0;
   out_8780167090476733147[77] = 0;
   out_8780167090476733147[78] = 0;
   out_8780167090476733147[79] = 0;
   out_8780167090476733147[80] = 0;
   out_8780167090476733147[81] = 0;
   out_8780167090476733147[82] = 0;
   out_8780167090476733147[83] = 0;
   out_8780167090476733147[84] = 0;
   out_8780167090476733147[85] = 0;
   out_8780167090476733147[86] = 0;
   out_8780167090476733147[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8780167090476733147[88] = 1;
   out_8780167090476733147[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8780167090476733147[90] = 0;
   out_8780167090476733147[91] = 0;
   out_8780167090476733147[92] = 0;
   out_8780167090476733147[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8780167090476733147[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8780167090476733147[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8780167090476733147[96] = 0;
   out_8780167090476733147[97] = 0;
   out_8780167090476733147[98] = 0;
   out_8780167090476733147[99] = 0;
   out_8780167090476733147[100] = 0;
   out_8780167090476733147[101] = 0;
   out_8780167090476733147[102] = 0;
   out_8780167090476733147[103] = 0;
   out_8780167090476733147[104] = 0;
   out_8780167090476733147[105] = 0;
   out_8780167090476733147[106] = 0;
   out_8780167090476733147[107] = 0;
   out_8780167090476733147[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8780167090476733147[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8780167090476733147[110] = 1;
   out_8780167090476733147[111] = 0;
   out_8780167090476733147[112] = 0;
   out_8780167090476733147[113] = 0;
   out_8780167090476733147[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8780167090476733147[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8780167090476733147[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8780167090476733147[117] = 0;
   out_8780167090476733147[118] = 0;
   out_8780167090476733147[119] = 0;
   out_8780167090476733147[120] = 0;
   out_8780167090476733147[121] = 0;
   out_8780167090476733147[122] = 0;
   out_8780167090476733147[123] = 0;
   out_8780167090476733147[124] = 0;
   out_8780167090476733147[125] = 0;
   out_8780167090476733147[126] = 0;
   out_8780167090476733147[127] = 0;
   out_8780167090476733147[128] = 0;
   out_8780167090476733147[129] = 0;
   out_8780167090476733147[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8780167090476733147[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8780167090476733147[132] = 1;
   out_8780167090476733147[133] = 0;
   out_8780167090476733147[134] = 0;
   out_8780167090476733147[135] = 0;
   out_8780167090476733147[136] = 0;
   out_8780167090476733147[137] = 0;
   out_8780167090476733147[138] = 0;
   out_8780167090476733147[139] = 0;
   out_8780167090476733147[140] = 0;
   out_8780167090476733147[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8780167090476733147[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8780167090476733147[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8780167090476733147[144] = 0;
   out_8780167090476733147[145] = 0;
   out_8780167090476733147[146] = 0;
   out_8780167090476733147[147] = 0;
   out_8780167090476733147[148] = 0;
   out_8780167090476733147[149] = 0;
   out_8780167090476733147[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8780167090476733147[151] = 0;
   out_8780167090476733147[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8780167090476733147[153] = 0;
   out_8780167090476733147[154] = 1;
   out_8780167090476733147[155] = 0;
   out_8780167090476733147[156] = 0;
   out_8780167090476733147[157] = 0;
   out_8780167090476733147[158] = 0;
   out_8780167090476733147[159] = 0;
   out_8780167090476733147[160] = 0;
   out_8780167090476733147[161] = 0;
   out_8780167090476733147[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8780167090476733147[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8780167090476733147[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8780167090476733147[165] = 0;
   out_8780167090476733147[166] = 0;
   out_8780167090476733147[167] = 0;
   out_8780167090476733147[168] = 0;
   out_8780167090476733147[169] = 0;
   out_8780167090476733147[170] = 0;
   out_8780167090476733147[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8780167090476733147[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8780167090476733147[173] = 0;
   out_8780167090476733147[174] = 0;
   out_8780167090476733147[175] = 0;
   out_8780167090476733147[176] = 1;
   out_8780167090476733147[177] = 0;
   out_8780167090476733147[178] = 0;
   out_8780167090476733147[179] = 0;
   out_8780167090476733147[180] = 0;
   out_8780167090476733147[181] = 0;
   out_8780167090476733147[182] = 0;
   out_8780167090476733147[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8780167090476733147[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8780167090476733147[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8780167090476733147[186] = 0;
   out_8780167090476733147[187] = 0;
   out_8780167090476733147[188] = 0;
   out_8780167090476733147[189] = 0;
   out_8780167090476733147[190] = 0;
   out_8780167090476733147[191] = 0;
   out_8780167090476733147[192] = 0;
   out_8780167090476733147[193] = 0;
   out_8780167090476733147[194] = 0;
   out_8780167090476733147[195] = 0;
   out_8780167090476733147[196] = 0;
   out_8780167090476733147[197] = 0;
   out_8780167090476733147[198] = 1;
   out_8780167090476733147[199] = 0;
   out_8780167090476733147[200] = 0;
   out_8780167090476733147[201] = 0;
   out_8780167090476733147[202] = 0;
   out_8780167090476733147[203] = 0;
   out_8780167090476733147[204] = 0;
   out_8780167090476733147[205] = 0;
   out_8780167090476733147[206] = 0;
   out_8780167090476733147[207] = 0;
   out_8780167090476733147[208] = 0;
   out_8780167090476733147[209] = 0;
   out_8780167090476733147[210] = 0;
   out_8780167090476733147[211] = 0;
   out_8780167090476733147[212] = 0;
   out_8780167090476733147[213] = 0;
   out_8780167090476733147[214] = 0;
   out_8780167090476733147[215] = 0;
   out_8780167090476733147[216] = 0;
   out_8780167090476733147[217] = 0;
   out_8780167090476733147[218] = 0;
   out_8780167090476733147[219] = 0;
   out_8780167090476733147[220] = 1;
   out_8780167090476733147[221] = 0;
   out_8780167090476733147[222] = 0;
   out_8780167090476733147[223] = 0;
   out_8780167090476733147[224] = 0;
   out_8780167090476733147[225] = 0;
   out_8780167090476733147[226] = 0;
   out_8780167090476733147[227] = 0;
   out_8780167090476733147[228] = 0;
   out_8780167090476733147[229] = 0;
   out_8780167090476733147[230] = 0;
   out_8780167090476733147[231] = 0;
   out_8780167090476733147[232] = 0;
   out_8780167090476733147[233] = 0;
   out_8780167090476733147[234] = 0;
   out_8780167090476733147[235] = 0;
   out_8780167090476733147[236] = 0;
   out_8780167090476733147[237] = 0;
   out_8780167090476733147[238] = 0;
   out_8780167090476733147[239] = 0;
   out_8780167090476733147[240] = 0;
   out_8780167090476733147[241] = 0;
   out_8780167090476733147[242] = 1;
   out_8780167090476733147[243] = 0;
   out_8780167090476733147[244] = 0;
   out_8780167090476733147[245] = 0;
   out_8780167090476733147[246] = 0;
   out_8780167090476733147[247] = 0;
   out_8780167090476733147[248] = 0;
   out_8780167090476733147[249] = 0;
   out_8780167090476733147[250] = 0;
   out_8780167090476733147[251] = 0;
   out_8780167090476733147[252] = 0;
   out_8780167090476733147[253] = 0;
   out_8780167090476733147[254] = 0;
   out_8780167090476733147[255] = 0;
   out_8780167090476733147[256] = 0;
   out_8780167090476733147[257] = 0;
   out_8780167090476733147[258] = 0;
   out_8780167090476733147[259] = 0;
   out_8780167090476733147[260] = 0;
   out_8780167090476733147[261] = 0;
   out_8780167090476733147[262] = 0;
   out_8780167090476733147[263] = 0;
   out_8780167090476733147[264] = 1;
   out_8780167090476733147[265] = 0;
   out_8780167090476733147[266] = 0;
   out_8780167090476733147[267] = 0;
   out_8780167090476733147[268] = 0;
   out_8780167090476733147[269] = 0;
   out_8780167090476733147[270] = 0;
   out_8780167090476733147[271] = 0;
   out_8780167090476733147[272] = 0;
   out_8780167090476733147[273] = 0;
   out_8780167090476733147[274] = 0;
   out_8780167090476733147[275] = 0;
   out_8780167090476733147[276] = 0;
   out_8780167090476733147[277] = 0;
   out_8780167090476733147[278] = 0;
   out_8780167090476733147[279] = 0;
   out_8780167090476733147[280] = 0;
   out_8780167090476733147[281] = 0;
   out_8780167090476733147[282] = 0;
   out_8780167090476733147[283] = 0;
   out_8780167090476733147[284] = 0;
   out_8780167090476733147[285] = 0;
   out_8780167090476733147[286] = 1;
   out_8780167090476733147[287] = 0;
   out_8780167090476733147[288] = 0;
   out_8780167090476733147[289] = 0;
   out_8780167090476733147[290] = 0;
   out_8780167090476733147[291] = 0;
   out_8780167090476733147[292] = 0;
   out_8780167090476733147[293] = 0;
   out_8780167090476733147[294] = 0;
   out_8780167090476733147[295] = 0;
   out_8780167090476733147[296] = 0;
   out_8780167090476733147[297] = 0;
   out_8780167090476733147[298] = 0;
   out_8780167090476733147[299] = 0;
   out_8780167090476733147[300] = 0;
   out_8780167090476733147[301] = 0;
   out_8780167090476733147[302] = 0;
   out_8780167090476733147[303] = 0;
   out_8780167090476733147[304] = 0;
   out_8780167090476733147[305] = 0;
   out_8780167090476733147[306] = 0;
   out_8780167090476733147[307] = 0;
   out_8780167090476733147[308] = 1;
   out_8780167090476733147[309] = 0;
   out_8780167090476733147[310] = 0;
   out_8780167090476733147[311] = 0;
   out_8780167090476733147[312] = 0;
   out_8780167090476733147[313] = 0;
   out_8780167090476733147[314] = 0;
   out_8780167090476733147[315] = 0;
   out_8780167090476733147[316] = 0;
   out_8780167090476733147[317] = 0;
   out_8780167090476733147[318] = 0;
   out_8780167090476733147[319] = 0;
   out_8780167090476733147[320] = 0;
   out_8780167090476733147[321] = 0;
   out_8780167090476733147[322] = 0;
   out_8780167090476733147[323] = 0;
   out_8780167090476733147[324] = 0;
   out_8780167090476733147[325] = 0;
   out_8780167090476733147[326] = 0;
   out_8780167090476733147[327] = 0;
   out_8780167090476733147[328] = 0;
   out_8780167090476733147[329] = 0;
   out_8780167090476733147[330] = 1;
   out_8780167090476733147[331] = 0;
   out_8780167090476733147[332] = 0;
   out_8780167090476733147[333] = 0;
   out_8780167090476733147[334] = 0;
   out_8780167090476733147[335] = 0;
   out_8780167090476733147[336] = 0;
   out_8780167090476733147[337] = 0;
   out_8780167090476733147[338] = 0;
   out_8780167090476733147[339] = 0;
   out_8780167090476733147[340] = 0;
   out_8780167090476733147[341] = 0;
   out_8780167090476733147[342] = 0;
   out_8780167090476733147[343] = 0;
   out_8780167090476733147[344] = 0;
   out_8780167090476733147[345] = 0;
   out_8780167090476733147[346] = 0;
   out_8780167090476733147[347] = 0;
   out_8780167090476733147[348] = 0;
   out_8780167090476733147[349] = 0;
   out_8780167090476733147[350] = 0;
   out_8780167090476733147[351] = 0;
   out_8780167090476733147[352] = 1;
   out_8780167090476733147[353] = 0;
   out_8780167090476733147[354] = 0;
   out_8780167090476733147[355] = 0;
   out_8780167090476733147[356] = 0;
   out_8780167090476733147[357] = 0;
   out_8780167090476733147[358] = 0;
   out_8780167090476733147[359] = 0;
   out_8780167090476733147[360] = 0;
   out_8780167090476733147[361] = 0;
   out_8780167090476733147[362] = 0;
   out_8780167090476733147[363] = 0;
   out_8780167090476733147[364] = 0;
   out_8780167090476733147[365] = 0;
   out_8780167090476733147[366] = 0;
   out_8780167090476733147[367] = 0;
   out_8780167090476733147[368] = 0;
   out_8780167090476733147[369] = 0;
   out_8780167090476733147[370] = 0;
   out_8780167090476733147[371] = 0;
   out_8780167090476733147[372] = 0;
   out_8780167090476733147[373] = 0;
   out_8780167090476733147[374] = 1;
   out_8780167090476733147[375] = 0;
   out_8780167090476733147[376] = 0;
   out_8780167090476733147[377] = 0;
   out_8780167090476733147[378] = 0;
   out_8780167090476733147[379] = 0;
   out_8780167090476733147[380] = 0;
   out_8780167090476733147[381] = 0;
   out_8780167090476733147[382] = 0;
   out_8780167090476733147[383] = 0;
   out_8780167090476733147[384] = 0;
   out_8780167090476733147[385] = 0;
   out_8780167090476733147[386] = 0;
   out_8780167090476733147[387] = 0;
   out_8780167090476733147[388] = 0;
   out_8780167090476733147[389] = 0;
   out_8780167090476733147[390] = 0;
   out_8780167090476733147[391] = 0;
   out_8780167090476733147[392] = 0;
   out_8780167090476733147[393] = 0;
   out_8780167090476733147[394] = 0;
   out_8780167090476733147[395] = 0;
   out_8780167090476733147[396] = 1;
   out_8780167090476733147[397] = 0;
   out_8780167090476733147[398] = 0;
   out_8780167090476733147[399] = 0;
   out_8780167090476733147[400] = 0;
   out_8780167090476733147[401] = 0;
   out_8780167090476733147[402] = 0;
   out_8780167090476733147[403] = 0;
   out_8780167090476733147[404] = 0;
   out_8780167090476733147[405] = 0;
   out_8780167090476733147[406] = 0;
   out_8780167090476733147[407] = 0;
   out_8780167090476733147[408] = 0;
   out_8780167090476733147[409] = 0;
   out_8780167090476733147[410] = 0;
   out_8780167090476733147[411] = 0;
   out_8780167090476733147[412] = 0;
   out_8780167090476733147[413] = 0;
   out_8780167090476733147[414] = 0;
   out_8780167090476733147[415] = 0;
   out_8780167090476733147[416] = 0;
   out_8780167090476733147[417] = 0;
   out_8780167090476733147[418] = 1;
   out_8780167090476733147[419] = 0;
   out_8780167090476733147[420] = 0;
   out_8780167090476733147[421] = 0;
   out_8780167090476733147[422] = 0;
   out_8780167090476733147[423] = 0;
   out_8780167090476733147[424] = 0;
   out_8780167090476733147[425] = 0;
   out_8780167090476733147[426] = 0;
   out_8780167090476733147[427] = 0;
   out_8780167090476733147[428] = 0;
   out_8780167090476733147[429] = 0;
   out_8780167090476733147[430] = 0;
   out_8780167090476733147[431] = 0;
   out_8780167090476733147[432] = 0;
   out_8780167090476733147[433] = 0;
   out_8780167090476733147[434] = 0;
   out_8780167090476733147[435] = 0;
   out_8780167090476733147[436] = 0;
   out_8780167090476733147[437] = 0;
   out_8780167090476733147[438] = 0;
   out_8780167090476733147[439] = 0;
   out_8780167090476733147[440] = 1;
}
void h_4(double *state, double *unused, double *out_6438109753214842765) {
   out_6438109753214842765[0] = state[10] + state[13];
   out_6438109753214842765[1] = state[11] + state[14];
   out_6438109753214842765[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4817982154392079832) {
   out_4817982154392079832[0] = 0;
   out_4817982154392079832[1] = 0;
   out_4817982154392079832[2] = 0;
   out_4817982154392079832[3] = 0;
   out_4817982154392079832[4] = 0;
   out_4817982154392079832[5] = 0;
   out_4817982154392079832[6] = 0;
   out_4817982154392079832[7] = 0;
   out_4817982154392079832[8] = 0;
   out_4817982154392079832[9] = 0;
   out_4817982154392079832[10] = 1;
   out_4817982154392079832[11] = 0;
   out_4817982154392079832[12] = 0;
   out_4817982154392079832[13] = 1;
   out_4817982154392079832[14] = 0;
   out_4817982154392079832[15] = 0;
   out_4817982154392079832[16] = 0;
   out_4817982154392079832[17] = 0;
   out_4817982154392079832[18] = 0;
   out_4817982154392079832[19] = 0;
   out_4817982154392079832[20] = 0;
   out_4817982154392079832[21] = 0;
   out_4817982154392079832[22] = 0;
   out_4817982154392079832[23] = 0;
   out_4817982154392079832[24] = 0;
   out_4817982154392079832[25] = 0;
   out_4817982154392079832[26] = 0;
   out_4817982154392079832[27] = 0;
   out_4817982154392079832[28] = 0;
   out_4817982154392079832[29] = 0;
   out_4817982154392079832[30] = 0;
   out_4817982154392079832[31] = 0;
   out_4817982154392079832[32] = 0;
   out_4817982154392079832[33] = 1;
   out_4817982154392079832[34] = 0;
   out_4817982154392079832[35] = 0;
   out_4817982154392079832[36] = 1;
   out_4817982154392079832[37] = 0;
   out_4817982154392079832[38] = 0;
   out_4817982154392079832[39] = 0;
   out_4817982154392079832[40] = 0;
   out_4817982154392079832[41] = 0;
   out_4817982154392079832[42] = 0;
   out_4817982154392079832[43] = 0;
   out_4817982154392079832[44] = 0;
   out_4817982154392079832[45] = 0;
   out_4817982154392079832[46] = 0;
   out_4817982154392079832[47] = 0;
   out_4817982154392079832[48] = 0;
   out_4817982154392079832[49] = 0;
   out_4817982154392079832[50] = 0;
   out_4817982154392079832[51] = 0;
   out_4817982154392079832[52] = 0;
   out_4817982154392079832[53] = 0;
   out_4817982154392079832[54] = 0;
   out_4817982154392079832[55] = 0;
   out_4817982154392079832[56] = 1;
   out_4817982154392079832[57] = 0;
   out_4817982154392079832[58] = 0;
   out_4817982154392079832[59] = 1;
   out_4817982154392079832[60] = 0;
   out_4817982154392079832[61] = 0;
   out_4817982154392079832[62] = 0;
   out_4817982154392079832[63] = 0;
   out_4817982154392079832[64] = 0;
   out_4817982154392079832[65] = 0;
}
void h_9(double *state, double *unused, double *out_4283408552487300595) {
   out_4283408552487300595[0] = state[10];
   out_4283408552487300595[1] = state[11];
   out_4283408552487300595[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2469236780872367638) {
   out_2469236780872367638[0] = 0;
   out_2469236780872367638[1] = 0;
   out_2469236780872367638[2] = 0;
   out_2469236780872367638[3] = 0;
   out_2469236780872367638[4] = 0;
   out_2469236780872367638[5] = 0;
   out_2469236780872367638[6] = 0;
   out_2469236780872367638[7] = 0;
   out_2469236780872367638[8] = 0;
   out_2469236780872367638[9] = 0;
   out_2469236780872367638[10] = 1;
   out_2469236780872367638[11] = 0;
   out_2469236780872367638[12] = 0;
   out_2469236780872367638[13] = 0;
   out_2469236780872367638[14] = 0;
   out_2469236780872367638[15] = 0;
   out_2469236780872367638[16] = 0;
   out_2469236780872367638[17] = 0;
   out_2469236780872367638[18] = 0;
   out_2469236780872367638[19] = 0;
   out_2469236780872367638[20] = 0;
   out_2469236780872367638[21] = 0;
   out_2469236780872367638[22] = 0;
   out_2469236780872367638[23] = 0;
   out_2469236780872367638[24] = 0;
   out_2469236780872367638[25] = 0;
   out_2469236780872367638[26] = 0;
   out_2469236780872367638[27] = 0;
   out_2469236780872367638[28] = 0;
   out_2469236780872367638[29] = 0;
   out_2469236780872367638[30] = 0;
   out_2469236780872367638[31] = 0;
   out_2469236780872367638[32] = 0;
   out_2469236780872367638[33] = 1;
   out_2469236780872367638[34] = 0;
   out_2469236780872367638[35] = 0;
   out_2469236780872367638[36] = 0;
   out_2469236780872367638[37] = 0;
   out_2469236780872367638[38] = 0;
   out_2469236780872367638[39] = 0;
   out_2469236780872367638[40] = 0;
   out_2469236780872367638[41] = 0;
   out_2469236780872367638[42] = 0;
   out_2469236780872367638[43] = 0;
   out_2469236780872367638[44] = 0;
   out_2469236780872367638[45] = 0;
   out_2469236780872367638[46] = 0;
   out_2469236780872367638[47] = 0;
   out_2469236780872367638[48] = 0;
   out_2469236780872367638[49] = 0;
   out_2469236780872367638[50] = 0;
   out_2469236780872367638[51] = 0;
   out_2469236780872367638[52] = 0;
   out_2469236780872367638[53] = 0;
   out_2469236780872367638[54] = 0;
   out_2469236780872367638[55] = 0;
   out_2469236780872367638[56] = 1;
   out_2469236780872367638[57] = 0;
   out_2469236780872367638[58] = 0;
   out_2469236780872367638[59] = 0;
   out_2469236780872367638[60] = 0;
   out_2469236780872367638[61] = 0;
   out_2469236780872367638[62] = 0;
   out_2469236780872367638[63] = 0;
   out_2469236780872367638[64] = 0;
   out_2469236780872367638[65] = 0;
}
void h_10(double *state, double *unused, double *out_4280956928070286054) {
   out_4280956928070286054[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4280956928070286054[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4280956928070286054[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1312013271050478428) {
   out_1312013271050478428[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1312013271050478428[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1312013271050478428[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1312013271050478428[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1312013271050478428[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1312013271050478428[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1312013271050478428[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1312013271050478428[7] = 0;
   out_1312013271050478428[8] = 0;
   out_1312013271050478428[9] = 0;
   out_1312013271050478428[10] = 0;
   out_1312013271050478428[11] = 0;
   out_1312013271050478428[12] = 0;
   out_1312013271050478428[13] = 0;
   out_1312013271050478428[14] = 0;
   out_1312013271050478428[15] = 0;
   out_1312013271050478428[16] = 1;
   out_1312013271050478428[17] = 0;
   out_1312013271050478428[18] = 0;
   out_1312013271050478428[19] = 1;
   out_1312013271050478428[20] = 0;
   out_1312013271050478428[21] = 0;
   out_1312013271050478428[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1312013271050478428[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1312013271050478428[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1312013271050478428[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1312013271050478428[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1312013271050478428[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1312013271050478428[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1312013271050478428[29] = 0;
   out_1312013271050478428[30] = 0;
   out_1312013271050478428[31] = 0;
   out_1312013271050478428[32] = 0;
   out_1312013271050478428[33] = 0;
   out_1312013271050478428[34] = 0;
   out_1312013271050478428[35] = 0;
   out_1312013271050478428[36] = 0;
   out_1312013271050478428[37] = 0;
   out_1312013271050478428[38] = 0;
   out_1312013271050478428[39] = 1;
   out_1312013271050478428[40] = 0;
   out_1312013271050478428[41] = 0;
   out_1312013271050478428[42] = 1;
   out_1312013271050478428[43] = 0;
   out_1312013271050478428[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1312013271050478428[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1312013271050478428[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1312013271050478428[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1312013271050478428[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1312013271050478428[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1312013271050478428[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1312013271050478428[51] = 0;
   out_1312013271050478428[52] = 0;
   out_1312013271050478428[53] = 0;
   out_1312013271050478428[54] = 0;
   out_1312013271050478428[55] = 0;
   out_1312013271050478428[56] = 0;
   out_1312013271050478428[57] = 0;
   out_1312013271050478428[58] = 0;
   out_1312013271050478428[59] = 0;
   out_1312013271050478428[60] = 0;
   out_1312013271050478428[61] = 0;
   out_1312013271050478428[62] = 1;
   out_1312013271050478428[63] = 0;
   out_1312013271050478428[64] = 0;
   out_1312013271050478428[65] = 1;
}
void h_12(double *state, double *unused, double *out_8651509579694973384) {
   out_8651509579694973384[0] = state[0];
   out_8651509579694973384[1] = state[1];
   out_8651509579694973384[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7247503542274738788) {
   out_7247503542274738788[0] = 1;
   out_7247503542274738788[1] = 0;
   out_7247503542274738788[2] = 0;
   out_7247503542274738788[3] = 0;
   out_7247503542274738788[4] = 0;
   out_7247503542274738788[5] = 0;
   out_7247503542274738788[6] = 0;
   out_7247503542274738788[7] = 0;
   out_7247503542274738788[8] = 0;
   out_7247503542274738788[9] = 0;
   out_7247503542274738788[10] = 0;
   out_7247503542274738788[11] = 0;
   out_7247503542274738788[12] = 0;
   out_7247503542274738788[13] = 0;
   out_7247503542274738788[14] = 0;
   out_7247503542274738788[15] = 0;
   out_7247503542274738788[16] = 0;
   out_7247503542274738788[17] = 0;
   out_7247503542274738788[18] = 0;
   out_7247503542274738788[19] = 0;
   out_7247503542274738788[20] = 0;
   out_7247503542274738788[21] = 0;
   out_7247503542274738788[22] = 0;
   out_7247503542274738788[23] = 1;
   out_7247503542274738788[24] = 0;
   out_7247503542274738788[25] = 0;
   out_7247503542274738788[26] = 0;
   out_7247503542274738788[27] = 0;
   out_7247503542274738788[28] = 0;
   out_7247503542274738788[29] = 0;
   out_7247503542274738788[30] = 0;
   out_7247503542274738788[31] = 0;
   out_7247503542274738788[32] = 0;
   out_7247503542274738788[33] = 0;
   out_7247503542274738788[34] = 0;
   out_7247503542274738788[35] = 0;
   out_7247503542274738788[36] = 0;
   out_7247503542274738788[37] = 0;
   out_7247503542274738788[38] = 0;
   out_7247503542274738788[39] = 0;
   out_7247503542274738788[40] = 0;
   out_7247503542274738788[41] = 0;
   out_7247503542274738788[42] = 0;
   out_7247503542274738788[43] = 0;
   out_7247503542274738788[44] = 0;
   out_7247503542274738788[45] = 0;
   out_7247503542274738788[46] = 1;
   out_7247503542274738788[47] = 0;
   out_7247503542274738788[48] = 0;
   out_7247503542274738788[49] = 0;
   out_7247503542274738788[50] = 0;
   out_7247503542274738788[51] = 0;
   out_7247503542274738788[52] = 0;
   out_7247503542274738788[53] = 0;
   out_7247503542274738788[54] = 0;
   out_7247503542274738788[55] = 0;
   out_7247503542274738788[56] = 0;
   out_7247503542274738788[57] = 0;
   out_7247503542274738788[58] = 0;
   out_7247503542274738788[59] = 0;
   out_7247503542274738788[60] = 0;
   out_7247503542274738788[61] = 0;
   out_7247503542274738788[62] = 0;
   out_7247503542274738788[63] = 0;
   out_7247503542274738788[64] = 0;
   out_7247503542274738788[65] = 0;
}
void h_31(double *state, double *unused, double *out_3881993293111176745) {
   out_3881993293111176745[0] = state[7];
   out_3881993293111176745[1] = state[8];
   out_3881993293111176745[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1451320097019472456) {
   out_1451320097019472456[0] = 0;
   out_1451320097019472456[1] = 0;
   out_1451320097019472456[2] = 0;
   out_1451320097019472456[3] = 0;
   out_1451320097019472456[4] = 0;
   out_1451320097019472456[5] = 0;
   out_1451320097019472456[6] = 0;
   out_1451320097019472456[7] = 1;
   out_1451320097019472456[8] = 0;
   out_1451320097019472456[9] = 0;
   out_1451320097019472456[10] = 0;
   out_1451320097019472456[11] = 0;
   out_1451320097019472456[12] = 0;
   out_1451320097019472456[13] = 0;
   out_1451320097019472456[14] = 0;
   out_1451320097019472456[15] = 0;
   out_1451320097019472456[16] = 0;
   out_1451320097019472456[17] = 0;
   out_1451320097019472456[18] = 0;
   out_1451320097019472456[19] = 0;
   out_1451320097019472456[20] = 0;
   out_1451320097019472456[21] = 0;
   out_1451320097019472456[22] = 0;
   out_1451320097019472456[23] = 0;
   out_1451320097019472456[24] = 0;
   out_1451320097019472456[25] = 0;
   out_1451320097019472456[26] = 0;
   out_1451320097019472456[27] = 0;
   out_1451320097019472456[28] = 0;
   out_1451320097019472456[29] = 0;
   out_1451320097019472456[30] = 1;
   out_1451320097019472456[31] = 0;
   out_1451320097019472456[32] = 0;
   out_1451320097019472456[33] = 0;
   out_1451320097019472456[34] = 0;
   out_1451320097019472456[35] = 0;
   out_1451320097019472456[36] = 0;
   out_1451320097019472456[37] = 0;
   out_1451320097019472456[38] = 0;
   out_1451320097019472456[39] = 0;
   out_1451320097019472456[40] = 0;
   out_1451320097019472456[41] = 0;
   out_1451320097019472456[42] = 0;
   out_1451320097019472456[43] = 0;
   out_1451320097019472456[44] = 0;
   out_1451320097019472456[45] = 0;
   out_1451320097019472456[46] = 0;
   out_1451320097019472456[47] = 0;
   out_1451320097019472456[48] = 0;
   out_1451320097019472456[49] = 0;
   out_1451320097019472456[50] = 0;
   out_1451320097019472456[51] = 0;
   out_1451320097019472456[52] = 0;
   out_1451320097019472456[53] = 1;
   out_1451320097019472456[54] = 0;
   out_1451320097019472456[55] = 0;
   out_1451320097019472456[56] = 0;
   out_1451320097019472456[57] = 0;
   out_1451320097019472456[58] = 0;
   out_1451320097019472456[59] = 0;
   out_1451320097019472456[60] = 0;
   out_1451320097019472456[61] = 0;
   out_1451320097019472456[62] = 0;
   out_1451320097019472456[63] = 0;
   out_1451320097019472456[64] = 0;
   out_1451320097019472456[65] = 0;
}
void h_32(double *state, double *unused, double *out_6400073782943741741) {
   out_6400073782943741741[0] = state[3];
   out_6400073782943741741[1] = state[4];
   out_6400073782943741741[2] = state[5];
   out_6400073782943741741[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1253704415882277481) {
   out_1253704415882277481[0] = 0;
   out_1253704415882277481[1] = 0;
   out_1253704415882277481[2] = 0;
   out_1253704415882277481[3] = 1;
   out_1253704415882277481[4] = 0;
   out_1253704415882277481[5] = 0;
   out_1253704415882277481[6] = 0;
   out_1253704415882277481[7] = 0;
   out_1253704415882277481[8] = 0;
   out_1253704415882277481[9] = 0;
   out_1253704415882277481[10] = 0;
   out_1253704415882277481[11] = 0;
   out_1253704415882277481[12] = 0;
   out_1253704415882277481[13] = 0;
   out_1253704415882277481[14] = 0;
   out_1253704415882277481[15] = 0;
   out_1253704415882277481[16] = 0;
   out_1253704415882277481[17] = 0;
   out_1253704415882277481[18] = 0;
   out_1253704415882277481[19] = 0;
   out_1253704415882277481[20] = 0;
   out_1253704415882277481[21] = 0;
   out_1253704415882277481[22] = 0;
   out_1253704415882277481[23] = 0;
   out_1253704415882277481[24] = 0;
   out_1253704415882277481[25] = 0;
   out_1253704415882277481[26] = 1;
   out_1253704415882277481[27] = 0;
   out_1253704415882277481[28] = 0;
   out_1253704415882277481[29] = 0;
   out_1253704415882277481[30] = 0;
   out_1253704415882277481[31] = 0;
   out_1253704415882277481[32] = 0;
   out_1253704415882277481[33] = 0;
   out_1253704415882277481[34] = 0;
   out_1253704415882277481[35] = 0;
   out_1253704415882277481[36] = 0;
   out_1253704415882277481[37] = 0;
   out_1253704415882277481[38] = 0;
   out_1253704415882277481[39] = 0;
   out_1253704415882277481[40] = 0;
   out_1253704415882277481[41] = 0;
   out_1253704415882277481[42] = 0;
   out_1253704415882277481[43] = 0;
   out_1253704415882277481[44] = 0;
   out_1253704415882277481[45] = 0;
   out_1253704415882277481[46] = 0;
   out_1253704415882277481[47] = 0;
   out_1253704415882277481[48] = 0;
   out_1253704415882277481[49] = 1;
   out_1253704415882277481[50] = 0;
   out_1253704415882277481[51] = 0;
   out_1253704415882277481[52] = 0;
   out_1253704415882277481[53] = 0;
   out_1253704415882277481[54] = 0;
   out_1253704415882277481[55] = 0;
   out_1253704415882277481[56] = 0;
   out_1253704415882277481[57] = 0;
   out_1253704415882277481[58] = 0;
   out_1253704415882277481[59] = 0;
   out_1253704415882277481[60] = 0;
   out_1253704415882277481[61] = 0;
   out_1253704415882277481[62] = 0;
   out_1253704415882277481[63] = 0;
   out_1253704415882277481[64] = 0;
   out_1253704415882277481[65] = 0;
   out_1253704415882277481[66] = 0;
   out_1253704415882277481[67] = 0;
   out_1253704415882277481[68] = 0;
   out_1253704415882277481[69] = 0;
   out_1253704415882277481[70] = 0;
   out_1253704415882277481[71] = 0;
   out_1253704415882277481[72] = 1;
   out_1253704415882277481[73] = 0;
   out_1253704415882277481[74] = 0;
   out_1253704415882277481[75] = 0;
   out_1253704415882277481[76] = 0;
   out_1253704415882277481[77] = 0;
   out_1253704415882277481[78] = 0;
   out_1253704415882277481[79] = 0;
   out_1253704415882277481[80] = 0;
   out_1253704415882277481[81] = 0;
   out_1253704415882277481[82] = 0;
   out_1253704415882277481[83] = 0;
   out_1253704415882277481[84] = 0;
   out_1253704415882277481[85] = 0;
   out_1253704415882277481[86] = 0;
   out_1253704415882277481[87] = 0;
}
void h_13(double *state, double *unused, double *out_4605120974302349542) {
   out_4605120974302349542[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4605120974302349542[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4605120974302349542[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2583655545270933408) {
   out_2583655545270933408[0] = 0;
   out_2583655545270933408[1] = 0;
   out_2583655545270933408[2] = 0;
   out_2583655545270933408[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2583655545270933408[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2583655545270933408[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2583655545270933408[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2583655545270933408[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2583655545270933408[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2583655545270933408[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2583655545270933408[10] = 0;
   out_2583655545270933408[11] = 0;
   out_2583655545270933408[12] = 0;
   out_2583655545270933408[13] = 0;
   out_2583655545270933408[14] = 0;
   out_2583655545270933408[15] = 0;
   out_2583655545270933408[16] = 0;
   out_2583655545270933408[17] = 0;
   out_2583655545270933408[18] = 0;
   out_2583655545270933408[19] = 0;
   out_2583655545270933408[20] = 0;
   out_2583655545270933408[21] = 0;
   out_2583655545270933408[22] = 0;
   out_2583655545270933408[23] = 0;
   out_2583655545270933408[24] = 0;
   out_2583655545270933408[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2583655545270933408[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2583655545270933408[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2583655545270933408[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2583655545270933408[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2583655545270933408[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2583655545270933408[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2583655545270933408[32] = 0;
   out_2583655545270933408[33] = 0;
   out_2583655545270933408[34] = 0;
   out_2583655545270933408[35] = 0;
   out_2583655545270933408[36] = 0;
   out_2583655545270933408[37] = 0;
   out_2583655545270933408[38] = 0;
   out_2583655545270933408[39] = 0;
   out_2583655545270933408[40] = 0;
   out_2583655545270933408[41] = 0;
   out_2583655545270933408[42] = 0;
   out_2583655545270933408[43] = 0;
   out_2583655545270933408[44] = 0;
   out_2583655545270933408[45] = 0;
   out_2583655545270933408[46] = 0;
   out_2583655545270933408[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2583655545270933408[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2583655545270933408[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2583655545270933408[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2583655545270933408[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2583655545270933408[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2583655545270933408[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2583655545270933408[54] = 0;
   out_2583655545270933408[55] = 0;
   out_2583655545270933408[56] = 0;
   out_2583655545270933408[57] = 0;
   out_2583655545270933408[58] = 0;
   out_2583655545270933408[59] = 0;
   out_2583655545270933408[60] = 0;
   out_2583655545270933408[61] = 0;
   out_2583655545270933408[62] = 0;
   out_2583655545270933408[63] = 0;
   out_2583655545270933408[64] = 0;
   out_2583655545270933408[65] = 0;
}
void h_14(double *state, double *unused, double *out_4283408552487300595) {
   out_4283408552487300595[0] = state[10];
   out_4283408552487300595[1] = state[11];
   out_4283408552487300595[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2469236780872367638) {
   out_2469236780872367638[0] = 0;
   out_2469236780872367638[1] = 0;
   out_2469236780872367638[2] = 0;
   out_2469236780872367638[3] = 0;
   out_2469236780872367638[4] = 0;
   out_2469236780872367638[5] = 0;
   out_2469236780872367638[6] = 0;
   out_2469236780872367638[7] = 0;
   out_2469236780872367638[8] = 0;
   out_2469236780872367638[9] = 0;
   out_2469236780872367638[10] = 1;
   out_2469236780872367638[11] = 0;
   out_2469236780872367638[12] = 0;
   out_2469236780872367638[13] = 0;
   out_2469236780872367638[14] = 0;
   out_2469236780872367638[15] = 0;
   out_2469236780872367638[16] = 0;
   out_2469236780872367638[17] = 0;
   out_2469236780872367638[18] = 0;
   out_2469236780872367638[19] = 0;
   out_2469236780872367638[20] = 0;
   out_2469236780872367638[21] = 0;
   out_2469236780872367638[22] = 0;
   out_2469236780872367638[23] = 0;
   out_2469236780872367638[24] = 0;
   out_2469236780872367638[25] = 0;
   out_2469236780872367638[26] = 0;
   out_2469236780872367638[27] = 0;
   out_2469236780872367638[28] = 0;
   out_2469236780872367638[29] = 0;
   out_2469236780872367638[30] = 0;
   out_2469236780872367638[31] = 0;
   out_2469236780872367638[32] = 0;
   out_2469236780872367638[33] = 1;
   out_2469236780872367638[34] = 0;
   out_2469236780872367638[35] = 0;
   out_2469236780872367638[36] = 0;
   out_2469236780872367638[37] = 0;
   out_2469236780872367638[38] = 0;
   out_2469236780872367638[39] = 0;
   out_2469236780872367638[40] = 0;
   out_2469236780872367638[41] = 0;
   out_2469236780872367638[42] = 0;
   out_2469236780872367638[43] = 0;
   out_2469236780872367638[44] = 0;
   out_2469236780872367638[45] = 0;
   out_2469236780872367638[46] = 0;
   out_2469236780872367638[47] = 0;
   out_2469236780872367638[48] = 0;
   out_2469236780872367638[49] = 0;
   out_2469236780872367638[50] = 0;
   out_2469236780872367638[51] = 0;
   out_2469236780872367638[52] = 0;
   out_2469236780872367638[53] = 0;
   out_2469236780872367638[54] = 0;
   out_2469236780872367638[55] = 0;
   out_2469236780872367638[56] = 1;
   out_2469236780872367638[57] = 0;
   out_2469236780872367638[58] = 0;
   out_2469236780872367638[59] = 0;
   out_2469236780872367638[60] = 0;
   out_2469236780872367638[61] = 0;
   out_2469236780872367638[62] = 0;
   out_2469236780872367638[63] = 0;
   out_2469236780872367638[64] = 0;
   out_2469236780872367638[65] = 0;
}
void h_33(double *state, double *unused, double *out_8898009552539348579) {
   out_8898009552539348579[0] = state[16];
   out_8898009552539348579[1] = state[17];
   out_8898009552539348579[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8745266196254241973) {
   out_8745266196254241973[0] = 0;
   out_8745266196254241973[1] = 0;
   out_8745266196254241973[2] = 0;
   out_8745266196254241973[3] = 0;
   out_8745266196254241973[4] = 0;
   out_8745266196254241973[5] = 0;
   out_8745266196254241973[6] = 0;
   out_8745266196254241973[7] = 0;
   out_8745266196254241973[8] = 0;
   out_8745266196254241973[9] = 0;
   out_8745266196254241973[10] = 0;
   out_8745266196254241973[11] = 0;
   out_8745266196254241973[12] = 0;
   out_8745266196254241973[13] = 0;
   out_8745266196254241973[14] = 0;
   out_8745266196254241973[15] = 0;
   out_8745266196254241973[16] = 1;
   out_8745266196254241973[17] = 0;
   out_8745266196254241973[18] = 0;
   out_8745266196254241973[19] = 0;
   out_8745266196254241973[20] = 0;
   out_8745266196254241973[21] = 0;
   out_8745266196254241973[22] = 0;
   out_8745266196254241973[23] = 0;
   out_8745266196254241973[24] = 0;
   out_8745266196254241973[25] = 0;
   out_8745266196254241973[26] = 0;
   out_8745266196254241973[27] = 0;
   out_8745266196254241973[28] = 0;
   out_8745266196254241973[29] = 0;
   out_8745266196254241973[30] = 0;
   out_8745266196254241973[31] = 0;
   out_8745266196254241973[32] = 0;
   out_8745266196254241973[33] = 0;
   out_8745266196254241973[34] = 0;
   out_8745266196254241973[35] = 0;
   out_8745266196254241973[36] = 0;
   out_8745266196254241973[37] = 0;
   out_8745266196254241973[38] = 0;
   out_8745266196254241973[39] = 1;
   out_8745266196254241973[40] = 0;
   out_8745266196254241973[41] = 0;
   out_8745266196254241973[42] = 0;
   out_8745266196254241973[43] = 0;
   out_8745266196254241973[44] = 0;
   out_8745266196254241973[45] = 0;
   out_8745266196254241973[46] = 0;
   out_8745266196254241973[47] = 0;
   out_8745266196254241973[48] = 0;
   out_8745266196254241973[49] = 0;
   out_8745266196254241973[50] = 0;
   out_8745266196254241973[51] = 0;
   out_8745266196254241973[52] = 0;
   out_8745266196254241973[53] = 0;
   out_8745266196254241973[54] = 0;
   out_8745266196254241973[55] = 0;
   out_8745266196254241973[56] = 0;
   out_8745266196254241973[57] = 0;
   out_8745266196254241973[58] = 0;
   out_8745266196254241973[59] = 0;
   out_8745266196254241973[60] = 0;
   out_8745266196254241973[61] = 0;
   out_8745266196254241973[62] = 1;
   out_8745266196254241973[63] = 0;
   out_8745266196254241973[64] = 0;
   out_8745266196254241973[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_9020660452643543827) {
  H(in_vec, out_9020660452643543827);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1843239551603340712) {
  err_fun(nom_x, delta_x, out_1843239551603340712);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1521282881650925734) {
  inv_err_fun(nom_x, true_x, out_1521282881650925734);
}
void live_H_mod_fun(double *state, double *out_1170439287579884367) {
  H_mod_fun(state, out_1170439287579884367);
}
void live_f_fun(double *state, double dt, double *out_3390961232896241683) {
  f_fun(state,  dt, out_3390961232896241683);
}
void live_F_fun(double *state, double dt, double *out_8780167090476733147) {
  F_fun(state,  dt, out_8780167090476733147);
}
void live_h_4(double *state, double *unused, double *out_6438109753214842765) {
  h_4(state, unused, out_6438109753214842765);
}
void live_H_4(double *state, double *unused, double *out_4817982154392079832) {
  H_4(state, unused, out_4817982154392079832);
}
void live_h_9(double *state, double *unused, double *out_4283408552487300595) {
  h_9(state, unused, out_4283408552487300595);
}
void live_H_9(double *state, double *unused, double *out_2469236780872367638) {
  H_9(state, unused, out_2469236780872367638);
}
void live_h_10(double *state, double *unused, double *out_4280956928070286054) {
  h_10(state, unused, out_4280956928070286054);
}
void live_H_10(double *state, double *unused, double *out_1312013271050478428) {
  H_10(state, unused, out_1312013271050478428);
}
void live_h_12(double *state, double *unused, double *out_8651509579694973384) {
  h_12(state, unused, out_8651509579694973384);
}
void live_H_12(double *state, double *unused, double *out_7247503542274738788) {
  H_12(state, unused, out_7247503542274738788);
}
void live_h_31(double *state, double *unused, double *out_3881993293111176745) {
  h_31(state, unused, out_3881993293111176745);
}
void live_H_31(double *state, double *unused, double *out_1451320097019472456) {
  H_31(state, unused, out_1451320097019472456);
}
void live_h_32(double *state, double *unused, double *out_6400073782943741741) {
  h_32(state, unused, out_6400073782943741741);
}
void live_H_32(double *state, double *unused, double *out_1253704415882277481) {
  H_32(state, unused, out_1253704415882277481);
}
void live_h_13(double *state, double *unused, double *out_4605120974302349542) {
  h_13(state, unused, out_4605120974302349542);
}
void live_H_13(double *state, double *unused, double *out_2583655545270933408) {
  H_13(state, unused, out_2583655545270933408);
}
void live_h_14(double *state, double *unused, double *out_4283408552487300595) {
  h_14(state, unused, out_4283408552487300595);
}
void live_H_14(double *state, double *unused, double *out_2469236780872367638) {
  H_14(state, unused, out_2469236780872367638);
}
void live_h_33(double *state, double *unused, double *out_8898009552539348579) {
  h_33(state, unused, out_8898009552539348579);
}
void live_H_33(double *state, double *unused, double *out_8745266196254241973) {
  H_33(state, unused, out_8745266196254241973);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
