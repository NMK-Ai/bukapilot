#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5611574007553285366) {
   out_5611574007553285366[0] = 0;
   out_5611574007553285366[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5611574007553285366[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5611574007553285366[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5611574007553285366[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5611574007553285366[5] = -sin(in_vec[1]);
   out_5611574007553285366[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5611574007553285366[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5611574007553285366[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5611574007553285366[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5611574007553285366[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5611574007553285366[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5611574007553285366[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5611574007553285366[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5611574007553285366[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5611574007553285366[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5611574007553285366[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5611574007553285366[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4147073567660988626) {
   out_4147073567660988626[0] = delta_x[0] + nom_x[0];
   out_4147073567660988626[1] = delta_x[1] + nom_x[1];
   out_4147073567660988626[2] = delta_x[2] + nom_x[2];
   out_4147073567660988626[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4147073567660988626[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4147073567660988626[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4147073567660988626[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4147073567660988626[7] = delta_x[6] + nom_x[7];
   out_4147073567660988626[8] = delta_x[7] + nom_x[8];
   out_4147073567660988626[9] = delta_x[8] + nom_x[9];
   out_4147073567660988626[10] = delta_x[9] + nom_x[10];
   out_4147073567660988626[11] = delta_x[10] + nom_x[11];
   out_4147073567660988626[12] = delta_x[11] + nom_x[12];
   out_4147073567660988626[13] = delta_x[12] + nom_x[13];
   out_4147073567660988626[14] = delta_x[13] + nom_x[14];
   out_4147073567660988626[15] = delta_x[14] + nom_x[15];
   out_4147073567660988626[16] = delta_x[15] + nom_x[16];
   out_4147073567660988626[17] = delta_x[16] + nom_x[17];
   out_4147073567660988626[18] = delta_x[17] + nom_x[18];
   out_4147073567660988626[19] = delta_x[18] + nom_x[19];
   out_4147073567660988626[20] = delta_x[19] + nom_x[20];
   out_4147073567660988626[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1544491652842928106) {
   out_1544491652842928106[0] = -nom_x[0] + true_x[0];
   out_1544491652842928106[1] = -nom_x[1] + true_x[1];
   out_1544491652842928106[2] = -nom_x[2] + true_x[2];
   out_1544491652842928106[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1544491652842928106[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1544491652842928106[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1544491652842928106[6] = -nom_x[7] + true_x[7];
   out_1544491652842928106[7] = -nom_x[8] + true_x[8];
   out_1544491652842928106[8] = -nom_x[9] + true_x[9];
   out_1544491652842928106[9] = -nom_x[10] + true_x[10];
   out_1544491652842928106[10] = -nom_x[11] + true_x[11];
   out_1544491652842928106[11] = -nom_x[12] + true_x[12];
   out_1544491652842928106[12] = -nom_x[13] + true_x[13];
   out_1544491652842928106[13] = -nom_x[14] + true_x[14];
   out_1544491652842928106[14] = -nom_x[15] + true_x[15];
   out_1544491652842928106[15] = -nom_x[16] + true_x[16];
   out_1544491652842928106[16] = -nom_x[17] + true_x[17];
   out_1544491652842928106[17] = -nom_x[18] + true_x[18];
   out_1544491652842928106[18] = -nom_x[19] + true_x[19];
   out_1544491652842928106[19] = -nom_x[20] + true_x[20];
   out_1544491652842928106[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8263643880166488238) {
   out_8263643880166488238[0] = 1.0;
   out_8263643880166488238[1] = 0;
   out_8263643880166488238[2] = 0;
   out_8263643880166488238[3] = 0;
   out_8263643880166488238[4] = 0;
   out_8263643880166488238[5] = 0;
   out_8263643880166488238[6] = 0;
   out_8263643880166488238[7] = 0;
   out_8263643880166488238[8] = 0;
   out_8263643880166488238[9] = 0;
   out_8263643880166488238[10] = 0;
   out_8263643880166488238[11] = 0;
   out_8263643880166488238[12] = 0;
   out_8263643880166488238[13] = 0;
   out_8263643880166488238[14] = 0;
   out_8263643880166488238[15] = 0;
   out_8263643880166488238[16] = 0;
   out_8263643880166488238[17] = 0;
   out_8263643880166488238[18] = 0;
   out_8263643880166488238[19] = 0;
   out_8263643880166488238[20] = 0;
   out_8263643880166488238[21] = 0;
   out_8263643880166488238[22] = 1.0;
   out_8263643880166488238[23] = 0;
   out_8263643880166488238[24] = 0;
   out_8263643880166488238[25] = 0;
   out_8263643880166488238[26] = 0;
   out_8263643880166488238[27] = 0;
   out_8263643880166488238[28] = 0;
   out_8263643880166488238[29] = 0;
   out_8263643880166488238[30] = 0;
   out_8263643880166488238[31] = 0;
   out_8263643880166488238[32] = 0;
   out_8263643880166488238[33] = 0;
   out_8263643880166488238[34] = 0;
   out_8263643880166488238[35] = 0;
   out_8263643880166488238[36] = 0;
   out_8263643880166488238[37] = 0;
   out_8263643880166488238[38] = 0;
   out_8263643880166488238[39] = 0;
   out_8263643880166488238[40] = 0;
   out_8263643880166488238[41] = 0;
   out_8263643880166488238[42] = 0;
   out_8263643880166488238[43] = 0;
   out_8263643880166488238[44] = 1.0;
   out_8263643880166488238[45] = 0;
   out_8263643880166488238[46] = 0;
   out_8263643880166488238[47] = 0;
   out_8263643880166488238[48] = 0;
   out_8263643880166488238[49] = 0;
   out_8263643880166488238[50] = 0;
   out_8263643880166488238[51] = 0;
   out_8263643880166488238[52] = 0;
   out_8263643880166488238[53] = 0;
   out_8263643880166488238[54] = 0;
   out_8263643880166488238[55] = 0;
   out_8263643880166488238[56] = 0;
   out_8263643880166488238[57] = 0;
   out_8263643880166488238[58] = 0;
   out_8263643880166488238[59] = 0;
   out_8263643880166488238[60] = 0;
   out_8263643880166488238[61] = 0;
   out_8263643880166488238[62] = 0;
   out_8263643880166488238[63] = 0;
   out_8263643880166488238[64] = 0;
   out_8263643880166488238[65] = 0;
   out_8263643880166488238[66] = -0.5*state[4];
   out_8263643880166488238[67] = -0.5*state[5];
   out_8263643880166488238[68] = -0.5*state[6];
   out_8263643880166488238[69] = 0;
   out_8263643880166488238[70] = 0;
   out_8263643880166488238[71] = 0;
   out_8263643880166488238[72] = 0;
   out_8263643880166488238[73] = 0;
   out_8263643880166488238[74] = 0;
   out_8263643880166488238[75] = 0;
   out_8263643880166488238[76] = 0;
   out_8263643880166488238[77] = 0;
   out_8263643880166488238[78] = 0;
   out_8263643880166488238[79] = 0;
   out_8263643880166488238[80] = 0;
   out_8263643880166488238[81] = 0;
   out_8263643880166488238[82] = 0;
   out_8263643880166488238[83] = 0;
   out_8263643880166488238[84] = 0;
   out_8263643880166488238[85] = 0;
   out_8263643880166488238[86] = 0;
   out_8263643880166488238[87] = 0.5*state[3];
   out_8263643880166488238[88] = 0.5*state[6];
   out_8263643880166488238[89] = -0.5*state[5];
   out_8263643880166488238[90] = 0;
   out_8263643880166488238[91] = 0;
   out_8263643880166488238[92] = 0;
   out_8263643880166488238[93] = 0;
   out_8263643880166488238[94] = 0;
   out_8263643880166488238[95] = 0;
   out_8263643880166488238[96] = 0;
   out_8263643880166488238[97] = 0;
   out_8263643880166488238[98] = 0;
   out_8263643880166488238[99] = 0;
   out_8263643880166488238[100] = 0;
   out_8263643880166488238[101] = 0;
   out_8263643880166488238[102] = 0;
   out_8263643880166488238[103] = 0;
   out_8263643880166488238[104] = 0;
   out_8263643880166488238[105] = 0;
   out_8263643880166488238[106] = 0;
   out_8263643880166488238[107] = 0;
   out_8263643880166488238[108] = -0.5*state[6];
   out_8263643880166488238[109] = 0.5*state[3];
   out_8263643880166488238[110] = 0.5*state[4];
   out_8263643880166488238[111] = 0;
   out_8263643880166488238[112] = 0;
   out_8263643880166488238[113] = 0;
   out_8263643880166488238[114] = 0;
   out_8263643880166488238[115] = 0;
   out_8263643880166488238[116] = 0;
   out_8263643880166488238[117] = 0;
   out_8263643880166488238[118] = 0;
   out_8263643880166488238[119] = 0;
   out_8263643880166488238[120] = 0;
   out_8263643880166488238[121] = 0;
   out_8263643880166488238[122] = 0;
   out_8263643880166488238[123] = 0;
   out_8263643880166488238[124] = 0;
   out_8263643880166488238[125] = 0;
   out_8263643880166488238[126] = 0;
   out_8263643880166488238[127] = 0;
   out_8263643880166488238[128] = 0;
   out_8263643880166488238[129] = 0.5*state[5];
   out_8263643880166488238[130] = -0.5*state[4];
   out_8263643880166488238[131] = 0.5*state[3];
   out_8263643880166488238[132] = 0;
   out_8263643880166488238[133] = 0;
   out_8263643880166488238[134] = 0;
   out_8263643880166488238[135] = 0;
   out_8263643880166488238[136] = 0;
   out_8263643880166488238[137] = 0;
   out_8263643880166488238[138] = 0;
   out_8263643880166488238[139] = 0;
   out_8263643880166488238[140] = 0;
   out_8263643880166488238[141] = 0;
   out_8263643880166488238[142] = 0;
   out_8263643880166488238[143] = 0;
   out_8263643880166488238[144] = 0;
   out_8263643880166488238[145] = 0;
   out_8263643880166488238[146] = 0;
   out_8263643880166488238[147] = 0;
   out_8263643880166488238[148] = 0;
   out_8263643880166488238[149] = 0;
   out_8263643880166488238[150] = 0;
   out_8263643880166488238[151] = 0;
   out_8263643880166488238[152] = 0;
   out_8263643880166488238[153] = 1.0;
   out_8263643880166488238[154] = 0;
   out_8263643880166488238[155] = 0;
   out_8263643880166488238[156] = 0;
   out_8263643880166488238[157] = 0;
   out_8263643880166488238[158] = 0;
   out_8263643880166488238[159] = 0;
   out_8263643880166488238[160] = 0;
   out_8263643880166488238[161] = 0;
   out_8263643880166488238[162] = 0;
   out_8263643880166488238[163] = 0;
   out_8263643880166488238[164] = 0;
   out_8263643880166488238[165] = 0;
   out_8263643880166488238[166] = 0;
   out_8263643880166488238[167] = 0;
   out_8263643880166488238[168] = 0;
   out_8263643880166488238[169] = 0;
   out_8263643880166488238[170] = 0;
   out_8263643880166488238[171] = 0;
   out_8263643880166488238[172] = 0;
   out_8263643880166488238[173] = 0;
   out_8263643880166488238[174] = 0;
   out_8263643880166488238[175] = 1.0;
   out_8263643880166488238[176] = 0;
   out_8263643880166488238[177] = 0;
   out_8263643880166488238[178] = 0;
   out_8263643880166488238[179] = 0;
   out_8263643880166488238[180] = 0;
   out_8263643880166488238[181] = 0;
   out_8263643880166488238[182] = 0;
   out_8263643880166488238[183] = 0;
   out_8263643880166488238[184] = 0;
   out_8263643880166488238[185] = 0;
   out_8263643880166488238[186] = 0;
   out_8263643880166488238[187] = 0;
   out_8263643880166488238[188] = 0;
   out_8263643880166488238[189] = 0;
   out_8263643880166488238[190] = 0;
   out_8263643880166488238[191] = 0;
   out_8263643880166488238[192] = 0;
   out_8263643880166488238[193] = 0;
   out_8263643880166488238[194] = 0;
   out_8263643880166488238[195] = 0;
   out_8263643880166488238[196] = 0;
   out_8263643880166488238[197] = 1.0;
   out_8263643880166488238[198] = 0;
   out_8263643880166488238[199] = 0;
   out_8263643880166488238[200] = 0;
   out_8263643880166488238[201] = 0;
   out_8263643880166488238[202] = 0;
   out_8263643880166488238[203] = 0;
   out_8263643880166488238[204] = 0;
   out_8263643880166488238[205] = 0;
   out_8263643880166488238[206] = 0;
   out_8263643880166488238[207] = 0;
   out_8263643880166488238[208] = 0;
   out_8263643880166488238[209] = 0;
   out_8263643880166488238[210] = 0;
   out_8263643880166488238[211] = 0;
   out_8263643880166488238[212] = 0;
   out_8263643880166488238[213] = 0;
   out_8263643880166488238[214] = 0;
   out_8263643880166488238[215] = 0;
   out_8263643880166488238[216] = 0;
   out_8263643880166488238[217] = 0;
   out_8263643880166488238[218] = 0;
   out_8263643880166488238[219] = 1.0;
   out_8263643880166488238[220] = 0;
   out_8263643880166488238[221] = 0;
   out_8263643880166488238[222] = 0;
   out_8263643880166488238[223] = 0;
   out_8263643880166488238[224] = 0;
   out_8263643880166488238[225] = 0;
   out_8263643880166488238[226] = 0;
   out_8263643880166488238[227] = 0;
   out_8263643880166488238[228] = 0;
   out_8263643880166488238[229] = 0;
   out_8263643880166488238[230] = 0;
   out_8263643880166488238[231] = 0;
   out_8263643880166488238[232] = 0;
   out_8263643880166488238[233] = 0;
   out_8263643880166488238[234] = 0;
   out_8263643880166488238[235] = 0;
   out_8263643880166488238[236] = 0;
   out_8263643880166488238[237] = 0;
   out_8263643880166488238[238] = 0;
   out_8263643880166488238[239] = 0;
   out_8263643880166488238[240] = 0;
   out_8263643880166488238[241] = 1.0;
   out_8263643880166488238[242] = 0;
   out_8263643880166488238[243] = 0;
   out_8263643880166488238[244] = 0;
   out_8263643880166488238[245] = 0;
   out_8263643880166488238[246] = 0;
   out_8263643880166488238[247] = 0;
   out_8263643880166488238[248] = 0;
   out_8263643880166488238[249] = 0;
   out_8263643880166488238[250] = 0;
   out_8263643880166488238[251] = 0;
   out_8263643880166488238[252] = 0;
   out_8263643880166488238[253] = 0;
   out_8263643880166488238[254] = 0;
   out_8263643880166488238[255] = 0;
   out_8263643880166488238[256] = 0;
   out_8263643880166488238[257] = 0;
   out_8263643880166488238[258] = 0;
   out_8263643880166488238[259] = 0;
   out_8263643880166488238[260] = 0;
   out_8263643880166488238[261] = 0;
   out_8263643880166488238[262] = 0;
   out_8263643880166488238[263] = 1.0;
   out_8263643880166488238[264] = 0;
   out_8263643880166488238[265] = 0;
   out_8263643880166488238[266] = 0;
   out_8263643880166488238[267] = 0;
   out_8263643880166488238[268] = 0;
   out_8263643880166488238[269] = 0;
   out_8263643880166488238[270] = 0;
   out_8263643880166488238[271] = 0;
   out_8263643880166488238[272] = 0;
   out_8263643880166488238[273] = 0;
   out_8263643880166488238[274] = 0;
   out_8263643880166488238[275] = 0;
   out_8263643880166488238[276] = 0;
   out_8263643880166488238[277] = 0;
   out_8263643880166488238[278] = 0;
   out_8263643880166488238[279] = 0;
   out_8263643880166488238[280] = 0;
   out_8263643880166488238[281] = 0;
   out_8263643880166488238[282] = 0;
   out_8263643880166488238[283] = 0;
   out_8263643880166488238[284] = 0;
   out_8263643880166488238[285] = 1.0;
   out_8263643880166488238[286] = 0;
   out_8263643880166488238[287] = 0;
   out_8263643880166488238[288] = 0;
   out_8263643880166488238[289] = 0;
   out_8263643880166488238[290] = 0;
   out_8263643880166488238[291] = 0;
   out_8263643880166488238[292] = 0;
   out_8263643880166488238[293] = 0;
   out_8263643880166488238[294] = 0;
   out_8263643880166488238[295] = 0;
   out_8263643880166488238[296] = 0;
   out_8263643880166488238[297] = 0;
   out_8263643880166488238[298] = 0;
   out_8263643880166488238[299] = 0;
   out_8263643880166488238[300] = 0;
   out_8263643880166488238[301] = 0;
   out_8263643880166488238[302] = 0;
   out_8263643880166488238[303] = 0;
   out_8263643880166488238[304] = 0;
   out_8263643880166488238[305] = 0;
   out_8263643880166488238[306] = 0;
   out_8263643880166488238[307] = 1.0;
   out_8263643880166488238[308] = 0;
   out_8263643880166488238[309] = 0;
   out_8263643880166488238[310] = 0;
   out_8263643880166488238[311] = 0;
   out_8263643880166488238[312] = 0;
   out_8263643880166488238[313] = 0;
   out_8263643880166488238[314] = 0;
   out_8263643880166488238[315] = 0;
   out_8263643880166488238[316] = 0;
   out_8263643880166488238[317] = 0;
   out_8263643880166488238[318] = 0;
   out_8263643880166488238[319] = 0;
   out_8263643880166488238[320] = 0;
   out_8263643880166488238[321] = 0;
   out_8263643880166488238[322] = 0;
   out_8263643880166488238[323] = 0;
   out_8263643880166488238[324] = 0;
   out_8263643880166488238[325] = 0;
   out_8263643880166488238[326] = 0;
   out_8263643880166488238[327] = 0;
   out_8263643880166488238[328] = 0;
   out_8263643880166488238[329] = 1.0;
   out_8263643880166488238[330] = 0;
   out_8263643880166488238[331] = 0;
   out_8263643880166488238[332] = 0;
   out_8263643880166488238[333] = 0;
   out_8263643880166488238[334] = 0;
   out_8263643880166488238[335] = 0;
   out_8263643880166488238[336] = 0;
   out_8263643880166488238[337] = 0;
   out_8263643880166488238[338] = 0;
   out_8263643880166488238[339] = 0;
   out_8263643880166488238[340] = 0;
   out_8263643880166488238[341] = 0;
   out_8263643880166488238[342] = 0;
   out_8263643880166488238[343] = 0;
   out_8263643880166488238[344] = 0;
   out_8263643880166488238[345] = 0;
   out_8263643880166488238[346] = 0;
   out_8263643880166488238[347] = 0;
   out_8263643880166488238[348] = 0;
   out_8263643880166488238[349] = 0;
   out_8263643880166488238[350] = 0;
   out_8263643880166488238[351] = 1.0;
   out_8263643880166488238[352] = 0;
   out_8263643880166488238[353] = 0;
   out_8263643880166488238[354] = 0;
   out_8263643880166488238[355] = 0;
   out_8263643880166488238[356] = 0;
   out_8263643880166488238[357] = 0;
   out_8263643880166488238[358] = 0;
   out_8263643880166488238[359] = 0;
   out_8263643880166488238[360] = 0;
   out_8263643880166488238[361] = 0;
   out_8263643880166488238[362] = 0;
   out_8263643880166488238[363] = 0;
   out_8263643880166488238[364] = 0;
   out_8263643880166488238[365] = 0;
   out_8263643880166488238[366] = 0;
   out_8263643880166488238[367] = 0;
   out_8263643880166488238[368] = 0;
   out_8263643880166488238[369] = 0;
   out_8263643880166488238[370] = 0;
   out_8263643880166488238[371] = 0;
   out_8263643880166488238[372] = 0;
   out_8263643880166488238[373] = 1.0;
   out_8263643880166488238[374] = 0;
   out_8263643880166488238[375] = 0;
   out_8263643880166488238[376] = 0;
   out_8263643880166488238[377] = 0;
   out_8263643880166488238[378] = 0;
   out_8263643880166488238[379] = 0;
   out_8263643880166488238[380] = 0;
   out_8263643880166488238[381] = 0;
   out_8263643880166488238[382] = 0;
   out_8263643880166488238[383] = 0;
   out_8263643880166488238[384] = 0;
   out_8263643880166488238[385] = 0;
   out_8263643880166488238[386] = 0;
   out_8263643880166488238[387] = 0;
   out_8263643880166488238[388] = 0;
   out_8263643880166488238[389] = 0;
   out_8263643880166488238[390] = 0;
   out_8263643880166488238[391] = 0;
   out_8263643880166488238[392] = 0;
   out_8263643880166488238[393] = 0;
   out_8263643880166488238[394] = 0;
   out_8263643880166488238[395] = 1.0;
   out_8263643880166488238[396] = 0;
   out_8263643880166488238[397] = 0;
   out_8263643880166488238[398] = 0;
   out_8263643880166488238[399] = 0;
   out_8263643880166488238[400] = 0;
   out_8263643880166488238[401] = 0;
   out_8263643880166488238[402] = 0;
   out_8263643880166488238[403] = 0;
   out_8263643880166488238[404] = 0;
   out_8263643880166488238[405] = 0;
   out_8263643880166488238[406] = 0;
   out_8263643880166488238[407] = 0;
   out_8263643880166488238[408] = 0;
   out_8263643880166488238[409] = 0;
   out_8263643880166488238[410] = 0;
   out_8263643880166488238[411] = 0;
   out_8263643880166488238[412] = 0;
   out_8263643880166488238[413] = 0;
   out_8263643880166488238[414] = 0;
   out_8263643880166488238[415] = 0;
   out_8263643880166488238[416] = 0;
   out_8263643880166488238[417] = 1.0;
   out_8263643880166488238[418] = 0;
   out_8263643880166488238[419] = 0;
   out_8263643880166488238[420] = 0;
   out_8263643880166488238[421] = 0;
   out_8263643880166488238[422] = 0;
   out_8263643880166488238[423] = 0;
   out_8263643880166488238[424] = 0;
   out_8263643880166488238[425] = 0;
   out_8263643880166488238[426] = 0;
   out_8263643880166488238[427] = 0;
   out_8263643880166488238[428] = 0;
   out_8263643880166488238[429] = 0;
   out_8263643880166488238[430] = 0;
   out_8263643880166488238[431] = 0;
   out_8263643880166488238[432] = 0;
   out_8263643880166488238[433] = 0;
   out_8263643880166488238[434] = 0;
   out_8263643880166488238[435] = 0;
   out_8263643880166488238[436] = 0;
   out_8263643880166488238[437] = 0;
   out_8263643880166488238[438] = 0;
   out_8263643880166488238[439] = 1.0;
   out_8263643880166488238[440] = 0;
   out_8263643880166488238[441] = 0;
   out_8263643880166488238[442] = 0;
   out_8263643880166488238[443] = 0;
   out_8263643880166488238[444] = 0;
   out_8263643880166488238[445] = 0;
   out_8263643880166488238[446] = 0;
   out_8263643880166488238[447] = 0;
   out_8263643880166488238[448] = 0;
   out_8263643880166488238[449] = 0;
   out_8263643880166488238[450] = 0;
   out_8263643880166488238[451] = 0;
   out_8263643880166488238[452] = 0;
   out_8263643880166488238[453] = 0;
   out_8263643880166488238[454] = 0;
   out_8263643880166488238[455] = 0;
   out_8263643880166488238[456] = 0;
   out_8263643880166488238[457] = 0;
   out_8263643880166488238[458] = 0;
   out_8263643880166488238[459] = 0;
   out_8263643880166488238[460] = 0;
   out_8263643880166488238[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7642037060686782526) {
   out_7642037060686782526[0] = dt*state[7] + state[0];
   out_7642037060686782526[1] = dt*state[8] + state[1];
   out_7642037060686782526[2] = dt*state[9] + state[2];
   out_7642037060686782526[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7642037060686782526[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7642037060686782526[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7642037060686782526[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7642037060686782526[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7642037060686782526[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7642037060686782526[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7642037060686782526[10] = state[10];
   out_7642037060686782526[11] = state[11];
   out_7642037060686782526[12] = state[12];
   out_7642037060686782526[13] = state[13];
   out_7642037060686782526[14] = state[14];
   out_7642037060686782526[15] = state[15];
   out_7642037060686782526[16] = state[16];
   out_7642037060686782526[17] = state[17];
   out_7642037060686782526[18] = state[18];
   out_7642037060686782526[19] = state[19];
   out_7642037060686782526[20] = state[20];
   out_7642037060686782526[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3874572245833220670) {
   out_3874572245833220670[0] = 1;
   out_3874572245833220670[1] = 0;
   out_3874572245833220670[2] = 0;
   out_3874572245833220670[3] = 0;
   out_3874572245833220670[4] = 0;
   out_3874572245833220670[5] = 0;
   out_3874572245833220670[6] = dt;
   out_3874572245833220670[7] = 0;
   out_3874572245833220670[8] = 0;
   out_3874572245833220670[9] = 0;
   out_3874572245833220670[10] = 0;
   out_3874572245833220670[11] = 0;
   out_3874572245833220670[12] = 0;
   out_3874572245833220670[13] = 0;
   out_3874572245833220670[14] = 0;
   out_3874572245833220670[15] = 0;
   out_3874572245833220670[16] = 0;
   out_3874572245833220670[17] = 0;
   out_3874572245833220670[18] = 0;
   out_3874572245833220670[19] = 0;
   out_3874572245833220670[20] = 0;
   out_3874572245833220670[21] = 0;
   out_3874572245833220670[22] = 1;
   out_3874572245833220670[23] = 0;
   out_3874572245833220670[24] = 0;
   out_3874572245833220670[25] = 0;
   out_3874572245833220670[26] = 0;
   out_3874572245833220670[27] = 0;
   out_3874572245833220670[28] = dt;
   out_3874572245833220670[29] = 0;
   out_3874572245833220670[30] = 0;
   out_3874572245833220670[31] = 0;
   out_3874572245833220670[32] = 0;
   out_3874572245833220670[33] = 0;
   out_3874572245833220670[34] = 0;
   out_3874572245833220670[35] = 0;
   out_3874572245833220670[36] = 0;
   out_3874572245833220670[37] = 0;
   out_3874572245833220670[38] = 0;
   out_3874572245833220670[39] = 0;
   out_3874572245833220670[40] = 0;
   out_3874572245833220670[41] = 0;
   out_3874572245833220670[42] = 0;
   out_3874572245833220670[43] = 0;
   out_3874572245833220670[44] = 1;
   out_3874572245833220670[45] = 0;
   out_3874572245833220670[46] = 0;
   out_3874572245833220670[47] = 0;
   out_3874572245833220670[48] = 0;
   out_3874572245833220670[49] = 0;
   out_3874572245833220670[50] = dt;
   out_3874572245833220670[51] = 0;
   out_3874572245833220670[52] = 0;
   out_3874572245833220670[53] = 0;
   out_3874572245833220670[54] = 0;
   out_3874572245833220670[55] = 0;
   out_3874572245833220670[56] = 0;
   out_3874572245833220670[57] = 0;
   out_3874572245833220670[58] = 0;
   out_3874572245833220670[59] = 0;
   out_3874572245833220670[60] = 0;
   out_3874572245833220670[61] = 0;
   out_3874572245833220670[62] = 0;
   out_3874572245833220670[63] = 0;
   out_3874572245833220670[64] = 0;
   out_3874572245833220670[65] = 0;
   out_3874572245833220670[66] = 1;
   out_3874572245833220670[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3874572245833220670[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3874572245833220670[69] = 0;
   out_3874572245833220670[70] = 0;
   out_3874572245833220670[71] = 0;
   out_3874572245833220670[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3874572245833220670[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3874572245833220670[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3874572245833220670[75] = 0;
   out_3874572245833220670[76] = 0;
   out_3874572245833220670[77] = 0;
   out_3874572245833220670[78] = 0;
   out_3874572245833220670[79] = 0;
   out_3874572245833220670[80] = 0;
   out_3874572245833220670[81] = 0;
   out_3874572245833220670[82] = 0;
   out_3874572245833220670[83] = 0;
   out_3874572245833220670[84] = 0;
   out_3874572245833220670[85] = 0;
   out_3874572245833220670[86] = 0;
   out_3874572245833220670[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3874572245833220670[88] = 1;
   out_3874572245833220670[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3874572245833220670[90] = 0;
   out_3874572245833220670[91] = 0;
   out_3874572245833220670[92] = 0;
   out_3874572245833220670[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3874572245833220670[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3874572245833220670[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3874572245833220670[96] = 0;
   out_3874572245833220670[97] = 0;
   out_3874572245833220670[98] = 0;
   out_3874572245833220670[99] = 0;
   out_3874572245833220670[100] = 0;
   out_3874572245833220670[101] = 0;
   out_3874572245833220670[102] = 0;
   out_3874572245833220670[103] = 0;
   out_3874572245833220670[104] = 0;
   out_3874572245833220670[105] = 0;
   out_3874572245833220670[106] = 0;
   out_3874572245833220670[107] = 0;
   out_3874572245833220670[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3874572245833220670[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3874572245833220670[110] = 1;
   out_3874572245833220670[111] = 0;
   out_3874572245833220670[112] = 0;
   out_3874572245833220670[113] = 0;
   out_3874572245833220670[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3874572245833220670[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3874572245833220670[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3874572245833220670[117] = 0;
   out_3874572245833220670[118] = 0;
   out_3874572245833220670[119] = 0;
   out_3874572245833220670[120] = 0;
   out_3874572245833220670[121] = 0;
   out_3874572245833220670[122] = 0;
   out_3874572245833220670[123] = 0;
   out_3874572245833220670[124] = 0;
   out_3874572245833220670[125] = 0;
   out_3874572245833220670[126] = 0;
   out_3874572245833220670[127] = 0;
   out_3874572245833220670[128] = 0;
   out_3874572245833220670[129] = 0;
   out_3874572245833220670[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3874572245833220670[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3874572245833220670[132] = 1;
   out_3874572245833220670[133] = 0;
   out_3874572245833220670[134] = 0;
   out_3874572245833220670[135] = 0;
   out_3874572245833220670[136] = 0;
   out_3874572245833220670[137] = 0;
   out_3874572245833220670[138] = 0;
   out_3874572245833220670[139] = 0;
   out_3874572245833220670[140] = 0;
   out_3874572245833220670[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3874572245833220670[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3874572245833220670[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3874572245833220670[144] = 0;
   out_3874572245833220670[145] = 0;
   out_3874572245833220670[146] = 0;
   out_3874572245833220670[147] = 0;
   out_3874572245833220670[148] = 0;
   out_3874572245833220670[149] = 0;
   out_3874572245833220670[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3874572245833220670[151] = 0;
   out_3874572245833220670[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3874572245833220670[153] = 0;
   out_3874572245833220670[154] = 1;
   out_3874572245833220670[155] = 0;
   out_3874572245833220670[156] = 0;
   out_3874572245833220670[157] = 0;
   out_3874572245833220670[158] = 0;
   out_3874572245833220670[159] = 0;
   out_3874572245833220670[160] = 0;
   out_3874572245833220670[161] = 0;
   out_3874572245833220670[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3874572245833220670[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3874572245833220670[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3874572245833220670[165] = 0;
   out_3874572245833220670[166] = 0;
   out_3874572245833220670[167] = 0;
   out_3874572245833220670[168] = 0;
   out_3874572245833220670[169] = 0;
   out_3874572245833220670[170] = 0;
   out_3874572245833220670[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3874572245833220670[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3874572245833220670[173] = 0;
   out_3874572245833220670[174] = 0;
   out_3874572245833220670[175] = 0;
   out_3874572245833220670[176] = 1;
   out_3874572245833220670[177] = 0;
   out_3874572245833220670[178] = 0;
   out_3874572245833220670[179] = 0;
   out_3874572245833220670[180] = 0;
   out_3874572245833220670[181] = 0;
   out_3874572245833220670[182] = 0;
   out_3874572245833220670[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3874572245833220670[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3874572245833220670[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3874572245833220670[186] = 0;
   out_3874572245833220670[187] = 0;
   out_3874572245833220670[188] = 0;
   out_3874572245833220670[189] = 0;
   out_3874572245833220670[190] = 0;
   out_3874572245833220670[191] = 0;
   out_3874572245833220670[192] = 0;
   out_3874572245833220670[193] = 0;
   out_3874572245833220670[194] = 0;
   out_3874572245833220670[195] = 0;
   out_3874572245833220670[196] = 0;
   out_3874572245833220670[197] = 0;
   out_3874572245833220670[198] = 1;
   out_3874572245833220670[199] = 0;
   out_3874572245833220670[200] = 0;
   out_3874572245833220670[201] = 0;
   out_3874572245833220670[202] = 0;
   out_3874572245833220670[203] = 0;
   out_3874572245833220670[204] = 0;
   out_3874572245833220670[205] = 0;
   out_3874572245833220670[206] = 0;
   out_3874572245833220670[207] = 0;
   out_3874572245833220670[208] = 0;
   out_3874572245833220670[209] = 0;
   out_3874572245833220670[210] = 0;
   out_3874572245833220670[211] = 0;
   out_3874572245833220670[212] = 0;
   out_3874572245833220670[213] = 0;
   out_3874572245833220670[214] = 0;
   out_3874572245833220670[215] = 0;
   out_3874572245833220670[216] = 0;
   out_3874572245833220670[217] = 0;
   out_3874572245833220670[218] = 0;
   out_3874572245833220670[219] = 0;
   out_3874572245833220670[220] = 1;
   out_3874572245833220670[221] = 0;
   out_3874572245833220670[222] = 0;
   out_3874572245833220670[223] = 0;
   out_3874572245833220670[224] = 0;
   out_3874572245833220670[225] = 0;
   out_3874572245833220670[226] = 0;
   out_3874572245833220670[227] = 0;
   out_3874572245833220670[228] = 0;
   out_3874572245833220670[229] = 0;
   out_3874572245833220670[230] = 0;
   out_3874572245833220670[231] = 0;
   out_3874572245833220670[232] = 0;
   out_3874572245833220670[233] = 0;
   out_3874572245833220670[234] = 0;
   out_3874572245833220670[235] = 0;
   out_3874572245833220670[236] = 0;
   out_3874572245833220670[237] = 0;
   out_3874572245833220670[238] = 0;
   out_3874572245833220670[239] = 0;
   out_3874572245833220670[240] = 0;
   out_3874572245833220670[241] = 0;
   out_3874572245833220670[242] = 1;
   out_3874572245833220670[243] = 0;
   out_3874572245833220670[244] = 0;
   out_3874572245833220670[245] = 0;
   out_3874572245833220670[246] = 0;
   out_3874572245833220670[247] = 0;
   out_3874572245833220670[248] = 0;
   out_3874572245833220670[249] = 0;
   out_3874572245833220670[250] = 0;
   out_3874572245833220670[251] = 0;
   out_3874572245833220670[252] = 0;
   out_3874572245833220670[253] = 0;
   out_3874572245833220670[254] = 0;
   out_3874572245833220670[255] = 0;
   out_3874572245833220670[256] = 0;
   out_3874572245833220670[257] = 0;
   out_3874572245833220670[258] = 0;
   out_3874572245833220670[259] = 0;
   out_3874572245833220670[260] = 0;
   out_3874572245833220670[261] = 0;
   out_3874572245833220670[262] = 0;
   out_3874572245833220670[263] = 0;
   out_3874572245833220670[264] = 1;
   out_3874572245833220670[265] = 0;
   out_3874572245833220670[266] = 0;
   out_3874572245833220670[267] = 0;
   out_3874572245833220670[268] = 0;
   out_3874572245833220670[269] = 0;
   out_3874572245833220670[270] = 0;
   out_3874572245833220670[271] = 0;
   out_3874572245833220670[272] = 0;
   out_3874572245833220670[273] = 0;
   out_3874572245833220670[274] = 0;
   out_3874572245833220670[275] = 0;
   out_3874572245833220670[276] = 0;
   out_3874572245833220670[277] = 0;
   out_3874572245833220670[278] = 0;
   out_3874572245833220670[279] = 0;
   out_3874572245833220670[280] = 0;
   out_3874572245833220670[281] = 0;
   out_3874572245833220670[282] = 0;
   out_3874572245833220670[283] = 0;
   out_3874572245833220670[284] = 0;
   out_3874572245833220670[285] = 0;
   out_3874572245833220670[286] = 1;
   out_3874572245833220670[287] = 0;
   out_3874572245833220670[288] = 0;
   out_3874572245833220670[289] = 0;
   out_3874572245833220670[290] = 0;
   out_3874572245833220670[291] = 0;
   out_3874572245833220670[292] = 0;
   out_3874572245833220670[293] = 0;
   out_3874572245833220670[294] = 0;
   out_3874572245833220670[295] = 0;
   out_3874572245833220670[296] = 0;
   out_3874572245833220670[297] = 0;
   out_3874572245833220670[298] = 0;
   out_3874572245833220670[299] = 0;
   out_3874572245833220670[300] = 0;
   out_3874572245833220670[301] = 0;
   out_3874572245833220670[302] = 0;
   out_3874572245833220670[303] = 0;
   out_3874572245833220670[304] = 0;
   out_3874572245833220670[305] = 0;
   out_3874572245833220670[306] = 0;
   out_3874572245833220670[307] = 0;
   out_3874572245833220670[308] = 1;
   out_3874572245833220670[309] = 0;
   out_3874572245833220670[310] = 0;
   out_3874572245833220670[311] = 0;
   out_3874572245833220670[312] = 0;
   out_3874572245833220670[313] = 0;
   out_3874572245833220670[314] = 0;
   out_3874572245833220670[315] = 0;
   out_3874572245833220670[316] = 0;
   out_3874572245833220670[317] = 0;
   out_3874572245833220670[318] = 0;
   out_3874572245833220670[319] = 0;
   out_3874572245833220670[320] = 0;
   out_3874572245833220670[321] = 0;
   out_3874572245833220670[322] = 0;
   out_3874572245833220670[323] = 0;
   out_3874572245833220670[324] = 0;
   out_3874572245833220670[325] = 0;
   out_3874572245833220670[326] = 0;
   out_3874572245833220670[327] = 0;
   out_3874572245833220670[328] = 0;
   out_3874572245833220670[329] = 0;
   out_3874572245833220670[330] = 1;
   out_3874572245833220670[331] = 0;
   out_3874572245833220670[332] = 0;
   out_3874572245833220670[333] = 0;
   out_3874572245833220670[334] = 0;
   out_3874572245833220670[335] = 0;
   out_3874572245833220670[336] = 0;
   out_3874572245833220670[337] = 0;
   out_3874572245833220670[338] = 0;
   out_3874572245833220670[339] = 0;
   out_3874572245833220670[340] = 0;
   out_3874572245833220670[341] = 0;
   out_3874572245833220670[342] = 0;
   out_3874572245833220670[343] = 0;
   out_3874572245833220670[344] = 0;
   out_3874572245833220670[345] = 0;
   out_3874572245833220670[346] = 0;
   out_3874572245833220670[347] = 0;
   out_3874572245833220670[348] = 0;
   out_3874572245833220670[349] = 0;
   out_3874572245833220670[350] = 0;
   out_3874572245833220670[351] = 0;
   out_3874572245833220670[352] = 1;
   out_3874572245833220670[353] = 0;
   out_3874572245833220670[354] = 0;
   out_3874572245833220670[355] = 0;
   out_3874572245833220670[356] = 0;
   out_3874572245833220670[357] = 0;
   out_3874572245833220670[358] = 0;
   out_3874572245833220670[359] = 0;
   out_3874572245833220670[360] = 0;
   out_3874572245833220670[361] = 0;
   out_3874572245833220670[362] = 0;
   out_3874572245833220670[363] = 0;
   out_3874572245833220670[364] = 0;
   out_3874572245833220670[365] = 0;
   out_3874572245833220670[366] = 0;
   out_3874572245833220670[367] = 0;
   out_3874572245833220670[368] = 0;
   out_3874572245833220670[369] = 0;
   out_3874572245833220670[370] = 0;
   out_3874572245833220670[371] = 0;
   out_3874572245833220670[372] = 0;
   out_3874572245833220670[373] = 0;
   out_3874572245833220670[374] = 1;
   out_3874572245833220670[375] = 0;
   out_3874572245833220670[376] = 0;
   out_3874572245833220670[377] = 0;
   out_3874572245833220670[378] = 0;
   out_3874572245833220670[379] = 0;
   out_3874572245833220670[380] = 0;
   out_3874572245833220670[381] = 0;
   out_3874572245833220670[382] = 0;
   out_3874572245833220670[383] = 0;
   out_3874572245833220670[384] = 0;
   out_3874572245833220670[385] = 0;
   out_3874572245833220670[386] = 0;
   out_3874572245833220670[387] = 0;
   out_3874572245833220670[388] = 0;
   out_3874572245833220670[389] = 0;
   out_3874572245833220670[390] = 0;
   out_3874572245833220670[391] = 0;
   out_3874572245833220670[392] = 0;
   out_3874572245833220670[393] = 0;
   out_3874572245833220670[394] = 0;
   out_3874572245833220670[395] = 0;
   out_3874572245833220670[396] = 1;
   out_3874572245833220670[397] = 0;
   out_3874572245833220670[398] = 0;
   out_3874572245833220670[399] = 0;
   out_3874572245833220670[400] = 0;
   out_3874572245833220670[401] = 0;
   out_3874572245833220670[402] = 0;
   out_3874572245833220670[403] = 0;
   out_3874572245833220670[404] = 0;
   out_3874572245833220670[405] = 0;
   out_3874572245833220670[406] = 0;
   out_3874572245833220670[407] = 0;
   out_3874572245833220670[408] = 0;
   out_3874572245833220670[409] = 0;
   out_3874572245833220670[410] = 0;
   out_3874572245833220670[411] = 0;
   out_3874572245833220670[412] = 0;
   out_3874572245833220670[413] = 0;
   out_3874572245833220670[414] = 0;
   out_3874572245833220670[415] = 0;
   out_3874572245833220670[416] = 0;
   out_3874572245833220670[417] = 0;
   out_3874572245833220670[418] = 1;
   out_3874572245833220670[419] = 0;
   out_3874572245833220670[420] = 0;
   out_3874572245833220670[421] = 0;
   out_3874572245833220670[422] = 0;
   out_3874572245833220670[423] = 0;
   out_3874572245833220670[424] = 0;
   out_3874572245833220670[425] = 0;
   out_3874572245833220670[426] = 0;
   out_3874572245833220670[427] = 0;
   out_3874572245833220670[428] = 0;
   out_3874572245833220670[429] = 0;
   out_3874572245833220670[430] = 0;
   out_3874572245833220670[431] = 0;
   out_3874572245833220670[432] = 0;
   out_3874572245833220670[433] = 0;
   out_3874572245833220670[434] = 0;
   out_3874572245833220670[435] = 0;
   out_3874572245833220670[436] = 0;
   out_3874572245833220670[437] = 0;
   out_3874572245833220670[438] = 0;
   out_3874572245833220670[439] = 0;
   out_3874572245833220670[440] = 1;
}
void h_4(double *state, double *unused, double *out_4643783970579663950) {
   out_4643783970579663950[0] = state[10] + state[13];
   out_4643783970579663950[1] = state[11] + state[14];
   out_4643783970579663950[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4430389058913291070) {
   out_4430389058913291070[0] = 0;
   out_4430389058913291070[1] = 0;
   out_4430389058913291070[2] = 0;
   out_4430389058913291070[3] = 0;
   out_4430389058913291070[4] = 0;
   out_4430389058913291070[5] = 0;
   out_4430389058913291070[6] = 0;
   out_4430389058913291070[7] = 0;
   out_4430389058913291070[8] = 0;
   out_4430389058913291070[9] = 0;
   out_4430389058913291070[10] = 1;
   out_4430389058913291070[11] = 0;
   out_4430389058913291070[12] = 0;
   out_4430389058913291070[13] = 1;
   out_4430389058913291070[14] = 0;
   out_4430389058913291070[15] = 0;
   out_4430389058913291070[16] = 0;
   out_4430389058913291070[17] = 0;
   out_4430389058913291070[18] = 0;
   out_4430389058913291070[19] = 0;
   out_4430389058913291070[20] = 0;
   out_4430389058913291070[21] = 0;
   out_4430389058913291070[22] = 0;
   out_4430389058913291070[23] = 0;
   out_4430389058913291070[24] = 0;
   out_4430389058913291070[25] = 0;
   out_4430389058913291070[26] = 0;
   out_4430389058913291070[27] = 0;
   out_4430389058913291070[28] = 0;
   out_4430389058913291070[29] = 0;
   out_4430389058913291070[30] = 0;
   out_4430389058913291070[31] = 0;
   out_4430389058913291070[32] = 0;
   out_4430389058913291070[33] = 1;
   out_4430389058913291070[34] = 0;
   out_4430389058913291070[35] = 0;
   out_4430389058913291070[36] = 1;
   out_4430389058913291070[37] = 0;
   out_4430389058913291070[38] = 0;
   out_4430389058913291070[39] = 0;
   out_4430389058913291070[40] = 0;
   out_4430389058913291070[41] = 0;
   out_4430389058913291070[42] = 0;
   out_4430389058913291070[43] = 0;
   out_4430389058913291070[44] = 0;
   out_4430389058913291070[45] = 0;
   out_4430389058913291070[46] = 0;
   out_4430389058913291070[47] = 0;
   out_4430389058913291070[48] = 0;
   out_4430389058913291070[49] = 0;
   out_4430389058913291070[50] = 0;
   out_4430389058913291070[51] = 0;
   out_4430389058913291070[52] = 0;
   out_4430389058913291070[53] = 0;
   out_4430389058913291070[54] = 0;
   out_4430389058913291070[55] = 0;
   out_4430389058913291070[56] = 1;
   out_4430389058913291070[57] = 0;
   out_4430389058913291070[58] = 0;
   out_4430389058913291070[59] = 1;
   out_4430389058913291070[60] = 0;
   out_4430389058913291070[61] = 0;
   out_4430389058913291070[62] = 0;
   out_4430389058913291070[63] = 0;
   out_4430389058913291070[64] = 0;
   out_4430389058913291070[65] = 0;
}
void h_9(double *state, double *unused, double *out_766446161399831429) {
   out_766446161399831429[0] = state[10];
   out_766446161399831429[1] = state[11];
   out_766446161399831429[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6729136079531813076) {
   out_6729136079531813076[0] = 0;
   out_6729136079531813076[1] = 0;
   out_6729136079531813076[2] = 0;
   out_6729136079531813076[3] = 0;
   out_6729136079531813076[4] = 0;
   out_6729136079531813076[5] = 0;
   out_6729136079531813076[6] = 0;
   out_6729136079531813076[7] = 0;
   out_6729136079531813076[8] = 0;
   out_6729136079531813076[9] = 0;
   out_6729136079531813076[10] = 1;
   out_6729136079531813076[11] = 0;
   out_6729136079531813076[12] = 0;
   out_6729136079531813076[13] = 0;
   out_6729136079531813076[14] = 0;
   out_6729136079531813076[15] = 0;
   out_6729136079531813076[16] = 0;
   out_6729136079531813076[17] = 0;
   out_6729136079531813076[18] = 0;
   out_6729136079531813076[19] = 0;
   out_6729136079531813076[20] = 0;
   out_6729136079531813076[21] = 0;
   out_6729136079531813076[22] = 0;
   out_6729136079531813076[23] = 0;
   out_6729136079531813076[24] = 0;
   out_6729136079531813076[25] = 0;
   out_6729136079531813076[26] = 0;
   out_6729136079531813076[27] = 0;
   out_6729136079531813076[28] = 0;
   out_6729136079531813076[29] = 0;
   out_6729136079531813076[30] = 0;
   out_6729136079531813076[31] = 0;
   out_6729136079531813076[32] = 0;
   out_6729136079531813076[33] = 1;
   out_6729136079531813076[34] = 0;
   out_6729136079531813076[35] = 0;
   out_6729136079531813076[36] = 0;
   out_6729136079531813076[37] = 0;
   out_6729136079531813076[38] = 0;
   out_6729136079531813076[39] = 0;
   out_6729136079531813076[40] = 0;
   out_6729136079531813076[41] = 0;
   out_6729136079531813076[42] = 0;
   out_6729136079531813076[43] = 0;
   out_6729136079531813076[44] = 0;
   out_6729136079531813076[45] = 0;
   out_6729136079531813076[46] = 0;
   out_6729136079531813076[47] = 0;
   out_6729136079531813076[48] = 0;
   out_6729136079531813076[49] = 0;
   out_6729136079531813076[50] = 0;
   out_6729136079531813076[51] = 0;
   out_6729136079531813076[52] = 0;
   out_6729136079531813076[53] = 0;
   out_6729136079531813076[54] = 0;
   out_6729136079531813076[55] = 0;
   out_6729136079531813076[56] = 1;
   out_6729136079531813076[57] = 0;
   out_6729136079531813076[58] = 0;
   out_6729136079531813076[59] = 0;
   out_6729136079531813076[60] = 0;
   out_6729136079531813076[61] = 0;
   out_6729136079531813076[62] = 0;
   out_6729136079531813076[63] = 0;
   out_6729136079531813076[64] = 0;
   out_6729136079531813076[65] = 0;
}
void h_10(double *state, double *unused, double *out_5121633474030443790) {
   out_5121633474030443790[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5121633474030443790[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5121633474030443790[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5846836711668955195) {
   out_5846836711668955195[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5846836711668955195[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5846836711668955195[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5846836711668955195[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5846836711668955195[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5846836711668955195[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5846836711668955195[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5846836711668955195[7] = 0;
   out_5846836711668955195[8] = 0;
   out_5846836711668955195[9] = 0;
   out_5846836711668955195[10] = 0;
   out_5846836711668955195[11] = 0;
   out_5846836711668955195[12] = 0;
   out_5846836711668955195[13] = 0;
   out_5846836711668955195[14] = 0;
   out_5846836711668955195[15] = 0;
   out_5846836711668955195[16] = 1;
   out_5846836711668955195[17] = 0;
   out_5846836711668955195[18] = 0;
   out_5846836711668955195[19] = 1;
   out_5846836711668955195[20] = 0;
   out_5846836711668955195[21] = 0;
   out_5846836711668955195[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5846836711668955195[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5846836711668955195[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5846836711668955195[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5846836711668955195[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5846836711668955195[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5846836711668955195[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5846836711668955195[29] = 0;
   out_5846836711668955195[30] = 0;
   out_5846836711668955195[31] = 0;
   out_5846836711668955195[32] = 0;
   out_5846836711668955195[33] = 0;
   out_5846836711668955195[34] = 0;
   out_5846836711668955195[35] = 0;
   out_5846836711668955195[36] = 0;
   out_5846836711668955195[37] = 0;
   out_5846836711668955195[38] = 0;
   out_5846836711668955195[39] = 1;
   out_5846836711668955195[40] = 0;
   out_5846836711668955195[41] = 0;
   out_5846836711668955195[42] = 1;
   out_5846836711668955195[43] = 0;
   out_5846836711668955195[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5846836711668955195[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5846836711668955195[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5846836711668955195[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5846836711668955195[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5846836711668955195[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5846836711668955195[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5846836711668955195[51] = 0;
   out_5846836711668955195[52] = 0;
   out_5846836711668955195[53] = 0;
   out_5846836711668955195[54] = 0;
   out_5846836711668955195[55] = 0;
   out_5846836711668955195[56] = 0;
   out_5846836711668955195[57] = 0;
   out_5846836711668955195[58] = 0;
   out_5846836711668955195[59] = 0;
   out_5846836711668955195[60] = 0;
   out_5846836711668955195[61] = 0;
   out_5846836711668955195[62] = 1;
   out_5846836711668955195[63] = 0;
   out_5846836711668955195[64] = 0;
   out_5846836711668955195[65] = 1;
}
void h_12(double *state, double *unused, double *out_8647337037816411235) {
   out_8647337037816411235[0] = state[0];
   out_8647337037816411235[1] = state[1];
   out_8647337037816411235[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8996898606764298751) {
   out_8996898606764298751[0] = 1;
   out_8996898606764298751[1] = 0;
   out_8996898606764298751[2] = 0;
   out_8996898606764298751[3] = 0;
   out_8996898606764298751[4] = 0;
   out_8996898606764298751[5] = 0;
   out_8996898606764298751[6] = 0;
   out_8996898606764298751[7] = 0;
   out_8996898606764298751[8] = 0;
   out_8996898606764298751[9] = 0;
   out_8996898606764298751[10] = 0;
   out_8996898606764298751[11] = 0;
   out_8996898606764298751[12] = 0;
   out_8996898606764298751[13] = 0;
   out_8996898606764298751[14] = 0;
   out_8996898606764298751[15] = 0;
   out_8996898606764298751[16] = 0;
   out_8996898606764298751[17] = 0;
   out_8996898606764298751[18] = 0;
   out_8996898606764298751[19] = 0;
   out_8996898606764298751[20] = 0;
   out_8996898606764298751[21] = 0;
   out_8996898606764298751[22] = 0;
   out_8996898606764298751[23] = 1;
   out_8996898606764298751[24] = 0;
   out_8996898606764298751[25] = 0;
   out_8996898606764298751[26] = 0;
   out_8996898606764298751[27] = 0;
   out_8996898606764298751[28] = 0;
   out_8996898606764298751[29] = 0;
   out_8996898606764298751[30] = 0;
   out_8996898606764298751[31] = 0;
   out_8996898606764298751[32] = 0;
   out_8996898606764298751[33] = 0;
   out_8996898606764298751[34] = 0;
   out_8996898606764298751[35] = 0;
   out_8996898606764298751[36] = 0;
   out_8996898606764298751[37] = 0;
   out_8996898606764298751[38] = 0;
   out_8996898606764298751[39] = 0;
   out_8996898606764298751[40] = 0;
   out_8996898606764298751[41] = 0;
   out_8996898606764298751[42] = 0;
   out_8996898606764298751[43] = 0;
   out_8996898606764298751[44] = 0;
   out_8996898606764298751[45] = 0;
   out_8996898606764298751[46] = 1;
   out_8996898606764298751[47] = 0;
   out_8996898606764298751[48] = 0;
   out_8996898606764298751[49] = 0;
   out_8996898606764298751[50] = 0;
   out_8996898606764298751[51] = 0;
   out_8996898606764298751[52] = 0;
   out_8996898606764298751[53] = 0;
   out_8996898606764298751[54] = 0;
   out_8996898606764298751[55] = 0;
   out_8996898606764298751[56] = 0;
   out_8996898606764298751[57] = 0;
   out_8996898606764298751[58] = 0;
   out_8996898606764298751[59] = 0;
   out_8996898606764298751[60] = 0;
   out_8996898606764298751[61] = 0;
   out_8996898606764298751[62] = 0;
   out_8996898606764298751[63] = 0;
   out_8996898606764298751[64] = 0;
   out_8996898606764298751[65] = 0;
}
void h_31(double *state, double *unused, double *out_1603042384283341811) {
   out_1603042384283341811[0] = state[7];
   out_1603042384283341811[1] = state[8];
   out_1603042384283341811[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6251335574439285042) {
   out_6251335574439285042[0] = 0;
   out_6251335574439285042[1] = 0;
   out_6251335574439285042[2] = 0;
   out_6251335574439285042[3] = 0;
   out_6251335574439285042[4] = 0;
   out_6251335574439285042[5] = 0;
   out_6251335574439285042[6] = 0;
   out_6251335574439285042[7] = 1;
   out_6251335574439285042[8] = 0;
   out_6251335574439285042[9] = 0;
   out_6251335574439285042[10] = 0;
   out_6251335574439285042[11] = 0;
   out_6251335574439285042[12] = 0;
   out_6251335574439285042[13] = 0;
   out_6251335574439285042[14] = 0;
   out_6251335574439285042[15] = 0;
   out_6251335574439285042[16] = 0;
   out_6251335574439285042[17] = 0;
   out_6251335574439285042[18] = 0;
   out_6251335574439285042[19] = 0;
   out_6251335574439285042[20] = 0;
   out_6251335574439285042[21] = 0;
   out_6251335574439285042[22] = 0;
   out_6251335574439285042[23] = 0;
   out_6251335574439285042[24] = 0;
   out_6251335574439285042[25] = 0;
   out_6251335574439285042[26] = 0;
   out_6251335574439285042[27] = 0;
   out_6251335574439285042[28] = 0;
   out_6251335574439285042[29] = 0;
   out_6251335574439285042[30] = 1;
   out_6251335574439285042[31] = 0;
   out_6251335574439285042[32] = 0;
   out_6251335574439285042[33] = 0;
   out_6251335574439285042[34] = 0;
   out_6251335574439285042[35] = 0;
   out_6251335574439285042[36] = 0;
   out_6251335574439285042[37] = 0;
   out_6251335574439285042[38] = 0;
   out_6251335574439285042[39] = 0;
   out_6251335574439285042[40] = 0;
   out_6251335574439285042[41] = 0;
   out_6251335574439285042[42] = 0;
   out_6251335574439285042[43] = 0;
   out_6251335574439285042[44] = 0;
   out_6251335574439285042[45] = 0;
   out_6251335574439285042[46] = 0;
   out_6251335574439285042[47] = 0;
   out_6251335574439285042[48] = 0;
   out_6251335574439285042[49] = 0;
   out_6251335574439285042[50] = 0;
   out_6251335574439285042[51] = 0;
   out_6251335574439285042[52] = 0;
   out_6251335574439285042[53] = 1;
   out_6251335574439285042[54] = 0;
   out_6251335574439285042[55] = 0;
   out_6251335574439285042[56] = 0;
   out_6251335574439285042[57] = 0;
   out_6251335574439285042[58] = 0;
   out_6251335574439285042[59] = 0;
   out_6251335574439285042[60] = 0;
   out_6251335574439285042[61] = 0;
   out_6251335574439285042[62] = 0;
   out_6251335574439285042[63] = 0;
   out_6251335574439285042[64] = 0;
   out_6251335574439285042[65] = 0;
}
void h_32(double *state, double *unused, double *out_7556554457275842987) {
   out_7556554457275842987[0] = state[3];
   out_7556554457275842987[1] = state[4];
   out_7556554457275842987[2] = state[5];
   out_7556554457275842987[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3578351878613989376) {
   out_3578351878613989376[0] = 0;
   out_3578351878613989376[1] = 0;
   out_3578351878613989376[2] = 0;
   out_3578351878613989376[3] = 1;
   out_3578351878613989376[4] = 0;
   out_3578351878613989376[5] = 0;
   out_3578351878613989376[6] = 0;
   out_3578351878613989376[7] = 0;
   out_3578351878613989376[8] = 0;
   out_3578351878613989376[9] = 0;
   out_3578351878613989376[10] = 0;
   out_3578351878613989376[11] = 0;
   out_3578351878613989376[12] = 0;
   out_3578351878613989376[13] = 0;
   out_3578351878613989376[14] = 0;
   out_3578351878613989376[15] = 0;
   out_3578351878613989376[16] = 0;
   out_3578351878613989376[17] = 0;
   out_3578351878613989376[18] = 0;
   out_3578351878613989376[19] = 0;
   out_3578351878613989376[20] = 0;
   out_3578351878613989376[21] = 0;
   out_3578351878613989376[22] = 0;
   out_3578351878613989376[23] = 0;
   out_3578351878613989376[24] = 0;
   out_3578351878613989376[25] = 0;
   out_3578351878613989376[26] = 1;
   out_3578351878613989376[27] = 0;
   out_3578351878613989376[28] = 0;
   out_3578351878613989376[29] = 0;
   out_3578351878613989376[30] = 0;
   out_3578351878613989376[31] = 0;
   out_3578351878613989376[32] = 0;
   out_3578351878613989376[33] = 0;
   out_3578351878613989376[34] = 0;
   out_3578351878613989376[35] = 0;
   out_3578351878613989376[36] = 0;
   out_3578351878613989376[37] = 0;
   out_3578351878613989376[38] = 0;
   out_3578351878613989376[39] = 0;
   out_3578351878613989376[40] = 0;
   out_3578351878613989376[41] = 0;
   out_3578351878613989376[42] = 0;
   out_3578351878613989376[43] = 0;
   out_3578351878613989376[44] = 0;
   out_3578351878613989376[45] = 0;
   out_3578351878613989376[46] = 0;
   out_3578351878613989376[47] = 0;
   out_3578351878613989376[48] = 0;
   out_3578351878613989376[49] = 1;
   out_3578351878613989376[50] = 0;
   out_3578351878613989376[51] = 0;
   out_3578351878613989376[52] = 0;
   out_3578351878613989376[53] = 0;
   out_3578351878613989376[54] = 0;
   out_3578351878613989376[55] = 0;
   out_3578351878613989376[56] = 0;
   out_3578351878613989376[57] = 0;
   out_3578351878613989376[58] = 0;
   out_3578351878613989376[59] = 0;
   out_3578351878613989376[60] = 0;
   out_3578351878613989376[61] = 0;
   out_3578351878613989376[62] = 0;
   out_3578351878613989376[63] = 0;
   out_3578351878613989376[64] = 0;
   out_3578351878613989376[65] = 0;
   out_3578351878613989376[66] = 0;
   out_3578351878613989376[67] = 0;
   out_3578351878613989376[68] = 0;
   out_3578351878613989376[69] = 0;
   out_3578351878613989376[70] = 0;
   out_3578351878613989376[71] = 0;
   out_3578351878613989376[72] = 1;
   out_3578351878613989376[73] = 0;
   out_3578351878613989376[74] = 0;
   out_3578351878613989376[75] = 0;
   out_3578351878613989376[76] = 0;
   out_3578351878613989376[77] = 0;
   out_3578351878613989376[78] = 0;
   out_3578351878613989376[79] = 0;
   out_3578351878613989376[80] = 0;
   out_3578351878613989376[81] = 0;
   out_3578351878613989376[82] = 0;
   out_3578351878613989376[83] = 0;
   out_3578351878613989376[84] = 0;
   out_3578351878613989376[85] = 0;
   out_3578351878613989376[86] = 0;
   out_3578351878613989376[87] = 0;
}
void h_13(double *state, double *unused, double *out_2667441994367976965) {
   out_2667441994367976965[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2667441994367976965[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2667441994367976965[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2677123412797053228) {
   out_2677123412797053228[0] = 0;
   out_2677123412797053228[1] = 0;
   out_2677123412797053228[2] = 0;
   out_2677123412797053228[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2677123412797053228[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2677123412797053228[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2677123412797053228[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2677123412797053228[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2677123412797053228[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2677123412797053228[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2677123412797053228[10] = 0;
   out_2677123412797053228[11] = 0;
   out_2677123412797053228[12] = 0;
   out_2677123412797053228[13] = 0;
   out_2677123412797053228[14] = 0;
   out_2677123412797053228[15] = 0;
   out_2677123412797053228[16] = 0;
   out_2677123412797053228[17] = 0;
   out_2677123412797053228[18] = 0;
   out_2677123412797053228[19] = 0;
   out_2677123412797053228[20] = 0;
   out_2677123412797053228[21] = 0;
   out_2677123412797053228[22] = 0;
   out_2677123412797053228[23] = 0;
   out_2677123412797053228[24] = 0;
   out_2677123412797053228[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2677123412797053228[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2677123412797053228[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2677123412797053228[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2677123412797053228[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2677123412797053228[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2677123412797053228[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2677123412797053228[32] = 0;
   out_2677123412797053228[33] = 0;
   out_2677123412797053228[34] = 0;
   out_2677123412797053228[35] = 0;
   out_2677123412797053228[36] = 0;
   out_2677123412797053228[37] = 0;
   out_2677123412797053228[38] = 0;
   out_2677123412797053228[39] = 0;
   out_2677123412797053228[40] = 0;
   out_2677123412797053228[41] = 0;
   out_2677123412797053228[42] = 0;
   out_2677123412797053228[43] = 0;
   out_2677123412797053228[44] = 0;
   out_2677123412797053228[45] = 0;
   out_2677123412797053228[46] = 0;
   out_2677123412797053228[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2677123412797053228[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2677123412797053228[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2677123412797053228[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2677123412797053228[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2677123412797053228[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2677123412797053228[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2677123412797053228[54] = 0;
   out_2677123412797053228[55] = 0;
   out_2677123412797053228[56] = 0;
   out_2677123412797053228[57] = 0;
   out_2677123412797053228[58] = 0;
   out_2677123412797053228[59] = 0;
   out_2677123412797053228[60] = 0;
   out_2677123412797053228[61] = 0;
   out_2677123412797053228[62] = 0;
   out_2677123412797053228[63] = 0;
   out_2677123412797053228[64] = 0;
   out_2677123412797053228[65] = 0;
}
void h_14(double *state, double *unused, double *out_766446161399831429) {
   out_766446161399831429[0] = state[10];
   out_766446161399831429[1] = state[11];
   out_766446161399831429[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6729136079531813076) {
   out_6729136079531813076[0] = 0;
   out_6729136079531813076[1] = 0;
   out_6729136079531813076[2] = 0;
   out_6729136079531813076[3] = 0;
   out_6729136079531813076[4] = 0;
   out_6729136079531813076[5] = 0;
   out_6729136079531813076[6] = 0;
   out_6729136079531813076[7] = 0;
   out_6729136079531813076[8] = 0;
   out_6729136079531813076[9] = 0;
   out_6729136079531813076[10] = 1;
   out_6729136079531813076[11] = 0;
   out_6729136079531813076[12] = 0;
   out_6729136079531813076[13] = 0;
   out_6729136079531813076[14] = 0;
   out_6729136079531813076[15] = 0;
   out_6729136079531813076[16] = 0;
   out_6729136079531813076[17] = 0;
   out_6729136079531813076[18] = 0;
   out_6729136079531813076[19] = 0;
   out_6729136079531813076[20] = 0;
   out_6729136079531813076[21] = 0;
   out_6729136079531813076[22] = 0;
   out_6729136079531813076[23] = 0;
   out_6729136079531813076[24] = 0;
   out_6729136079531813076[25] = 0;
   out_6729136079531813076[26] = 0;
   out_6729136079531813076[27] = 0;
   out_6729136079531813076[28] = 0;
   out_6729136079531813076[29] = 0;
   out_6729136079531813076[30] = 0;
   out_6729136079531813076[31] = 0;
   out_6729136079531813076[32] = 0;
   out_6729136079531813076[33] = 1;
   out_6729136079531813076[34] = 0;
   out_6729136079531813076[35] = 0;
   out_6729136079531813076[36] = 0;
   out_6729136079531813076[37] = 0;
   out_6729136079531813076[38] = 0;
   out_6729136079531813076[39] = 0;
   out_6729136079531813076[40] = 0;
   out_6729136079531813076[41] = 0;
   out_6729136079531813076[42] = 0;
   out_6729136079531813076[43] = 0;
   out_6729136079531813076[44] = 0;
   out_6729136079531813076[45] = 0;
   out_6729136079531813076[46] = 0;
   out_6729136079531813076[47] = 0;
   out_6729136079531813076[48] = 0;
   out_6729136079531813076[49] = 0;
   out_6729136079531813076[50] = 0;
   out_6729136079531813076[51] = 0;
   out_6729136079531813076[52] = 0;
   out_6729136079531813076[53] = 0;
   out_6729136079531813076[54] = 0;
   out_6729136079531813076[55] = 0;
   out_6729136079531813076[56] = 1;
   out_6729136079531813076[57] = 0;
   out_6729136079531813076[58] = 0;
   out_6729136079531813076[59] = 0;
   out_6729136079531813076[60] = 0;
   out_6729136079531813076[61] = 0;
   out_6729136079531813076[62] = 0;
   out_6729136079531813076[63] = 0;
   out_6729136079531813076[64] = 0;
   out_6729136079531813076[65] = 0;
}
void h_33(double *state, double *unused, double *out_179669223228452346) {
   out_179669223228452346[0] = state[16];
   out_179669223228452346[1] = state[17];
   out_179669223228452346[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3100778569800427438) {
   out_3100778569800427438[0] = 0;
   out_3100778569800427438[1] = 0;
   out_3100778569800427438[2] = 0;
   out_3100778569800427438[3] = 0;
   out_3100778569800427438[4] = 0;
   out_3100778569800427438[5] = 0;
   out_3100778569800427438[6] = 0;
   out_3100778569800427438[7] = 0;
   out_3100778569800427438[8] = 0;
   out_3100778569800427438[9] = 0;
   out_3100778569800427438[10] = 0;
   out_3100778569800427438[11] = 0;
   out_3100778569800427438[12] = 0;
   out_3100778569800427438[13] = 0;
   out_3100778569800427438[14] = 0;
   out_3100778569800427438[15] = 0;
   out_3100778569800427438[16] = 1;
   out_3100778569800427438[17] = 0;
   out_3100778569800427438[18] = 0;
   out_3100778569800427438[19] = 0;
   out_3100778569800427438[20] = 0;
   out_3100778569800427438[21] = 0;
   out_3100778569800427438[22] = 0;
   out_3100778569800427438[23] = 0;
   out_3100778569800427438[24] = 0;
   out_3100778569800427438[25] = 0;
   out_3100778569800427438[26] = 0;
   out_3100778569800427438[27] = 0;
   out_3100778569800427438[28] = 0;
   out_3100778569800427438[29] = 0;
   out_3100778569800427438[30] = 0;
   out_3100778569800427438[31] = 0;
   out_3100778569800427438[32] = 0;
   out_3100778569800427438[33] = 0;
   out_3100778569800427438[34] = 0;
   out_3100778569800427438[35] = 0;
   out_3100778569800427438[36] = 0;
   out_3100778569800427438[37] = 0;
   out_3100778569800427438[38] = 0;
   out_3100778569800427438[39] = 1;
   out_3100778569800427438[40] = 0;
   out_3100778569800427438[41] = 0;
   out_3100778569800427438[42] = 0;
   out_3100778569800427438[43] = 0;
   out_3100778569800427438[44] = 0;
   out_3100778569800427438[45] = 0;
   out_3100778569800427438[46] = 0;
   out_3100778569800427438[47] = 0;
   out_3100778569800427438[48] = 0;
   out_3100778569800427438[49] = 0;
   out_3100778569800427438[50] = 0;
   out_3100778569800427438[51] = 0;
   out_3100778569800427438[52] = 0;
   out_3100778569800427438[53] = 0;
   out_3100778569800427438[54] = 0;
   out_3100778569800427438[55] = 0;
   out_3100778569800427438[56] = 0;
   out_3100778569800427438[57] = 0;
   out_3100778569800427438[58] = 0;
   out_3100778569800427438[59] = 0;
   out_3100778569800427438[60] = 0;
   out_3100778569800427438[61] = 0;
   out_3100778569800427438[62] = 1;
   out_3100778569800427438[63] = 0;
   out_3100778569800427438[64] = 0;
   out_3100778569800427438[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5611574007553285366) {
  H(in_vec, out_5611574007553285366);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4147073567660988626) {
  err_fun(nom_x, delta_x, out_4147073567660988626);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1544491652842928106) {
  inv_err_fun(nom_x, true_x, out_1544491652842928106);
}
void live_H_mod_fun(double *state, double *out_8263643880166488238) {
  H_mod_fun(state, out_8263643880166488238);
}
void live_f_fun(double *state, double dt, double *out_7642037060686782526) {
  f_fun(state,  dt, out_7642037060686782526);
}
void live_F_fun(double *state, double dt, double *out_3874572245833220670) {
  F_fun(state,  dt, out_3874572245833220670);
}
void live_h_4(double *state, double *unused, double *out_4643783970579663950) {
  h_4(state, unused, out_4643783970579663950);
}
void live_H_4(double *state, double *unused, double *out_4430389058913291070) {
  H_4(state, unused, out_4430389058913291070);
}
void live_h_9(double *state, double *unused, double *out_766446161399831429) {
  h_9(state, unused, out_766446161399831429);
}
void live_H_9(double *state, double *unused, double *out_6729136079531813076) {
  H_9(state, unused, out_6729136079531813076);
}
void live_h_10(double *state, double *unused, double *out_5121633474030443790) {
  h_10(state, unused, out_5121633474030443790);
}
void live_H_10(double *state, double *unused, double *out_5846836711668955195) {
  H_10(state, unused, out_5846836711668955195);
}
void live_h_12(double *state, double *unused, double *out_8647337037816411235) {
  h_12(state, unused, out_8647337037816411235);
}
void live_H_12(double *state, double *unused, double *out_8996898606764298751) {
  H_12(state, unused, out_8996898606764298751);
}
void live_h_31(double *state, double *unused, double *out_1603042384283341811) {
  h_31(state, unused, out_1603042384283341811);
}
void live_H_31(double *state, double *unused, double *out_6251335574439285042) {
  H_31(state, unused, out_6251335574439285042);
}
void live_h_32(double *state, double *unused, double *out_7556554457275842987) {
  h_32(state, unused, out_7556554457275842987);
}
void live_H_32(double *state, double *unused, double *out_3578351878613989376) {
  H_32(state, unused, out_3578351878613989376);
}
void live_h_13(double *state, double *unused, double *out_2667441994367976965) {
  h_13(state, unused, out_2667441994367976965);
}
void live_H_13(double *state, double *unused, double *out_2677123412797053228) {
  H_13(state, unused, out_2677123412797053228);
}
void live_h_14(double *state, double *unused, double *out_766446161399831429) {
  h_14(state, unused, out_766446161399831429);
}
void live_H_14(double *state, double *unused, double *out_6729136079531813076) {
  H_14(state, unused, out_6729136079531813076);
}
void live_h_33(double *state, double *unused, double *out_179669223228452346) {
  h_33(state, unused, out_179669223228452346);
}
void live_H_33(double *state, double *unused, double *out_3100778569800427438) {
  H_33(state, unused, out_3100778569800427438);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
